{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/./src/typescript/StyleEditorClass.ts","webpack://leafletstyleeditor/./src/typescript/options/index.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorImpl.ts","webpack://leafletstyleeditor/./src/typescript/form/index.ts","webpack://leafletstyleeditor/./src/typescript/form/MarkerForm.ts","webpack://leafletstyleeditor/./src/typescript/formElements/FormElement.ts","webpack://leafletstyleeditor/./src/typescript/marker/index.ts","webpack://leafletstyleeditor/./src/typescript/index.ts","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/typescript/StyleForm.ts","webpack://leafletstyleeditor/./src/typescript/Util.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorControlOptions.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorClassOptions.ts","webpack://leafletstyleeditor/./src/typescript/form/Form.ts","webpack://leafletstyleeditor/./src/typescript/formElements/index.ts","webpack://leafletstyleeditor/./src/typescript/formElements/ColorElement.ts","webpack://leafletstyleeditor/./src/typescript/marker/Marker.ts","webpack://leafletstyleeditor/./src/typescript/marker/DefaultMarker.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorOptions.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorControl.ts","webpack://leafletstyleeditor/./src/typescript/formElements/DashElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/IconElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/OpacityElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/PopupContentElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/SizeElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/WeightElement.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StyleEditorClass","L","Class","styleEditor","super","this","map","util","DefaultStyleEditorOptions","DefaultStyleEditorClassOptions","DefaultStyleEditorControlOptions","StyleEditorControlOptions_1","StyleEditorClassOptions_1","StyleEditorOptions_1","StyleEditorImpl","StyleForm_1","Util_1","options_1","options","assign","Util","createUi","editorUI","DomUtil","getContainer","styleEditorHeader","buttonNext","interiorEditorUI","title","strings","hide","tooltipWrapper","tooltipUI","innerHTML","tooltip","DomEvent","disableScrollPropagation","disableClickPropagation","on","onNext","addEventListeners","StyleForm","events","forEach","event","onEvent","hideEditor","showTooltip","stopPropagation","children","getPanes","markerPane","index","length","element","removeClass","eachLayer","addClickEvent","layer","layerIsIgnored","useGrouping","LayerGroup","Marker","Path","showEditor","removeClickEvent","off","undefined","ignoreLayerTypes","some","layerType","type","toUpperCase","removeIndicators","fireEvent","currentElement","addClass","eventName","addClickEvents","removeClickEvents","hideTooltip","target","getLayers","getCurrentLayers","filter","MarkerForm","Form","Form_1","MarkerForm_1","_1","formElements_1","formElements","ColorElement","SizeElement","parentUiElement","FormElement","StyleEditorClass_1","styleOption","parentForm","charAt","slice","uiElement","createTitle","createContent","style","showForm","showElement","hideElement","layers","markerType","setStyle","newStyle","fireChangeEvent","DefaultMarker","Marker_1","DefaultMarker_1","StyleEditorImpl_1","StyleEditorControl_1","StyleEditor","Control","StyleEditorControl","control","default","markerForm","createMarkerForm","geometryForm","createGeometryForm","addDOMEvents","addListener","lostFocus","markerDiv","clearForm","show","e","parent","className","hasClass","parentNode","UtilOptions","styleEditorEventPrefix","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","option","color","hex","toString","rgbToHex","markers","controlMarkers","Array","isArray","keys","includes","getMarkersForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","position","cancel","cancelTitle","form_1","marker_1","colorRamp","defaultMarkerColor","forms","openOnLeafletDraw","openOnLeafletEditable","formOptionKey","initializedElements","formOptionsKey","formElement","getFormElementClass","hideFormElements","hideForm","preShow","showFormElements","showFormElement","showFormElementForStyleOption","getFormElementStandardClass","WeightElement","PopupContentElement","OpacityElement","IconElement","DashElement","ColorElement_1","DashElement_1","FormElement_1","IconElement_1","OpacityElement_1","PopupContentElement_1","SizeElement_1","WeightElement_1","colorPickerDiv","getColorRamp","setSelectCallback","mt","elem","backgroundColor","selectColor","selectIconClass","size","startsWith","markerOptions","newIcon","createMarkerIcon","setIcon","getElement","setNewMarker","getNewMarkerOptions","iconOptions","icon","marker","find","iconColor","_getDefaultMarkerColor","iconSize","small","getDefaultMarkerForColor","_ensureMarkerIcon","getIconOptions","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","values","JSON","stringify","sizeToName","styleEdtior","Icon","iconUrl","_getMarkerUrlForStyle","iconAnchor","popupAnchor","tmpOptions","createIcon","outerHTML","_getMarkerUrl","url","styleEditorOptions","isEnabled","styleEditorClassOptions","disable","createUI","controlUI","cancelUI","toggle","enable","showCancelButton","hideCancelButton","stroke","backgroundPosition","selectBox","selectBoxImage","_createSelectInputImage","_toggleSelectInput","_styleSelectInputImage","_createColorSelect","_hideSelectOptions","wrapper","image","getAttribute","setAttribute","selectOptions","selectOptionWrapper","selectOptionWrapperClasses","selectOption","_selectOptionClasses","selectImage","nodeName","childNodes","_selectMarker","currentColorElement","_getCurrentColorElement","_getValue","label","slider","max","min","step","_setStyle","getStyle","innerText","textArea","selectedElement","getCurrentMarker","popupContent","inputText","getPopup","bindPopup","popup1","setContent","select","medium","large","weight"],"mappings":"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","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorClass = void 0;\nclass StyleEditorClass extends L.Class {\n    constructor(styleEditor) {\n        super();\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.util = styleEditor.util;\n    }\n}\nexports.StyleEditorClass = StyleEditorClass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = exports.DefaultStyleEditorClassOptions = exports.DefaultStyleEditorControlOptions = void 0;\nconst StyleEditorControlOptions_1 = require(\"./StyleEditorControlOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorControlOptions\", { enumerable: true, get: function () { return StyleEditorControlOptions_1.DefaultStyleEditorControlOptions; } });\nconst StyleEditorClassOptions_1 = require(\"./StyleEditorClassOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorClassOptions\", { enumerable: true, get: function () { return StyleEditorClassOptions_1.DefaultStyleEditorClassOptions; } });\nconst StyleEditorOptions_1 = require(\"./StyleEditorOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorOptions\", { enumerable: true, get: function () { return StyleEditorOptions_1.DefaultStyleEditorOptions; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorImpl = void 0;\nconst StyleForm_1 = require(\"./StyleForm\");\nconst Util_1 = require(\"./Util\");\nconst options_1 = require(\"./options\");\nclass StyleEditorImpl extends L.Class {\n    constructor(map, options) {\n        super();\n        this.map = map;\n        this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorOptions), options);\n        this.util = new Util_1.Util(this);\n        this.createUi();\n    }\n    createUi() {\n        const editorUI = this.editorUI = L.DomUtil.create('div', 'leaflet-styleeditor', this.map.getContainer());\n        const styleEditorHeader = L.DomUtil.create('div', 'leaflet-styleeditor-header', editorUI);\n        const styleEditorInterior = this.interiorEditorUI = L.DomUtil.create('div', 'leaflet-styleeditor-interior', editorUI);\n        const buttonNext = L.DomUtil.create('button', 'leaflet-styleeditor-button styleeditor-hideBtn', styleEditorHeader);\n        buttonNext.title = this.options.strings.hide;\n        const tooltipWrapper = this.tooltipUI = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.map.getContainer());\n        const tooltip = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip', tooltipWrapper);\n        tooltip.innerHTML = this.options.strings.tooltip;\n        // do not propagate scrolling events on the ui to the map\n        L.DomEvent.disableScrollPropagation(editorUI);\n        L.DomEvent.disableScrollPropagation(buttonNext);\n        // do not propagate click events on the ui to the map\n        L.DomEvent.disableClickPropagation(editorUI);\n        L.DomEvent.disableClickPropagation(buttonNext);\n        // select next layer to style\n        L.DomEvent.on(buttonNext, 'click', this.onNext, this);\n        this.addEventListeners(this.map);\n        new StyleForm_1.StyleForm(this);\n    }\n    addEventListeners(map) {\n        this.options.events.forEach(event => map.on(event, this.onEvent));\n    }\n    onEvent(event) {\n        // TODO\n    }\n    onNext(event) {\n        this.hideEditor();\n        this.showTooltip();\n        event.stopPropagation();\n    }\n    removeIndicators() {\n        const children = this.map.getPanes().markerPane.children;\n        for (let index = 0; index < children.length; index++) {\n            const element = children[index];\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    addClickEvents() {\n        this.map.eachLayer(this.addClickEvent, this);\n    }\n    addClickEvent(layer) {\n        if (this.layerIsIgnored(layer)) {\n            return;\n        }\n        if (this.options.useGrouping && layer instanceof L.LayerGroup) {\n            //this.options._layerGroups.push(layer)\n        }\n        else if (layer instanceof L.Marker || layer instanceof L.Path) {\n            //let evt = layer.on('click', this.initChangeStyle, this)\n            //this.options._editLayers.push(evt)\n        }\n        layer.on('click', this.showEditor, this);\n    }\n    removeClickEvents() {\n        this.map.eachLayer(this.removeClickEvent, this);\n    }\n    removeClickEvent(layer) {\n        layer.off('click', this.showEditor, this);\n    }\n    layerIsIgnored(layer) {\n        if (layer === undefined) {\n            return false;\n        }\n        return this.options.ignoreLayerTypes.some(layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase());\n    }\n    hideEditor() {\n        L.DomUtil.removeClass(this.editorUI, 'editor-enabled');\n        this.removeIndicators();\n        this.fireEvent('hidden');\n    }\n    // TODO what type is event?!\n    showEditor(event) {\n        if (event) {\n            this.currentElement = event;\n        }\n        L.DomUtil.addClass(this.editorUI, 'editor-enabled');\n        this.fireEvent('visible');\n    }\n    showTooltip() {\n        L.DomUtil.removeClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    hideTooltip() {\n        L.DomUtil.addClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    fireEvent(eventName, layer) {\n    }\n    enable() {\n        this.addClickEvents();\n        this.showTooltip();\n        this.showEditor();\n    }\n    disable() {\n        this.removeClickEvents();\n        this.hideTooltip();\n        this.hideEditor();\n    }\n    getCurrentLayers() {\n        // TODO !!!! currentelemnt target?!\n        if (this.currentElement.target instanceof L.LayerGroup)\n            return this.currentElement.target.getLayers();\n        else\n            return [this.currentElement.target];\n    }\n    getCurrentMarker() {\n        return this.getCurrentLayers().filter((layer) => { layer instanceof L.Marker; });\n    }\n}\nexports.StyleEditorImpl = StyleEditorImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = exports.Form = void 0;\nconst Form_1 = require(\"./Form\");\nObject.defineProperty(exports, \"Form\", { enumerable: true, get: function () { return Form_1.Form; } });\nconst MarkerForm_1 = require(\"./MarkerForm\");\nObject.defineProperty(exports, \"MarkerForm\", { enumerable: true, get: function () { return MarkerForm_1.MarkerForm; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = void 0;\nconst _1 = require(\".\");\nconst formElements_1 = require(\"../formElements\");\nconst formOptionKey = 'marker';\nconst formElements = {\n    //'icon': new IconElement(),\n    'color': formElements_1.ColorElement,\n    'size': formElements_1.SizeElement\n    //'popupContent': new PopupContentElement()\n};\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends _1.Form {\n    constructor(styleEditor, parentUiElement) {\n        super(styleEditor, formOptionKey, parentUiElement, formElements);\n    }\n}\nexports.MarkerForm = MarkerForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormElement = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleOption, parentForm, parentUiElement, title) {\n        super(parentForm.styleEditor);\n        this.styleOption = styleOption;\n        // if no title is given use styling option\n        this.title = title || styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        this.parentForm = parentForm;\n        this.create(parentUiElement);\n    }\n    /** create uiElement and content */\n    create(parentUiElement) {\n        this.uiElement =\n            L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle();\n        this.createContent();\n    }\n    /** create title */\n    createTitle() {\n        let title = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.uiElement);\n        title.innerHTML = this.title + ':';\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show(currentElement) {\n        this.style(currentElement);\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.uiElement);\n    }\n    /** style the FormElement */\n    style(currentElement) {\n    }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(value) {\n        const layers = this.parentForm.styleEditor.getCurrentLayers();\n        // update layers\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof L.Marker) {\n                new this.styleEditor.options.markerType(this.styleEditor).setStyle(this.styleOption, value);\n            }\n            else if (layer instanceof L.Path) {\n                let newStyle = {};\n                newStyle[this.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.parentForm.style();\n    }\n}\nexports.FormElement = FormElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = exports.Marker = void 0;\nconst Marker_1 = require(\"./Marker\");\nObject.defineProperty(exports, \"Marker\", { enumerable: true, get: function () { return Marker_1.Marker; } });\nconst DefaultMarker_1 = require(\"./DefaultMarker\");\nObject.defineProperty(exports, \"DefaultMarker\", { enumerable: true, get: function () { return DefaultMarker_1.DefaultMarker; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst StyleEditorControl_1 = require(\"./StyleEditorControl\");\nrequire('../css/Leaflet.StyleEditor.css');\nL.StyleEditor = StyleEditorImpl_1.StyleEditorImpl;\nL.styleEditor = function (map, options) { return new StyleEditorImpl_1.StyleEditorImpl(map, options); };\nL.Control.StyleEditor = StyleEditorControl_1.StyleEditorControl;\nL.control.styleEditor = function (options) { return new StyleEditorControl_1.StyleEditorControl(options); };\nexports.default = L;\n","module.exports = undefined;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleForm = void 0;\nconst StyleEditorClass_1 = require(\"./StyleEditorClass\");\nclass StyleForm extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor) {\n        super(styleEditor);\n        this.markerForm = this.createMarkerForm();\n        this.geometryForm = this.createGeometryForm();\n        this.addDOMEvents();\n    }\n    addDOMEvents() {\n        L.DomEvent.addListener(this.map, 'click', this.lostFocus, this);\n        L.DomEvent.addListener(this.styleEditor.editorUI, 'click', this.lostFocus, this);\n    }\n    clearForm() {\n        this.markerForm.hide();\n        this.geometryForm.hide();\n    }\n    createMarkerForm() {\n        let markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-marker', this.styleEditor.interiorEditorUI);\n        return new this.styleEditor.options.markerForm(this.styleEditor, markerDiv);\n    }\n    createGeometryForm() {\n        let markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-geometry', this.styleEditor.interiorEditorUI);\n        return new this.styleEditor.options.geometryForm(this.styleEditor, markerDiv);\n    }\n    showMarkerForm() {\n        this.clearForm();\n        this.markerForm.show();\n    }\n    showGeometryForm() {\n        this.clearForm();\n        this.geometryForm.show();\n    }\n    fireChangeEvent(element) {\n        this.util.fireChangeEvent(element);\n    }\n    lostFocus(e) {\n        let parent = e.target;\n        for (let i = 0; i < 10; i++) {\n            if (!parent) {\n                break;\n            }\n            if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n                return;\n            }\n            parent = parent.parentNode;\n        }\n        this.markerForm.lostFocus();\n        this.geometryForm.lostFocus();\n    }\n}\nexports.StyleForm = StyleForm;\n","\"use strict\";\n/**\n * Helper functions used throuhgout the project\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.UtilOptions = void 0;\nclass UtilOptions {\n}\nexports.UtilOptions = UtilOptions;\nclass Util {\n    constructor(styleEditor) {\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.options = styleEditor.options;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.map.fireEvent(this.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n            this._componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get current style of current element */\n    getStyle(option) {\n        debugger;\n        /* TODO?!?!?\n        let style = this.styleEditor.getCurrentLayers()[0].options[option]\n        if (style) {\n          return style\n        }\n    */\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(currentElement, option, value) {\n        if (currentElement instanceof L.Marker) {\n            new this.styleEditor.options.markerType(this.styleEditor).setStyle(option, value);\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    _componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getMarkersForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = new this.styleEditor.options.markerType(this.styleEditor).markers;\n        let controlMarkers = this.styleEditor.options.markers;\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getMarkersForColor(color);\n        let defMarkers = [];\n        let defaultMarker = this.styleEditor.options.defaultMarkerIcon;\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = new this.styleEditor.options.markerType(this.styleEditor).defaultMarkerIcon;\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n}\nexports.Util = Util;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorControlOptions = void 0;\nexports.DefaultStyleEditorControlOptions = {\n    position: 'topleft',\n    strings: {\n        title: 'Style Editor',\n        cancel: 'cancel',\n        cancelTitle: 'cancel'\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorClassOptions = void 0;\nconst form_1 = require(\"../form\");\nconst marker_1 = require(\"../marker\");\nexports.DefaultStyleEditorClassOptions = {\n    position: 'topleft',\n    colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n    defaultColor: null,\n    markerType: marker_1.DefaultMarker,\n    markers: null,\n    defaultMarkerIcon: null,\n    defaultMarkerColor: null,\n    markerForm: form_1.MarkerForm,\n    geometryForm: form_1.MarkerForm,\n    ignoreLayerTypes: [],\n    forms: {},\n    events: [],\n    openOnLeafletDraw: true,\n    openOnLeafletEditable: true,\n    showTooltip: true,\n    strings: {\n        tooltip: 'Click on the element you want to style',\n        hide: 'Hide Style Editor',\n    },\n    useGrouping: true,\n    styleEditorEventPrefix: 'styleeditor:',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Form = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nclass Form extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, formOptionKey, parentUiElement, formElements) {\n        super(styleEditor);\n        this.initializedElements = {};\n        this.formOptionsKey = formOptionKey;\n        this.parentUiElement = parentUiElement;\n        this.formElements = formElements;\n        this.create();\n    }\n    /** create every FormElement in the parentUiElement */\n    create() {\n        for (let key in this.formElements) {\n            const formElement = this.getFormElementClass(key);\n            if (formElement !== undefined) {\n                this.initializedElements[key] = new formElement(this, this.parentUiElement);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show(currentElement) {\n        this.preShow();\n        this.showFormElements();\n        this.showForm();\n        this.style(currentElement);\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() {\n    }\n    /** make every FormElement visible */\n    showFormElements() {\n        for (let key in this.initializedElements) {\n            this.showFormElement(this.initializedElements[key]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style(currentElement) {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].style(currentElement);\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].lostFocus();\n        }\n    }\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement(formElement) {\n        // check wether element should be shown or not\n        if (this.showFormElementForStyleOption(formElement.styleOption)) {\n            formElement.show();\n        }\n        else {\n            formElement.hide();\n        }\n    }\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass(styleOption) {\n        let formElementKeys = Object.keys(this.formElements);\n        if (formElementKeys.indexOf(styleOption) >= 0) {\n            let FormElement = this.formElements[styleOption];\n            if (FormElement) {\n                // may be a dictionary\n                if (typeof FormElement === 'boolean') {\n                    return this.getFormElementStandardClass(styleOption);\n                }\n                if ('formElement' in FormElement && 'boolean' in FormElement) {\n                    FormElement = FormElement['formElement'];\n                }\n            }\n            // if nothing works return it\n            return this.getFormElementStandardClass(styleOption);\n        }\n    }\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     */\n    showFormElementForStyleOption(styleOption) {\n        /*\n        if (styleOption in this.formElements) {\n          let styleFormElement = this.initializedElements[styleOption]\n    \n          // maybe a function is given to declare when to show the FormElement\n          if (typeof styleFormElement === 'function') {\n            try {\n              return styleFormElement(this.util.getCurrentElement())\n            } catch (err) {\n              // the given function presumably is a constructor -> always show it\n              return true\n            }\n          }\n    \n          // maybe a boolean is given to indicate whether to show it\n          if (typeof styleFormElement === 'boolean') {\n            return styleFormElement\n          }\n    \n          // check for dictionary\n          if ('boolean' in styleFormElement) {\n            // in a dictionary boolean may be a function or boolean\n            if (typeof styleFormElement['boolean'] === 'function') {\n              return styleFormElement['boolean'](this.util.getCurrentElement())\n            }\n            return styleFormElement['boolean']\n          }\n          return true\n        }\n        TODO */\n        return false;\n    }\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass(styleOption) {\n        return this.formElements[styleOption];\n    }\n}\nexports.Form = Form;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightElement = exports.SizeElement = exports.PopupContentElement = exports.OpacityElement = exports.IconElement = exports.FormElement = exports.DashElement = exports.ColorElement = void 0;\nconst ColorElement_1 = require(\"./ColorElement\");\nObject.defineProperty(exports, \"ColorElement\", { enumerable: true, get: function () { return ColorElement_1.ColorElement; } });\nconst DashElement_1 = require(\"./DashElement\");\nObject.defineProperty(exports, \"DashElement\", { enumerable: true, get: function () { return DashElement_1.DashElement; } });\nconst FormElement_1 = require(\"./FormElement\");\nObject.defineProperty(exports, \"FormElement\", { enumerable: true, get: function () { return FormElement_1.FormElement; } });\nconst IconElement_1 = require(\"./IconElement\");\nObject.defineProperty(exports, \"IconElement\", { enumerable: true, get: function () { return IconElement_1.IconElement; } });\nconst OpacityElement_1 = require(\"./OpacityElement\");\nObject.defineProperty(exports, \"OpacityElement\", { enumerable: true, get: function () { return OpacityElement_1.OpacityElement; } });\nconst PopupContentElement_1 = require(\"./PopupContentElement\");\nObject.defineProperty(exports, \"PopupContentElement\", { enumerable: true, get: function () { return PopupContentElement_1.PopupContentElement; } });\nconst SizeElement_1 = require(\"./SizeElement\");\nObject.defineProperty(exports, \"SizeElement\", { enumerable: true, get: function () { return SizeElement_1.SizeElement; } });\nconst WeightElement_1 = require(\"./WeightElement\");\nObject.defineProperty(exports, \"WeightElement\", { enumerable: true, get: function () { return WeightElement_1.WeightElement; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorElement = void 0;\nconst FormElement_1 = require(\"./FormElement\");\nconst MarkerForm_1 = require(\"../form/MarkerForm\");\nconst title = \"color\";\nconst styleOption = \"color\";\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.FormElement {\n    constructor(parentForm, parentUiElement) {\n        super(styleOption, parentForm, parentUiElement, title);\n    }\n    createContent() {\n        this.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.uiElement);\n        this.getColorRamp().forEach(this.setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    getColorRamp() {\n        // if markers have own colorRamp use it\n        if (this.parentForm instanceof MarkerForm_1.MarkerForm) {\n            const mt = new this.styleEditor.options.markerType(this.styleEditor);\n            if (!!mt.colorRamp) {\n                return mt.colorRamp;\n            }\n        }\n        return this.styleEditor.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    setSelectCallback(color) {\n        let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        L.DomEvent.addListener(elem, 'click', this.selectColor, this);\n    }\n    /** set style for chosen color */\n    selectColor(event) {\n        event.stopPropagation();\n        this.setStyle(this.util.rgbToHex(event.target.style.backgroundColor));\n    }\n}\nexports.ColorElement = ColorElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Marker = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\nclass Marker extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, selectIconClass) {\n        super(styleEditor);\n        this.size = {\n            'small': [20, 50],\n            'medium': [30, 70],\n            'large': [35, 90]\n        };\n        /** set standard icon */\n        if (selectIconClass !== '' && !selectIconClass.startsWith('leaflet-styleeditor-select-image')) {\n            this.selectIconClass = 'leaflet-styleeditor-select-image-' + selectIconClass;\n        }\n    }\n    /** create new Marker and show it */\n    setNewMarker(markerOptions) {\n        let newIcon = this.createMarkerIcon(markerOptions);\n        this.styleEditor.getCurrentLayers().forEach((currentElement) => {\n            if (currentElement instanceof L.Marker) {\n                currentElement.setIcon(newIcon);\n                if (currentElement instanceof L.LayerGroup) {\n                    currentElement.eachLayer(function (layer) {\n                        if (layer instanceof L.Marker)\n                            L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected');\n                    });\n                }\n                else {\n                    L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n                }\n            }\n        });\n    }\n    /** set styling options */\n    setStyle(styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        this.setNewMarker(this.getNewMarkerOptions(styleOption, value));\n    }\n    /** create HTML used to */\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n    }\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions() {\n        let markerOptions = {};\n        const layers = this.styleEditor.getCurrentLayers();\n        const marker = layers.find((layer) => layer instanceof L.Marker);\n        if (marker) {\n            markerOptions = marker.options.icon.options;\n        }\n        if (Object.keys(markerOptions).length > 0) {\n            return markerOptions;\n        }\n        markerOptions.iconColor = this._getDefaultMarkerColor();\n        markerOptions.iconSize = this.size.small;\n        markerOptions.icon = this.util.getDefaultMarkerForColor(markerOptions.iconColor);\n        markerOptions = this._ensureMarkerIcon(markerOptions);\n        return markerOptions;\n    }\n    getNewMarkerOptions(key, value) {\n        let iconOptions = this.getIconOptions();\n        iconOptions[key] = value;\n        return iconOptions;\n    }\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    _ensureMarkerIcon(iconOptions) {\n        let markers = this.util.getMarkersForColor(iconOptions.iconColor);\n        if (markers.includes(iconOptions.icon)) {\n            return iconOptions;\n        }\n        iconOptions.icon = this.util.getDefaultMarkerForColor(iconOptions.iconColor);\n        return iconOptions;\n    }\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    _getDefaultMarkerColor() {\n        let markerTypeColorRamp = this.colorRamp;\n        let generalColorRamp = this.styleEditor.options.colorRamp;\n        let intersectedColorRamp = [];\n        if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n            intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n));\n            if (intersectedColorRamp.length === 0) {\n                intersectedColorRamp = markerTypeColorRamp;\n            }\n        }\n        else {\n            intersectedColorRamp = generalColorRamp;\n        }\n        let color = this.styleEditor.options.defaultMarkerColor;\n        if (color !== null && !intersectedColorRamp.includes(color)) {\n            color = null;\n        }\n        if (color === null) {\n            color = this.styleEditor.options.defaultColor;\n            if (color !== null && !intersectedColorRamp.includes(color)) {\n                color = null;\n            }\n            if (color === null) {\n                color = intersectedColorRamp[0];\n            }\n        }\n        return this.util.rgbToHex(color);\n    }\n    /** return size as keyword */\n    sizeToName(size) {\n        let keys = Object.keys(this.size);\n        if (typeof size === 'string') {\n            if (size === 's') {\n                size = 'small';\n            }\n            else if (size === 'm') {\n                size = 'medium';\n            }\n            else if (size === 'l') {\n                size = 'large';\n            }\n            for (let i = 0; i < keys.length; i++) {\n                if (this.size[keys[i]] === size) {\n                    return keys[i];\n                }\n            }\n        }\n        let values = Object.values(this.size);\n        for (let i = 0; i < values.length; i++) {\n            if (JSON.stringify(size) === JSON.stringify(values[i])) {\n                return keys[i];\n            }\n        }\n        return keys[0];\n    }\n    /** return size as [x,y] */\n    sizeToPixel(size) {\n        size = this.sizeToName(size);\n        return this.size[size];\n    }\n}\nexports.Marker = Marker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = void 0;\nconst _1 = require(\".\");\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nclass DefaultMarker extends _1.Marker {\n    constructor(styleEdtior) {\n        super(styleEdtior, \"defaultmarker\");\n        this.markers = [\n            'circle-stroked',\n            'circle',\n            'square-stroked',\n            'square',\n            'triangle-stroked', 'triangle',\n            'star-stroked',\n            'star',\n            'cross',\n            'marker-stroked',\n            'marker',\n            'religious-jewish',\n            'religious-christian',\n            'religious-muslim',\n            'cemetery',\n            'rocket',\n            'airport',\n            'heliport',\n            'rail',\n            'rail-metro',\n            'rail-light',\n            'bus',\n            'fuel',\n            'parking',\n            'parking-garage',\n            'airfield',\n            'roadblock',\n            'ferry',\n            'harbor',\n            'bicycle',\n            'park',\n            'park2',\n            'museum',\n            'lodging',\n            'monument',\n            'zoo',\n            'garden',\n            'campsite',\n            'theatre',\n            'art-gallery',\n            'pitch',\n            'soccer',\n            'america-football',\n            'tennis',\n            'basketball',\n            'baseball',\n            'golf',\n            'swimming',\n            'cricket',\n            'skiing',\n            'school',\n            'college',\n            'library',\n            'post',\n            'fire-station',\n            'town-hall',\n            'police',\n            'prison',\n            'embassy',\n            'beer',\n            'restaurant',\n            'cafe',\n            'shop',\n            'fast-food',\n            'bar',\n            'bank',\n            'grocery',\n            'cinema',\n            'pharmacy',\n            'hospital',\n            'danger',\n            'industrial',\n            'warehouse',\n            'commercial',\n            'building',\n            'place-of-worship',\n            'alcohol-shop',\n            'logging',\n            'oil-well',\n            'slaughterhouse',\n            'dam',\n            'water',\n            'wetland',\n            'disability',\n            'telephone',\n            'emergency-telephone',\n            'toilets',\n            'waste-basket',\n            'music',\n            'land-use',\n            'city',\n            'town',\n            'village',\n            'farm',\n            'bakery',\n            'dog-park',\n            'lighthouse',\n            'clothing-store',\n            'polling-place',\n            'playground',\n            'entrance',\n            'heart',\n            'london-underground',\n            'minefield',\n            'rail-underground',\n            'rail-above',\n            'camera',\n            'laundry',\n            'car',\n            'suitcase',\n            'hairdresser',\n            'chemist',\n            'mobilephone',\n            'scooter'\n        ];\n    }\n    createMarkerIcon(iconOptions) {\n        let iconSize = iconOptions.iconSize;\n        return new L.Icon({\n            iconUrl: this._getMarkerUrlForStyle(iconOptions),\n            iconSize: iconOptions.iconSize,\n            iconColor: iconOptions.iconColor,\n            icon: iconOptions.icon,\n            className: this.selectIconClass,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        let tmpOptions = {};\n        tmpOptions.iconSize = this.size.small;\n        tmpOptions.icon = icon;\n        tmpOptions.iconColor = iconOptions.iconColor;\n        parentUiElement.innerHTML = this.createMarkerIcon(tmpOptions).createIcon().outerHTML;\n    }\n    _getMarkerUrlForStyle(iconOptions) {\n        return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon);\n    }\n    _getMarkerUrl(size, color, icon) {\n        size = this.sizeToName(size)[0];\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size;\n        if (icon) {\n            url += '-' + icon;\n        }\n        return url + '+' + color + '.png';\n    }\n}\nexports.DefaultMarker = DefaultMarker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = void 0;\nconst _1 = require(\".\");\nexports.DefaultStyleEditorOptions = Object.assign(Object.assign(Object.assign({}, _1.DefaultStyleEditorClassOptions), _1.DefaultStyleEditorControlOptions), { strings: {\n        title: _1.DefaultStyleEditorControlOptions.strings.title,\n        cancel: _1.DefaultStyleEditorControlOptions.strings.cancel,\n        cancelTitle: _1.DefaultStyleEditorControlOptions.strings.cancelTitle,\n        tooltip: _1.DefaultStyleEditorClassOptions.strings.tooltip,\n        hide: _1.DefaultStyleEditorClassOptions.strings.hide\n    } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorControl = void 0;\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst options_1 = require(\"./options\");\n/**\n * StyleEditorControl creates a { L.Control }\n * which enables the user to enable and disable Leaflet.StyleEditor\n */\nclass StyleEditorControl extends L.Control {\n    constructor(options, styleEditor, styleEditorOptions) {\n        super();\n        this.isEnabled = false;\n        if (styleEditorOptions === undefined) {\n            this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorControlOptions), options);\n            this.styleEditor = styleEditor;\n        }\n        else {\n            this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorControlOptions), styleEditorOptions);\n            this.styleEditorClassOptions = Object.assign(Object.assign({}, options_1.DefaultStyleEditorClassOptions), styleEditorOptions);\n        }\n    }\n    /**\n     * Create the Control element and its HTMLElements\n     * @param map the map where the control should be added to\n     */\n    onAdd(map) {\n        if (this.styleEditor === undefined) {\n            this.styleEditor = new StyleEditorImpl_1.StyleEditorImpl(map, this.styleEditorClassOptions);\n        }\n        // disable styleEditor if using control element\n        this.styleEditor.disable();\n        return this.createUI();\n    }\n    createUI() {\n        const controlUI = L.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar');\n        const controlDiv = L.DomUtil.create('a', 'leaflet-control-styleeditor-interior', controlUI);\n        controlDiv.title = this.options.strings.title;\n        const cancelUI = this.cancelUI = L.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlUI);\n        cancelUI.innerHTML = this.options.strings.cancel;\n        cancelUI.title = this.options.strings.cancelTitle;\n        L.DomEvent.disableScrollPropagation(controlUI);\n        L.DomEvent.disableScrollPropagation(cancelUI);\n        L.DomEvent.disableClickPropagation(controlUI);\n        L.DomEvent.disableClickPropagation(cancelUI);\n        // toggle UI visibility\n        L.DomEvent.on(controlUI, 'click', this.toggle, this);\n        return controlUI;\n    }\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    enable() {\n        this.isEnabled = true;\n        this.showCancelButton();\n        this.styleEditor.enable();\n    }\n    disable() {\n        if (this.isEnabled) {\n            this.isEnabled = false;\n            this.hideCancelButton();\n            this.styleEditor.disable();\n        }\n    }\n    showCancelButton() {\n        L.DomUtil.removeClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    hideCancelButton() {\n        L.DomUtil.addClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n}\nexports.StyleEditorControl = StyleEditorControl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DashElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for styling the dash attribute\n */\nclass DashElement extends _1.FormElement {\n    /** create the three standard dash options */\n    createContent() {\n        let stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -75px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('1');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -95px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('10, 10');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -115px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('15, 10, 1, 10');\n        }, this);\n    }\n}\nexports.DashElement = DashElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IconElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for styling the icon\n */\nclass IconElement extends _1.FormElement {\n    /** create the icon selectBoxes */\n    createContent() {\n        let selectBox = L.DomUtil.create('div', 'leaflet-styleeditor-select', this.uiElement);\n        this.selectBoxImage = this._createSelectInputImage(selectBox);\n        L.DomEvent.addListener(selectBox, 'click', this._toggleSelectInput, this);\n    }\n    /** show the correct icon in the correct color if the icon or color changed */\n    style() {\n        let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).getIconOptions();\n        this._styleSelectInputImage(this.selectBoxImage, iconOptions.icon, iconOptions.iconColor);\n        this._createColorSelect(iconOptions.iconColor);\n        this._hideSelectOptions();\n    }\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus() {\n        this._hideSelectOptions();\n    }\n    /** create image container that hides/shows the iconSelectBox */\n    _createSelectInputImage(parentUiElement) {\n        let wrapper = L.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement);\n        return L.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper);\n    }\n    /** create appropriate image for color and icon */\n    _styleSelectInputImage(image, icon, color) {\n        if (!icon) {\n            icon = image.getAttribute('value');\n            if (!icon) {\n                return;\n            }\n        }\n        let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).getIconOptions();\n        if (color) {\n            iconOptions.iconColor = color;\n        }\n        image.innerHTML = '';\n        // TODO ?!let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).createSelectHTML(image, iconOptions, icon)\n        image.setAttribute('value', icon);\n    }\n    /** create the selectBox with the icons in the correct color */\n    _createColorSelect(color) {\n        if (!this.selectOptions) {\n            this.selectOptions = {};\n        }\n        if (color in this.selectOptions) {\n            return;\n        }\n        let selectOptionWrapper = L.DomUtil.create('ul', this.selectOptionWrapperClasses, this.uiElement);\n        this.util.getMarkersForColor(color).forEach(function (option) {\n            let selectOption = L.DomUtil.create('li', this._selectOptionClasses, selectOptionWrapper);\n            let selectImage = this._createSelectInputImage(selectOption);\n            this._styleSelectInputImage(selectImage, option, color);\n        }, this);\n        this.selectOptions[color] = selectOptionWrapper;\n        L.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n            e.stopPropagation();\n            let target = e.target;\n            if (target.nodeName === 'UL') {\n                return;\n            }\n            const parentNode = target.parentNode;\n            if (parentNode.className === 'leaflet-styleeditor-select-image') {\n                target = parentNode;\n            }\n            else {\n                while (target && target.className !== 'leaflet-styleeditor-select-image') {\n                    target = target.childNodes[0];\n                }\n            }\n            this._selectMarker({\n                'target': target\n            }, this);\n        }, this);\n    }\n    /** show/hide iconSelectBox */\n    _toggleSelectInput(e) {\n        let currentColorElement = this._getCurrentColorElement(this.util.rgbToHex(new this.styleEditor.options.markerType(this.styleEditor).getIconOptions().iconColor));\n        let show = false;\n        if (currentColorElement) {\n            show = L.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden');\n        }\n        this._hideSelectOptions();\n        if (show) {\n            this.util.showElement(currentColorElement);\n        }\n    }\n    /** called when user selects a marker */\n    _selectMarker(e) {\n        let value = this._getValue(e.target);\n        // update style\n        this.selectBoxImage.setAttribute('value', value);\n        this.setStyle(value);\n        this._hideSelectOptions();\n    }\n    /** helper function to return attribute value of target */\n    _getValue(target) {\n        return target.getAttribute('value');\n    }\n    /** return correct selectBox depending on which color is currently chosen */\n    _getCurrentColorElement(color) {\n        if (!this.selectOptions[color]) {\n            this._createColorSelect(color);\n        }\n        return this.selectOptions[color];\n    }\n    /** hide open SelectOption */\n    _hideSelectOptions() {\n        for (let selectOption in this.selectOptions) {\n            this.util.hideElement(this.selectOptions[selectOption]);\n        }\n    }\n}\nexports.IconElement = IconElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpacityElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used to style opacity\n */\nclass OpacityElement extends _1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.uiElement);\n        this.slider = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.uiElement);\n        this.slider.type = 'range';\n        this.slider.max = '1';\n        this.slider.min = '0';\n        this.slider.step = '0.01';\n        this.slider.value = '0.5';\n        // add event listeners\n        L.DomEvent.addListener(this.slider, 'change', this._setStyle, this);\n        L.DomEvent.addListener(this.slider, 'input', this._setStyle, this);\n        L.DomEvent.addListener(this.slider, 'keyup', this._setStyle, this);\n        L.DomEvent.addListener(this.slider, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.slider.value = this.util.getStyle(this.styleOption);\n        this.label.innerText = (100 * parseInt(this.slider.value)).toString + '%';\n    }\n    /** communicate opacity value */\n    _setStyle() {\n        this.setStyle(this.slider.value);\n    }\n}\nexports.OpacityElement = OpacityElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PopupContentElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nclass PopupContentElement extends _1.FormElement {\n    createContent() {\n        this.textArea = L.DomUtil.create('textarea', 'leaflet-styleeditor-input', this.uiElement);\n        L.DomEvent.addListener(this.textArea, 'change', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        let selectedElement = this.styleEditor.getCurrentMarker()[0];\n        if (selectedElement && selectedElement.options) {\n            this.textArea.value = selectedElement.options.popupContent || '';\n        }\n    }\n    /** communicate popupContent value */\n    _setStyle() {\n        let layers = this.styleEditor.getCurrentLayers();\n        let inputText = this.textArea.value;\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer && layer.getPopup && layer.bindPopup) {\n                let popup1 = layer.getPopup();\n                if (popup1) {\n                    popup1.setContent(inputText);\n                }\n                else {\n                    layer.bindPopup(inputText);\n                }\n                /* TODO ?! tmp store the text content for init next time\n                layer.options = layer.options || {}\n                layer.options.popupContent = inputText */\n            }\n        }\n        this.setStyle(inputText);\n    }\n}\nexports.PopupContentElement = PopupContentElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeElement = void 0;\nconst _1 = require(\".\");\nconst styleOption = 'size';\nconst title = 'size';\n/**\n * FormElement to set style of an icon\n */\nclass SizeElement extends _1.FormElement {\n    constructor(parentForm, parentUiElement) {\n        super(styleOption, parentForm, parentUiElement, title);\n    }\n    /** create the 3 standard icon sizes */\n    createContent() {\n        let select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.small);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.medium);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.large);\n        }, this);\n    }\n}\nexports.SizeElement = SizeElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used to style weight\n */\nclass WeightElement extends _1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.uiElement);\n        this.weight = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.uiElement);\n        this.weight.type = 'range';\n        this.weight.min = '0';\n        this.weight.max = '20';\n        this.weight.step = '1';\n        this.weight.value = '4';\n        // add event listeners\n        L.DomEvent.addListener(this.weight, 'change', this._setStyle, this);\n        L.DomEvent.addListener(this.weight, 'input', this._setStyle, this);\n        L.DomEvent.addListener(this.weight, 'keyup', this._setStyle, this);\n        L.DomEvent.addListener(this.weight, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.weight.value = this.util.getStyle(this.styleOption);\n        this.label.innerText = this.weight.value;\n    }\n    /** communicate weight value */\n    _setStyle() {\n        this.setStyle(this.weight.value);\n    }\n}\nexports.WeightElement = WeightElement;\n"],"sourceRoot":""}