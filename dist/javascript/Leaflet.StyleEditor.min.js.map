{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/./src/typescript/formElements/index.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorClass.ts","webpack://leafletstyleeditor/./src/typescript/options/index.ts","webpack://leafletstyleeditor/./src/typescript/form/index.ts","webpack://leafletstyleeditor/./src/typescript/formElements/FormElement.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorImpl.ts","webpack://leafletstyleeditor/./src/typescript/form/MarkerForm.ts","webpack://leafletstyleeditor/./src/typescript/marker/index.ts","webpack://leafletstyleeditor/./src/typescript/index.ts","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/typescript/StyleForm.ts","webpack://leafletstyleeditor/./src/typescript/Util.ts","webpack://leafletstyleeditor/./src/typescript/form/Form.ts","webpack://leafletstyleeditor/./src/typescript/formElements/ColorElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/DashElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/IconElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/OpacityElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/PopupContentElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/SizeElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/WeightElement.ts","webpack://leafletstyleeditor/./src/typescript/form/GeometryForm.ts","webpack://leafletstyleeditor/./src/typescript/marker/Marker.ts","webpack://leafletstyleeditor/./src/typescript/marker/DefaultMarker.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorOptions.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorControl.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WeightElement","SizeElement","PopupContentElement","OpacityElement","IconElement","FormElement","DashElement","ColorElement","ColorElement_1","DashElement_1","FormElement_1","IconElement_1","OpacityElement_1","PopupContentElement_1","SizeElement_1","WeightElement_1","StyleEditorClass","L","Class","styleEditor","super","this","map","util","DefaultStyleEditorOptions","StyleEditorOptions_1","MarkerForm","GeometryForm","Form","Form_1","MarkerForm_1","GeometryForm_1","StyleEditorClass_1","parentForm","parentUiElement","styleOption","uiElement","DomUtil","createTitle","createContent","innerHTML","title","charAt","toUpperCase","slice","style","showForm","showElement","hideElement","layers","getCurrentLayers","length","layer","Marker","options","markerType","setStyle","Path","newStyle","fireChangeEvent","StyleEditorImpl","StyleForm_1","Util_1","options_1","assign","Util","createUi","editorUI","getContainer","styleEditorHeader","interiorEditorUI","buttonNext","strings","hide","tooltipWrapper","tooltipUI","tooltip","DomEvent","disableScrollPropagation","disableClickPropagation","on","onNext","addEventListeners","styleForm","StyleForm","events","forEach","event","onEvent","hideEditor","showTooltip","stopPropagation","children","getPanes","markerPane","index","element","removeClass","eachLayer","addClickEvent","layerIsIgnored","useGrouping","LayerGroup","showEditor","removeClickEvent","off","undefined","ignoreLayerTypes","some","layerType","type","removeIndicators","fireEvent","currentElement","addClass","show","eventName","addClickEvents","removeClickEvents","hideTooltip","target","getLayers","filter","_1","formElements_1","arguments","formOptionsKey","formElements","DefaultMarker","Marker_1","DefaultMarker_1","StyleEditorImpl_1","StyleEditorControl_1","StyleEditor","Control","StyleEditorControl","control","default","markerForm","createMarkerForm","geometryForm","createGeometryForm","clearForm","addDOMEvents","addListener","lostFocus","markerDiv","getCurrentMarker","showMarkerForm","showGeometryForm","e","parent","className","hasClass","parentNode","UtilOptions","styleEditorEventPrefix","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","componentToHex","parseInt","option","color","hex","toString","rgbToHex","markers","controlMarkers","Array","isArray","keys","includes","getIconsForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","find","fill","initializedElements","formElement","getFormElementClass","hideFormElements","hideForm","preShow","showFormElement","showOrHideFormElement","showFormElementForStyleOption","getFormElementStandardClass","styleFormElement","forms","err","colorPickerDiv","getColorRamp","setSelectCallback","mt","colorRamp","elem","backgroundColor","selectColor","stroke","backgroundPosition","selectOptionWrapperClasses","selectOptionClasses","selectBox","selectBoxImage","createSelectInputImage","toggleSelectInput","iconOptions","getIconOptions","styleSelectInputImage","icon","iconColor","createColorSelect","hideSelectOptions","wrapper","image","createSelectHTML","selectOptions","selectOptionWrapper","selectOption","setAttribute","selectImage","nodeName","selectMarker","currentColorElement","getCurrentColorElement","getValue","getAttribute","label","slider","max","min","step","updateStyle","getStyle","innerText","Math","round","parseFloat","textArea","selectedElement","popupContent","inputText","getPopup","bindPopup","popup1","setContent","select","size","small","medium","large","weight","showFillOptions","canCurrentLayersBeFilled","entries","startsWith","markerName","markerOptions","newIcon","createMarkerIcon","setIcon","getElement","setNewMarker","getNewMarkerOptions","appendChild","getSelectHTML","classList","add","marker","getDefaultMarkerColor","iconSize","getDefaultMarkerForColor","ensureMarkerIcon","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","defaultMarkerColor","values","JSON","stringify","sizeToName","styleEdtior","Icon","iconUrl","getMarkerUrlForStyle","iconAnchor","popupAnchor","tmpOptions","createIcon","getMarkerUrl","url","form_1","marker_1","position","openOnLeafletDraw","openOnLeafletEditable","cancel","cancelTitle","styleEditorOptions","isEnabled","disable","createUI","controlUI","cancelUI","toggle","enable","showCancelButton","hideCancelButton"],"mappings":"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A,WACA,SACA,UACA,WACA,OACA,aACA,aACA,MACA,OACA,UACA,iBACA,WACA,YACA,QACA,SACA,UACA,OACA,QACA,SACA,UACA,WACA,MACA,SACA,WACA,UACA,cACA,QACA,SACA,mBACA,SACA,aACA,WACA,OACA,WACA,UACA,SACA,SACA,UACA,UACA,OACA,eACA,YACA,SACA,SACA,UACA,OACA,aACA,OACA,OACA,YACA,MACA,OACA,UACA,SACA,WACA,WACA,SACA,aACA,YACA,aACA,WACA,mBACA,eACA,UACA,WACA,iBACA,MACA,QACA,UACA,aACA,YACA,sBACA,UACA,eACA,QACA,WACA,OACA,OACA,UACA,OACA,SACA,WACA,aACA,iBACA,gBACA,aACA,WACA,QACA,qBACA,YACA,mBACA,aACA,SACA,UACA,MACA,WACA,cACA,UACA,cACA,WAGR,iBAAiB0C,GACb,IAAIgE,EAAWhE,EAAYgE,SAC3B,OAAO,IAAItQ,EAAEkR,KAAK,CACdC,QAAS/Q,KAAKgR,qBAAqB9E,GACnCgE,SAAUhE,EAAYgE,SACtB5D,UAAWJ,EAAYI,UACvBD,KAAMH,EAAYG,KAClBlE,UAAWnI,KAAKoP,WAChB6B,WAAY,CAACf,EAAS,GAAK,EAAGA,EAAS,GAAK,GAC5CgB,YAAa,CAAC,GAAIhB,EAAS,GAAK,KAGxC,cAAchE,EAAaG,GACvB,MAAM8E,EAAa,GAInB,OAHAA,EAAWjB,SAAWlQ,KAAK2O,KAAKC,MAChCuC,EAAW9E,KAAOA,EAClB8E,EAAW7E,UAAYJ,EAAYI,UAC5BtM,KAAKuP,iBAAiB4B,GAAYC,aAE7C,qBAAqBlF,GACjB,OAAOlM,KAAKqR,aAAanF,EAAYgE,SAAUhE,EAAYI,UAAWJ,EAAYG,MAEtF,aAAasC,EAAMvF,EAAOiD,GAQtB,IAAIiF,EAAM,+CAPV3C,EAAO3O,KAAK4Q,WAAWjC,GAAM,IAW7B,OAHItC,IACAiF,GAAO,IAAMjF,GAEViF,EAAM,KATTlI,EADuB,IAAvBA,EAAMT,QAAQ,KACNS,EAAMR,QAAQ,IAAK,IAGnB5I,KAAKE,KAAKqJ,SAASH,GAAO,IAMX,QAGnC3M,EAAQkK,cAAgBA,G,6BCnKxBtJ,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ0D,+BAA4B,EACpC,MAAMoR,EAAS,EAAQ,GACjBC,EAAW,EAAQ,GACzB/U,EAAQ0D,0BAA4B,CAChCsR,SAAU,UACVnG,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAChG,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACxF,UAAW,WACf5C,aAAc,KACdxG,WAAYsP,EAAS7K,cACrB6C,QAAS,KACTS,kBAAmB,KACnBuG,mBAAoB,KACpBnJ,WAAYkK,EAAOlR,WACnBkH,aAAcgK,EAAOjR,aACrBgF,iBAAkB,GAClB0F,MAAO,GACPhH,OAAQ,GACR0N,mBAAmB,EACnBC,uBAAuB,EACvBtN,aAAa,EACblB,QAAS,CACL/B,MAAO,eACPwQ,OAAQ,SACRC,YAAa,SACbtO,QAAS,yCACTH,KAAM,qBAEV4B,aAAa,EACbuD,uBAAwB,iB,6BC9B5BlL,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQyK,wBAAqB,EAC7B,MAAMJ,EAAoB,EAAQ,GAC5BpE,EAAY,EAAQ,GAK1B,MAAMwE,UAA2BtH,EAAEqH,QAC/B,YAAY6K,EAAoBhS,GAC5BC,QACAC,KAAK+R,WAAY,EACjB/R,KAAKiC,QAAU5E,OAAOsF,OAAOtF,OAAOsF,OAAO,GAAID,EAAUvC,2BAA4B2R,GACrF9R,KAAKF,YAAcA,EAMvB,MAAMG,GAMF,YALyBoF,IAArBrF,KAAKF,cACLE,KAAKF,YAAc,IAAIgH,EAAkBvE,gBAAgBtC,EAAKD,KAAKiC,UAGvEjC,KAAKF,YAAYkS,UACVhS,KAAKiS,WAEhB,WACI,MAAMC,EAAYtS,EAAEoB,QAAQ/C,OAAO,MAAO,2DACvB2B,EAAEoB,QAAQ/C,OAAO,IAAK,uCAAwCiU,GACtE9Q,MAAQpB,KAAKiC,QAAQkB,QAAQ/B,MACxC,MAAM+Q,EAAWnS,KAAKmS,SAAWvS,EAAEoB,QAAQ/C,OAAO,MAAO,gEAAiEiU,GAS1H,OARAC,EAAShR,UAAYnB,KAAKiC,QAAQkB,QAAQyO,OAC1CO,EAAS/Q,MAAQpB,KAAKiC,QAAQkB,QAAQ0O,YACtCjS,EAAE4D,SAASC,yBAAyByO,GACpCtS,EAAE4D,SAASC,yBAAyB0O,GACpCvS,EAAE4D,SAASE,wBAAwBwO,GACnCtS,EAAE4D,SAASE,wBAAwByO,GAEnCvS,EAAE4D,SAASG,GAAGuO,EAAW,QAASlS,KAAKoS,OAAQpS,MACxCkS,EAEX,SACQlS,KAAK+R,UACL/R,KAAKgS,UAGLhS,KAAKqS,SAGb,SACIrS,KAAK+R,WAAY,EACjB/R,KAAKsS,mBACLtS,KAAKF,YAAYuS,SAErB,UACQrS,KAAK+R,YACL/R,KAAK+R,WAAY,EACjB/R,KAAKuS,mBACLvS,KAAKF,YAAYkS,WAGzB,mBACIpS,EAAEoB,QAAQ4D,YAAY5E,KAAKmS,SAAU,8BAEzC,mBACIvS,EAAEoB,QAAQ6E,SAAS7F,KAAKmS,SAAU,+BAG1C1V,EAAQyK,mBAAqBA,G","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightElement = exports.SizeElement = exports.PopupContentElement = exports.OpacityElement = exports.IconElement = exports.FormElement = exports.DashElement = exports.ColorElement = void 0;\nconst ColorElement_1 = require(\"./ColorElement\");\nObject.defineProperty(exports, \"ColorElement\", { enumerable: true, get: function () { return ColorElement_1.ColorElement; } });\nconst DashElement_1 = require(\"./DashElement\");\nObject.defineProperty(exports, \"DashElement\", { enumerable: true, get: function () { return DashElement_1.DashElement; } });\nconst FormElement_1 = require(\"./FormElement\");\nObject.defineProperty(exports, \"FormElement\", { enumerable: true, get: function () { return FormElement_1.FormElement; } });\nconst IconElement_1 = require(\"./IconElement\");\nObject.defineProperty(exports, \"IconElement\", { enumerable: true, get: function () { return IconElement_1.IconElement; } });\nconst OpacityElement_1 = require(\"./OpacityElement\");\nObject.defineProperty(exports, \"OpacityElement\", { enumerable: true, get: function () { return OpacityElement_1.OpacityElement; } });\nconst PopupContentElement_1 = require(\"./PopupContentElement\");\nObject.defineProperty(exports, \"PopupContentElement\", { enumerable: true, get: function () { return PopupContentElement_1.PopupContentElement; } });\nconst SizeElement_1 = require(\"./SizeElement\");\nObject.defineProperty(exports, \"SizeElement\", { enumerable: true, get: function () { return SizeElement_1.SizeElement; } });\nconst WeightElement_1 = require(\"./WeightElement\");\nObject.defineProperty(exports, \"WeightElement\", { enumerable: true, get: function () { return WeightElement_1.WeightElement; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorClass = void 0;\nclass StyleEditorClass extends L.Class {\n    constructor(styleEditor) {\n        super();\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.util = styleEditor.util;\n    }\n}\nexports.StyleEditorClass = StyleEditorClass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = void 0;\nconst StyleEditorOptions_1 = require(\"./StyleEditorOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorOptions\", { enumerable: true, get: function () { return StyleEditorOptions_1.DefaultStyleEditorOptions; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = exports.GeometryForm = exports.Form = void 0;\nconst Form_1 = require(\"./Form\");\nObject.defineProperty(exports, \"Form\", { enumerable: true, get: function () { return Form_1.Form; } });\nconst MarkerForm_1 = require(\"./MarkerForm\");\nObject.defineProperty(exports, \"MarkerForm\", { enumerable: true, get: function () { return MarkerForm_1.MarkerForm; } });\nconst GeometryForm_1 = require(\"./GeometryForm\");\nObject.defineProperty(exports, \"GeometryForm\", { enumerable: true, get: function () { return GeometryForm_1.GeometryForm; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormElement = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement extends StyleEditorClass_1.StyleEditorClass {\n    constructor(parentForm, parentUiElement, styleOption) {\n        super(parentForm.styleEditor);\n        this.styleOption = styleOption;\n        // if no title is given use styling option\n        this.parentForm = parentForm;\n        this.create(parentUiElement);\n    }\n    /** create uiElement and content */\n    create(parentUiElement) {\n        this.uiElement =\n            L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle();\n        this.createContent();\n    }\n    /** create title */\n    createTitle() {\n        let title = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.uiElement);\n        title.innerHTML = this.title || this.styleOption.charAt(0).toUpperCase() + this.styleOption.slice(1);\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show() {\n        this.style();\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.uiElement);\n    }\n    /** style the FormElement */\n    style() { }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(value) {\n        const layers = this.parentForm.styleEditor.getCurrentLayers();\n        // update layers\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof L.Marker) {\n                new this.styleEditor.options.markerType(this.styleEditor).setStyle(this.styleOption, value);\n            }\n            else if (layer instanceof L.Path) {\n                let newStyle = {};\n                newStyle[this.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.parentForm.style();\n    }\n}\nexports.FormElement = FormElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorImpl = void 0;\nconst StyleForm_1 = require(\"./StyleForm\");\nconst Util_1 = require(\"./Util\");\nconst options_1 = require(\"./options\");\n// TODO merge STYLEFORM AND STYLE EDITORIMPL? or seperate better? \nclass StyleEditorImpl extends L.Class {\n    constructor(map, options) {\n        super();\n        this.map = map;\n        this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorOptions), options);\n        this.util = new Util_1.Util(this);\n        this.createUi();\n    }\n    createUi() {\n        const editorUI = this.editorUI = L.DomUtil.create('div', 'leaflet-styleeditor', this.map.getContainer());\n        const styleEditorHeader = L.DomUtil.create('div', 'leaflet-styleeditor-header', editorUI);\n        this.interiorEditorUI = L.DomUtil.create('div', 'leaflet-styleeditor-interior', editorUI);\n        const buttonNext = L.DomUtil.create('button', 'leaflet-styleeditor-button styleeditor-hideBtn', styleEditorHeader);\n        buttonNext.title = this.options.strings.hide;\n        const tooltipWrapper = this.tooltipUI = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.map.getContainer());\n        const tooltip = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip', tooltipWrapper);\n        tooltip.innerHTML = this.options.strings.tooltip;\n        // do not propagate scrolling events on the ui to the map\n        L.DomEvent.disableScrollPropagation(editorUI);\n        L.DomEvent.disableScrollPropagation(buttonNext);\n        // do not propagate click events on the ui to the map\n        L.DomEvent.disableClickPropagation(editorUI);\n        L.DomEvent.disableClickPropagation(buttonNext);\n        // select next layer to style\n        L.DomEvent.on(buttonNext, 'click', this.onNext, this);\n        this.addEventListeners(this.map);\n        this.styleForm = new StyleForm_1.StyleForm(this);\n    }\n    addEventListeners(map) {\n        this.options.events.forEach(event => map.on(event, this.onEvent));\n    }\n    onEvent(event) {\n        // TODO\n    }\n    onNext(event) {\n        this.hideEditor();\n        this.showTooltip();\n        event.stopPropagation();\n    }\n    removeIndicators() {\n        const children = this.map.getPanes().markerPane.children;\n        for (let index = 0; index < children.length; index++) {\n            const element = children[index];\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    addClickEvents() {\n        // TODO add to newly added layers?!\n        this.map.eachLayer(this.addClickEvent, this);\n    }\n    addClickEvent(layer) {\n        if (this.layerIsIgnored(layer)) {\n            return;\n        }\n        if (this.options.useGrouping && layer instanceof L.LayerGroup) {\n            layer.on('click', this.showEditor, this);\n        }\n        else if (layer instanceof L.Marker || layer instanceof L.Path) {\n            layer.on('click', this.showEditor, this);\n        }\n    }\n    removeClickEvents() {\n        this.map.eachLayer(this.removeClickEvent, this);\n    }\n    removeClickEvent(layer) {\n        layer.off('click', this.showEditor, this);\n    }\n    layerIsIgnored(layer) {\n        if (layer === undefined) {\n            return false;\n        }\n        return this.options.ignoreLayerTypes.some(layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase());\n    }\n    hideEditor() {\n        L.DomUtil.removeClass(this.editorUI, 'editor-enabled');\n        this.removeIndicators();\n        this.fireEvent('hidden');\n    }\n    // TODO what type is event?!\n    // TODO move to FORM?\n    showEditor(event) {\n        if (event) {\n            this.currentElement = event;\n        }\n        if (this.currentElement) {\n            L.DomUtil.addClass(this.editorUI, 'editor-enabled');\n        }\n        this.fireEvent('visible');\n        this.styleForm.show();\n    }\n    showTooltip() {\n        L.DomUtil.removeClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    hideTooltip() {\n        L.DomUtil.addClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    fireEvent(eventName, layer) {\n    }\n    enable() {\n        this.addClickEvents();\n        this.showTooltip();\n        this.showEditor();\n    }\n    disable() {\n        this.removeClickEvents();\n        this.hideTooltip();\n        this.hideEditor();\n    }\n    // get current layers\n    getCurrentLayers() {\n        if (!this.currentElement) {\n            return [];\n        }\n        else if (this.options.useGrouping && this.currentElement.target instanceof L.LayerGroup) {\n            return this.currentElement.target.getLayers();\n        }\n        else {\n            return [this.currentElement.target];\n        }\n    }\n    getCurrentMarker() {\n        return this.getCurrentLayers().filter((layer) => layer instanceof L.Marker);\n    }\n}\nexports.StyleEditorImpl = StyleEditorImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = void 0;\nconst _1 = require(\".\");\nconst formElements_1 = require(\"../formElements\");\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends _1.Form {\n    constructor() {\n        super(...arguments);\n        this.formOptionsKey = 'marker';\n        this.formElements = {\n            'icon': formElements_1.IconElement,\n            'color': formElements_1.ColorElement,\n            'size': formElements_1.SizeElement,\n            'popupContent': formElements_1.PopupContentElement\n        };\n    }\n}\nexports.MarkerForm = MarkerForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = exports.Marker = void 0;\nconst Marker_1 = require(\"./Marker\");\nObject.defineProperty(exports, \"Marker\", { enumerable: true, get: function () { return Marker_1.Marker; } });\nconst DefaultMarker_1 = require(\"./DefaultMarker\");\nObject.defineProperty(exports, \"DefaultMarker\", { enumerable: true, get: function () { return DefaultMarker_1.DefaultMarker; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst StyleEditorControl_1 = require(\"./StyleEditorControl\");\nrequire('../css/Leaflet.StyleEditor.css');\nL.StyleEditor = StyleEditorImpl_1.StyleEditorImpl;\nL.styleEditor = function (map, options) { return new StyleEditorImpl_1.StyleEditorImpl(map, options); };\nL.Control.StyleEditor = StyleEditorControl_1.StyleEditorControl;\nL.control.styleEditor = function (options) { return new StyleEditorControl_1.StyleEditorControl(options); };\nexports.default = L;\n","module.exports = undefined;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleForm = void 0;\nconst StyleEditorClass_1 = require(\"./StyleEditorClass\");\nclass StyleForm extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor) {\n        super(styleEditor);\n        this.markerForm = this.createMarkerForm();\n        this.geometryForm = this.createGeometryForm();\n        this.clearForm();\n        this.addDOMEvents();\n    }\n    addDOMEvents() {\n        L.DomEvent.addListener(this.map, 'click', this.lostFocus, this);\n        L.DomEvent.addListener(this.styleEditor.editorUI, 'click', this.lostFocus, this);\n    }\n    clearForm() {\n        this.markerForm.hide();\n        this.geometryForm.hide();\n    }\n    createMarkerForm() {\n        const markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-marker', this.styleEditor.interiorEditorUI);\n        const markerForm = new this.styleEditor.options.markerForm(this.styleEditor, markerDiv);\n        markerForm.create();\n        return markerForm;\n    }\n    createGeometryForm() {\n        const markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-geometry', this.styleEditor.interiorEditorUI);\n        const geometryForm = new this.styleEditor.options.geometryForm(this.styleEditor, markerDiv);\n        geometryForm.create();\n        return geometryForm;\n    }\n    show() {\n        if (this.styleEditor.getCurrentMarker().length > 0) {\n            this.showMarkerForm();\n        }\n        else {\n            this.showGeometryForm();\n        }\n    }\n    showMarkerForm() {\n        this.clearForm();\n        this.markerForm.show();\n    }\n    showGeometryForm() {\n        this.clearForm();\n        this.geometryForm.show();\n    }\n    fireChangeEvent(element) {\n        this.util.fireChangeEvent(element);\n    }\n    lostFocus(e) {\n        let parent = e.target;\n        for (let i = 0; i < 10; i++) {\n            if (!parent) {\n                break;\n            }\n            if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n                return;\n            }\n            parent = parent.parentNode;\n        }\n        this.markerForm.lostFocus();\n        this.geometryForm.lostFocus();\n    }\n}\nexports.StyleForm = StyleForm;\n","\"use strict\";\n/**\n * Helper functions used throuhgout the project\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.UtilOptions = void 0;\nclass UtilOptions {\n}\nexports.UtilOptions = UtilOptions;\nclass Util {\n    constructor(styleEditor) {\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.options = styleEditor.options;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.map.fireEvent(this.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this.componentToHex(parseInt(rgbArray[0], 10)) + this.componentToHex(parseInt(rgbArray[1], 10)) +\n            this.componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get current style of current element */\n    getStyle(option) {\n        const layers = this.styleEditor.getCurrentLayers();\n        if (layers.length > 0) {\n            let style = layers[0].options[option];\n            if (style) {\n                return style;\n            }\n        }\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(currentElement, option, value) {\n        if (currentElement instanceof L.Marker) {\n            new this.styleEditor.options.markerType(this.styleEditor).setStyle(option, value);\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getIconsForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = new this.styleEditor.options.markerType(this.styleEditor).markers;\n        let controlMarkers = this.styleEditor.options.markers;\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getIconsForColor(color);\n        let defMarkers = [];\n        let defaultMarker = this.styleEditor.options.defaultMarkerIcon;\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = new this.styleEditor.options.markerType(this.styleEditor).defaultMarkerIcon;\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n    canCurrentLayersBeFilled() {\n        return this.styleEditor.getCurrentLayers().find((layer) => layer.options.fill) != undefined;\n    }\n}\nexports.Util = Util;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Form = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/**\n* Forms consist of FormElements and are shown in the StyleForm\n* There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n* Style options based on:\n*     - path: https://leafletjs.com/reference.html#path-options\n*     - icon: https://leafletjs.com/reference.html#icon\n*/\nclass Form extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, parentUiElement) {\n        super(styleEditor);\n        this.initializedElements = {};\n        this.parentUiElement = parentUiElement;\n    }\n    /** create every FormElement in the parentUiElement */\n    create() {\n        for (let key in this.formElements) {\n            const formElement = this.getFormElementClass(key);\n            if (formElement !== undefined) {\n                this.initializedElements[key] = new formElement(this, this.parentUiElement, key);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show() {\n        this.preShow();\n        this.showFormElement();\n        this.showForm();\n        this.style();\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() { }\n    /** make every FormElement that should be visible visible */\n    showFormElement() {\n        for (let key in this.initializedElements) {\n            this.showOrHideFormElement(this.initializedElements[key]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].style();\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].lostFocus();\n        }\n    }\n    /**\n    * show or hide a formElement depending on style option\n    */\n    showOrHideFormElement(formElement) {\n        // check wether element should be shown or not\n        if (this.showFormElementForStyleOption(formElement.styleOption)) {\n            formElement.show();\n        }\n        else {\n            formElement.hide();\n        }\n    }\n    /**\n    * get the Class of the Formelement to instanciate\n    * @param {*} styleOption, the styleOption to get the FormElement for\n    */\n    getFormElementClass(styleOption) {\n        let formElementKeys = Object.keys(this.formElements);\n        if (formElementKeys.indexOf(styleOption) >= 0) {\n            let FormElement = this.formElements[styleOption];\n            if (FormElement) {\n                // may be a dictionary\n                if (typeof FormElement === 'boolean') {\n                    return this.getFormElementStandardClass(styleOption);\n                }\n                if ('formElement' in FormElement && 'boolean' in FormElement) {\n                    FormElement = FormElement['formElement'];\n                }\n            }\n            // if nothing works return it\n            return this.getFormElementStandardClass(styleOption);\n        }\n    }\n    /**\n    * check whether a FormElement should be shown\n    * @param {*} styleOption, the styleOption to check\n    * @returns Boolean indicating whether it should be shown or not\n    */\n    showFormElementForStyleOption(styleOption) {\n        if (styleOption in this.formElements) {\n            const styleFormElement = this.styleEditor.options.forms[this.formOptionsKey][styleOption];\n            switch (typeof styleFormElement) {\n                case 'function': {\n                    try {\n                        return styleFormElement(this.styleEditor.getCurrentLayers());\n                    }\n                    catch (err) {\n                        // the given function presumably is a constructor -> always show it\n                        return true;\n                    }\n                }\n                case 'boolean': {\n                    return styleFormElement;\n                }\n                case 'object': {\n                    if ('boolean' in styleFormElement) {\n                        if (typeof styleFormElement['boolean'] === 'function') {\n                            return styleFormElement['boolean'](this.styleEditor.currentElement);\n                        }\n                        return styleFormElement['boolean'];\n                    }\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n    }\n    /**\n    * get Leaflet.StyleEditor standard FormElement class for given styleOption\n    * @param {*} styleOption, the styleOption to get the standard class for\n    */\n    getFormElementStandardClass(styleOption) {\n        return this.formElements[styleOption];\n    }\n}\nexports.Form = Form;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorElement = void 0;\nconst FormElement_1 = require(\"./FormElement\");\nconst MarkerForm_1 = require(\"../form/MarkerForm\");\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.title = \"color\";\n    }\n    createContent() {\n        this.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.uiElement);\n        this.getColorRamp().forEach(this.setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    getColorRamp() {\n        // if markers have own colorRamp use it\n        if (this.parentForm instanceof MarkerForm_1.MarkerForm) {\n            const mt = new this.styleEditor.options.markerType(this.styleEditor);\n            if (!!mt.colorRamp) {\n                return mt.colorRamp;\n            }\n        }\n        return this.styleEditor.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    setSelectCallback(color) {\n        let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        L.DomEvent.addListener(elem, 'click', this.selectColor, this);\n    }\n    /** set style for chosen color */\n    selectColor(event) {\n        event.stopPropagation();\n        this.setStyle(this.util.rgbToHex(event.target.style.backgroundColor));\n    }\n}\nexports.ColorElement = ColorElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DashElement = void 0;\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used for styling the dash attribute\n */\nclass DashElement extends FormElement_1.FormElement {\n    /** create the three standard dash options */\n    createContent() {\n        let stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -75px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('1');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -95px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('10, 10');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '-10px -115px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('15, 10, 1, 10');\n        }, this);\n    }\n}\nexports.DashElement = DashElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IconElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for styling the icon\n */\nclass IconElement extends _1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.styleOption = 'icon';\n        // private classed used in the code\n        this.selectOptionWrapperClasses = 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden';\n        this.selectOptionClasses = 'leaflet-styleeditor-select-option';\n    }\n    /** create the icon selectBoxes */\n    createContent() {\n        let selectBox = L.DomUtil.create('div', 'leaflet-styleeditor-select', this.uiElement);\n        this.selectBoxImage = this.createSelectInputImage(selectBox);\n        L.DomEvent.addListener(selectBox, 'click', this.toggleSelectInput, this);\n    }\n    /** show the correct icon in the correct color if the icon or color changed */\n    style() {\n        let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).getIconOptions();\n        this.styleSelectInputImage(this.selectBoxImage, iconOptions.icon, iconOptions.iconColor);\n        this.createColorSelect(iconOptions.iconColor);\n        this.hideSelectOptions();\n    }\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus() {\n        this.hideSelectOptions();\n    }\n    /** create image container that hides/shows the iconSelectBox */\n    createSelectInputImage(parentUiElement) {\n        let wrapper = L.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement);\n        return L.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper);\n    }\n    /** create appropriate image for color and icon */\n    styleSelectInputImage(image, icon, color) {\n        let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).getIconOptions();\n        if (color) {\n            iconOptions.iconColor = color;\n        }\n        image.innerHTML = '';\n        new this.styleEditor.options.markerType(this.styleEditor).createSelectHTML(image, iconOptions, icon);\n    }\n    /** create the selectBox with the icons in the correct color */\n    createColorSelect(color) {\n        if (!this.selectOptions) {\n            this.selectOptions = {};\n        }\n        if (color in this.selectOptions) {\n            return;\n        }\n        let selectOptionWrapper = L.DomUtil.create('ul', this.selectOptionWrapperClasses, this.uiElement);\n        this.util.getIconsForColor(color).forEach(function (icon) {\n            let selectOption = L.DomUtil.create('li', this.selectOptionClasses, selectOptionWrapper);\n            selectOption.setAttribute('value', icon);\n            let selectImage = this.createSelectInputImage(selectOption);\n            this.styleSelectInputImage(selectImage, icon, color);\n        }, this);\n        this.selectOptions[color] = selectOptionWrapper;\n        L.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n            e.stopPropagation();\n            let target = e.target;\n            if (target.nodeName === 'UL') {\n                return;\n            }\n            while (target && target.className !== 'leaflet-styleeditor-select-option') {\n                target = target.parentNode;\n            }\n            this.selectMarker({\n                'target': target\n            }, this);\n        }, this);\n    }\n    /** show/hide iconSelectBox */\n    toggleSelectInput() {\n        let currentColorElement = this.getCurrentColorElement(this.util.rgbToHex(new this.styleEditor.options.markerType(this.styleEditor).getIconOptions().iconColor));\n        let show = false;\n        if (currentColorElement) {\n            show = L.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden');\n        }\n        this.hideSelectOptions();\n        if (show) {\n            this.util.showElement(currentColorElement);\n        }\n    }\n    /** called when user selects a marker */\n    selectMarker(e) {\n        let value = this.getValue(e.target);\n        // update style\n        this.selectBoxImage.setAttribute('value', value);\n        this.setStyle(value);\n        this.hideSelectOptions();\n    }\n    /** helper function to return attribute value of target */\n    getValue(target) {\n        return target.getAttribute('value');\n    }\n    /** return correct selectBox depending on which color is currently chosen */\n    getCurrentColorElement(color) {\n        if (!this.selectOptions[color]) {\n            this.createColorSelect(color);\n        }\n        return this.selectOptions[color];\n    }\n    /** hide open SelectOption */\n    hideSelectOptions() {\n        for (let selectOption in this.selectOptions) {\n            this.util.hideElement(this.selectOptions[selectOption]);\n        }\n    }\n}\nexports.IconElement = IconElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpacityElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used to style opacity\n */\nclass OpacityElement extends _1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.uiElement);\n        this.slider = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.uiElement);\n        this.slider.type = 'range';\n        this.slider.max = '1';\n        this.slider.min = '0';\n        this.slider.step = '0.01';\n        this.slider.value = '0.5';\n        // add event listeners\n        L.DomEvent.addListener(this.slider, 'change', this.updateStyle, this);\n        L.DomEvent.addListener(this.slider, 'input', this.updateStyle, this);\n        L.DomEvent.addListener(this.slider, 'keyup', this.updateStyle, this);\n        L.DomEvent.addListener(this.slider, 'mouseup', this.updateStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.slider.value = this.util.getStyle(this.styleOption);\n        this.label.innerText = Math.round(100 * parseFloat(this.slider.value)).toString() + '%';\n    }\n    /** communicate opacity value */\n    updateStyle() {\n        this.setStyle(this.slider.value);\n    }\n}\nexports.OpacityElement = OpacityElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PopupContentElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nclass PopupContentElement extends _1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.title = 'Description';\n    }\n    createContent() {\n        this.textArea = L.DomUtil.create('textarea', 'leaflet-styleeditor-input', this.uiElement);\n        L.DomEvent.addListener(this.textArea, 'change', this.updateStyle, this);\n    }\n    /** set correct value */\n    style() {\n        let selectedElement = this.styleEditor.getCurrentMarker()[0];\n        if (selectedElement && selectedElement.options) {\n            this.textArea.value = selectedElement.options.popupContent || '';\n        }\n    }\n    /** communicate popupContent value */\n    updateStyle() {\n        let layers = this.styleEditor.getCurrentLayers();\n        let inputText = this.textArea.value;\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer && layer.getPopup && layer.bindPopup) {\n                let popup1 = layer.getPopup();\n                if (popup1) {\n                    popup1.setContent(inputText);\n                }\n                else {\n                    layer.bindPopup(inputText);\n                }\n                /* TODO ?! tmp store the text content for init next time\n                layer.options = layer.options || {}\n                layer.options.popupContent = inputText */\n            }\n        }\n        this.setStyle(inputText);\n    }\n}\nexports.PopupContentElement = PopupContentElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement to set style of an icon\n */\nclass SizeElement extends _1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.title = 'size';\n    }\n    /** create the 3 standard icon sizes */\n    createContent() {\n        const markerType = new this.styleEditor.options.markerType(this.styleEditor);\n        let select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(markerType.size.small);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(markerType.size.medium);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(markerType.size.large);\n        }, this);\n    }\n}\nexports.SizeElement = SizeElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used to style weight\n */\nclass WeightElement extends _1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.uiElement);\n        this.weight = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.uiElement);\n        this.weight.type = 'range';\n        this.weight.min = '0';\n        this.weight.max = '20';\n        this.weight.step = '1';\n        this.weight.value = '4';\n        // add event listeners\n        L.DomEvent.addListener(this.weight, 'change', this.updateStyle, this);\n        L.DomEvent.addListener(this.weight, 'input', this.updateStyle, this);\n        L.DomEvent.addListener(this.weight, 'keyup', this.updateStyle, this);\n        L.DomEvent.addListener(this.weight, 'mouseup', this.updateStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.weight.value = this.util.getStyle(this.styleOption);\n        this.label.innerText = this.weight.value;\n    }\n    /** communicate weight value */\n    updateStyle() {\n        this.setStyle(this.weight.value);\n    }\n}\nexports.WeightElement = WeightElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeometryForm = void 0;\nconst _1 = require(\".\");\nconst formElements_1 = require(\"../formElements\");\n/** Form used to enable modification of a Geometry */\nclass GeometryForm extends _1.Form {\n    constructor() {\n        super(...arguments);\n        this.formOptionsKey = 'geometry';\n        this.formElements = {\n            'color': formElements_1.ColorElement,\n            'opacity': formElements_1.OpacityElement,\n            'weight': formElements_1.WeightElement,\n            'dashArray': formElements_1.DashElement,\n            'fillColor': formElements_1.ColorElement,\n            'fillOpacity': formElements_1.OpacityElement,\n            'popupContent': formElements_1.PopupContentElement\n        };\n    }\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElement() {\n        super.showFormElement();\n        const showFillOptions = this.util.canCurrentLayersBeFilled();\n        Object.entries(this.initializedElements).forEach(([key, formElement]) => {\n            if (!showFillOptions && key.startsWith('fill')) {\n                formElement.hide();\n            }\n            else {\n                this.showOrHideFormElement(formElement);\n            }\n        });\n    }\n}\nexports.GeometryForm = GeometryForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Marker = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\nclass Marker extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, markerName) {\n        super(styleEditor);\n        this.size = {\n            'small': [20, 50],\n            'medium': [30, 70],\n            'large': [35, 90]\n        };\n        this.markerName = markerName;\n    }\n    getMarkerCssClass() {\n        if (this.markerName !== '' && !this.markerName.startsWith('leaflet-styleeditor-marker-')) {\n            return 'leaflet-styleeditor-marker-' + this.markerName;\n        }\n        return this.markerName;\n    }\n    /** create new Marker and show it */\n    setNewMarker(markerOptions) {\n        let newIcon = this.createMarkerIcon(markerOptions);\n        this.styleEditor.getCurrentLayers().forEach((currentElement) => {\n            if (currentElement instanceof L.Marker) {\n                currentElement.setIcon(newIcon);\n                if (currentElement instanceof L.LayerGroup) {\n                    currentElement.eachLayer(function (layer) {\n                        if (layer instanceof L.Marker)\n                            L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected');\n                    });\n                }\n                else {\n                    L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n                }\n            }\n        });\n    }\n    /** set styling options */\n    setStyle(styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        this.setNewMarker(this.getNewMarkerOptions(styleOption, value));\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        parentUiElement.appendChild(this.getSelectHTML(iconOptions, icon));\n        parentUiElement.classList.add('leaflet-styleeditor-select-' + this.markerName);\n    }\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions() {\n        let markerOptions = {};\n        const layers = this.styleEditor.getCurrentLayers();\n        const marker = layers.find((layer) => layer instanceof L.Marker);\n        if (marker) {\n            markerOptions = marker.options.icon.options;\n        }\n        if (Object.keys(markerOptions).length > 0) {\n            return markerOptions;\n        }\n        markerOptions.iconColor = this.getDefaultMarkerColor();\n        markerOptions.iconSize = this.size.small;\n        markerOptions.icon = this.util.getDefaultMarkerForColor(markerOptions.iconColor);\n        markerOptions = this.ensureMarkerIcon(markerOptions);\n        return markerOptions;\n    }\n    getNewMarkerOptions(key, value) {\n        let iconOptions = this.getIconOptions();\n        iconOptions[key] = value;\n        return iconOptions;\n    }\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    ensureMarkerIcon(iconOptions) {\n        let markers = this.util.getIconsForColor(iconOptions.iconColor);\n        if (markers.includes(iconOptions.icon)) {\n            return iconOptions;\n        }\n        iconOptions.icon = this.util.getDefaultMarkerForColor(iconOptions.iconColor);\n        return iconOptions;\n    }\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    getDefaultMarkerColor() {\n        let markerTypeColorRamp = this.colorRamp;\n        let generalColorRamp = this.styleEditor.options.colorRamp;\n        let intersectedColorRamp = [];\n        if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n            intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n));\n            if (intersectedColorRamp.length === 0) {\n                intersectedColorRamp = markerTypeColorRamp;\n            }\n        }\n        else {\n            intersectedColorRamp = generalColorRamp;\n        }\n        let color = this.styleEditor.options.defaultMarkerColor;\n        if (color !== null && !intersectedColorRamp.includes(color)) {\n            color = null;\n        }\n        if (color === null) {\n            color = this.styleEditor.options.defaultColor;\n            if (color !== null && !intersectedColorRamp.includes(color)) {\n                color = null;\n            }\n            if (color === null) {\n                color = intersectedColorRamp[0];\n            }\n        }\n        return this.util.rgbToHex(color);\n    }\n    /** return size as keyword */\n    sizeToName(size) {\n        let keys = Object.keys(this.size);\n        if (typeof size === 'string') {\n            if (size === 's') {\n                size = 'small';\n            }\n            else if (size === 'm') {\n                size = 'medium';\n            }\n            else if (size === 'l') {\n                size = 'large';\n            }\n            for (let i = 0; i < keys.length; i++) {\n                if (this.size[keys[i]] === size) {\n                    return keys[i];\n                }\n            }\n        }\n        let values = Object.values(this.size);\n        for (let i = 0; i < values.length; i++) {\n            if (JSON.stringify(size) === JSON.stringify(values[i])) {\n                return keys[i];\n            }\n        }\n        return keys[0];\n    }\n    /** return size as [x,y] */\n    sizeToPixel(size) {\n        size = this.sizeToName(size);\n        return this.size[size];\n    }\n}\nexports.Marker = Marker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = void 0;\nconst _1 = require(\".\");\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nclass DefaultMarker extends _1.Marker {\n    constructor(styleEdtior) {\n        super(styleEdtior, \"defaultmarker\");\n        this.markers = [\n            'circle-stroked',\n            'circle',\n            'square-stroked',\n            'square',\n            'triangle-stroked', 'triangle',\n            'star-stroked',\n            'star',\n            'cross',\n            'marker-stroked',\n            'marker',\n            'religious-jewish',\n            'religious-christian',\n            'religious-muslim',\n            'cemetery',\n            'rocket',\n            'airport',\n            'heliport',\n            'rail',\n            'rail-metro',\n            'rail-light',\n            'bus',\n            'fuel',\n            'parking',\n            'parking-garage',\n            'airfield',\n            'roadblock',\n            'ferry',\n            'harbor',\n            'bicycle',\n            'park',\n            'park2',\n            'museum',\n            'lodging',\n            'monument',\n            'zoo',\n            'garden',\n            'campsite',\n            'theatre',\n            'art-gallery',\n            'pitch',\n            'soccer',\n            'america-football',\n            'tennis',\n            'basketball',\n            'baseball',\n            'golf',\n            'swimming',\n            'cricket',\n            'skiing',\n            'school',\n            'college',\n            'library',\n            'post',\n            'fire-station',\n            'town-hall',\n            'police',\n            'prison',\n            'embassy',\n            'beer',\n            'restaurant',\n            'cafe',\n            'shop',\n            'fast-food',\n            'bar',\n            'bank',\n            'grocery',\n            'cinema',\n            'pharmacy',\n            'hospital',\n            'danger',\n            'industrial',\n            'warehouse',\n            'commercial',\n            'building',\n            'place-of-worship',\n            'alcohol-shop',\n            'logging',\n            'oil-well',\n            'slaughterhouse',\n            'dam',\n            'water',\n            'wetland',\n            'disability',\n            'telephone',\n            'emergency-telephone',\n            'toilets',\n            'waste-basket',\n            'music',\n            'land-use',\n            'city',\n            'town',\n            'village',\n            'farm',\n            'bakery',\n            'dog-park',\n            'lighthouse',\n            'clothing-store',\n            'polling-place',\n            'playground',\n            'entrance',\n            'heart',\n            'london-underground',\n            'minefield',\n            'rail-underground',\n            'rail-above',\n            'camera',\n            'laundry',\n            'car',\n            'suitcase',\n            'hairdresser',\n            'chemist',\n            'mobilephone',\n            'scooter'\n        ];\n    }\n    createMarkerIcon(iconOptions) {\n        let iconSize = iconOptions.iconSize;\n        return new L.Icon({\n            iconUrl: this.getMarkerUrlForStyle(iconOptions),\n            iconSize: iconOptions.iconSize,\n            iconColor: iconOptions.iconColor,\n            icon: iconOptions.icon,\n            className: this.markerName,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    getSelectHTML(iconOptions, icon) {\n        const tmpOptions = {};\n        tmpOptions.iconSize = this.size.small;\n        tmpOptions.icon = icon;\n        tmpOptions.iconColor = iconOptions.iconColor;\n        return this.createMarkerIcon(tmpOptions).createIcon();\n    }\n    getMarkerUrlForStyle(iconOptions) {\n        return this.getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon);\n    }\n    getMarkerUrl(size, color, icon) {\n        size = this.sizeToName(size)[0];\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size;\n        if (icon) {\n            url += '-' + icon;\n        }\n        return url + '+' + color + '.png';\n    }\n}\nexports.DefaultMarker = DefaultMarker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = void 0;\nconst form_1 = require(\"../form\");\nconst marker_1 = require(\"../marker\");\nexports.DefaultStyleEditorOptions = {\n    position: 'topleft',\n    colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n    defaultColor: null,\n    markerType: marker_1.DefaultMarker,\n    markers: null,\n    defaultMarkerIcon: null,\n    defaultMarkerColor: null,\n    markerForm: form_1.MarkerForm,\n    geometryForm: form_1.GeometryForm,\n    ignoreLayerTypes: [],\n    forms: {},\n    events: [],\n    openOnLeafletDraw: true,\n    openOnLeafletEditable: true,\n    showTooltip: true,\n    strings: {\n        title: 'Style Editor',\n        cancel: 'cancel',\n        cancelTitle: 'cancel',\n        tooltip: 'Click on the element you want to style',\n        hide: 'Hide Style Editor',\n    },\n    useGrouping: false,\n    styleEditorEventPrefix: 'styleeditor:',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorControl = void 0;\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst options_1 = require(\"./options\");\n/**\n * StyleEditorControl creates a { L.Control }\n * which enables the user to enable and disable Leaflet.StyleEditor\n */\nclass StyleEditorControl extends L.Control {\n    constructor(styleEditorOptions, styleEditor) {\n        super();\n        this.isEnabled = false;\n        this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorOptions), styleEditorOptions);\n        this.styleEditor = styleEditor;\n    }\n    /**\n     * Create the Control element and its HTMLElements\n     * @param map the map where the control should be added to\n     */\n    onAdd(map) {\n        if (this.styleEditor === undefined) {\n            this.styleEditor = new StyleEditorImpl_1.StyleEditorImpl(map, this.options);\n        }\n        // disable styleEditor if using control element\n        this.styleEditor.disable();\n        return this.createUI();\n    }\n    createUI() {\n        const controlUI = L.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar');\n        const controlDiv = L.DomUtil.create('a', 'leaflet-control-styleeditor-interior', controlUI);\n        controlDiv.title = this.options.strings.title;\n        const cancelUI = this.cancelUI = L.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlUI);\n        cancelUI.innerHTML = this.options.strings.cancel;\n        cancelUI.title = this.options.strings.cancelTitle;\n        L.DomEvent.disableScrollPropagation(controlUI);\n        L.DomEvent.disableScrollPropagation(cancelUI);\n        L.DomEvent.disableClickPropagation(controlUI);\n        L.DomEvent.disableClickPropagation(cancelUI);\n        // toggle UI visibility\n        L.DomEvent.on(controlUI, 'click', this.toggle, this);\n        return controlUI;\n    }\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    enable() {\n        this.isEnabled = true;\n        this.showCancelButton();\n        this.styleEditor.enable();\n    }\n    disable() {\n        if (this.isEnabled) {\n            this.isEnabled = false;\n            this.hideCancelButton();\n            this.styleEditor.disable();\n        }\n    }\n    showCancelButton() {\n        L.DomUtil.removeClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    hideCancelButton() {\n        L.DomUtil.addClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n}\nexports.StyleEditorControl = StyleEditorControl;\n"],"sourceRoot":""}