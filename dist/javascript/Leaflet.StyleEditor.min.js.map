{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/./src/typescript/StyleEditorClass.ts","webpack://leafletstyleeditor/./src/typescript/options/index.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorImpl.ts","webpack://leafletstyleeditor/./src/typescript/form/index.ts","webpack://leafletstyleeditor/./src/typescript/form/MarkerForm.ts","webpack://leafletstyleeditor/./src/typescript/formElements/FormElement.ts","webpack://leafletstyleeditor/./src/typescript/marker/index.ts","webpack://leafletstyleeditor/./src/typescript/index.ts","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/typescript/StyleForm.ts","webpack://leafletstyleeditor/./src/typescript/Util.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorControlOptions.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorClassOptions.ts","webpack://leafletstyleeditor/./src/typescript/form/Form.ts","webpack://leafletstyleeditor/./src/typescript/formElements/index.ts","webpack://leafletstyleeditor/./src/typescript/formElements/ColorElement.ts","webpack://leafletstyleeditor/./src/typescript/marker/Marker.ts","webpack://leafletstyleeditor/./src/typescript/marker/DefaultMarker.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorOptions.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorControl.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StyleEditorClass","L","Class","styleEditor","super","this","map","util","DefaultStyleEditorOptions","DefaultStyleEditorClassOptions","DefaultStyleEditorControlOptions","StyleEditorControlOptions_1","StyleEditorClassOptions_1","StyleEditorOptions_1","StyleEditorImpl","StyleForm_1","Util_1","options_1","options","assign","Util","createUi","editorUI","DomUtil","getContainer","styleEditorHeader","buttonNext","interiorEditorUI","title","strings","hide","tooltipWrapper","tooltipUI","innerHTML","tooltip","DomEvent","disableScrollPropagation","disableClickPropagation","on","onNext","addEventListeners","StyleForm","events","forEach","event","onEvent","hideEditor","showTooltip","stopPropagation","children","getPanes","markerPane","index","length","element","removeClass","eachLayer","addClickEvent","layer","layerIsIgnored","useGrouping","LayerGroup","Marker","Path","showEditor","removeClickEvent","off","undefined","ignoreLayerTypes","some","layerType","type","toUpperCase","removeIndicators","fireEvent","currentElement","addClass","eventName","addClickEvents","removeClickEvents","hideTooltip","target","getLayers","MarkerForm","Form","Form_1","MarkerForm_1","_1","formElements_1","formElements","ColorElement","parentUiElement","FormElement","StyleEditorClass_1","styleOption","parentForm","charAt","slice","uiElement","createTitle","createContent","style","showForm","showElement","hideElement","layers","getCurrentLayers","markerType","setStyle","newStyle","fireChangeEvent","DefaultMarker","Marker_1","DefaultMarker_1","StyleEditorImpl_1","StyleEditorControl_1","StyleEditor","Control","StyleEditorControl","control","default","markerForm","createMarkerForm","geometryForm","createGeometryForm","addDOMEvents","addListener","lostFocus","markerDiv","clearForm","show","e","parent","className","hasClass","parentNode","UtilOptions","styleEditorEventPrefix","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","option","color","hex","toString","rgbToHex","markers","controlMarkers","Array","isArray","keys","includes","filter","getMarkersForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","position","cancel","cancelTitle","form_1","marker_1","colorRamp","defaultMarkerColor","forms","openOnLeafletDraw","openOnLeafletEditable","formOptionKey","initializedElements","formOptionsKey","formElement","getFormElementClass","hideFormElements","hideForm","preShow","showFormElements","showFormElement","showFormElementForStyleOption","getFormElementStandardClass","__importDefault","mod","ColorElement_1","FormElement_1","colorPickerDiv","getColorRamp","setSelectCallback","mt","elem","backgroundColor","selectColor","selectIconClass","size","startsWith","markerOptions","newIcon","createMarkerIcon","setIcon","getElement","setNewMarker","getNewMarkerOptions","iconOptions","icon","marker","find","iconColor","_getDefaultMarkerColor","iconSize","small","getDefaultMarkerForColor","_ensureMarkerIcon","getIconOptions","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","values","JSON","stringify","sizeToName","styleEdtior","Icon","iconUrl","_getMarkerUrlForStyle","iconAnchor","popupAnchor","tmpOptions","createIcon","outerHTML","_getMarkerUrl","url","styleEditorOptions","isEnabled","styleEditorClassOptions","disable","createUI","controlUI","cancelUI","toggle","enable","showCancelButton","hideCancelButton"],"mappings":"mCACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BCjFrDrB,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQkC,sBAAmB,EAC3B,MAAMA,UAAyBC,EAAEC,MAC7B,YAAYC,GACRC,QACAC,KAAKF,YAAcA,EACnBE,KAAKC,IAAMH,EAAYG,IACvBD,KAAKE,KAAOJ,EAAYI,MAGhCzC,EAAQkC,iBAAmBA,G,6BCV3BtB,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ0C,0BAA4B1C,EAAQ2C,+BAAiC3C,EAAQ4C,sCAAmC,EACxH,MAAMC,EAA8B,EAAQ,IAC5CjC,OAAOC,eAAeb,EAAS,mCAAoC,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAO8B,EAA4BD,oCAC7I,MAAME,EAA4B,EAAQ,IAC1ClC,OAAOC,eAAeb,EAAS,iCAAkC,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAO+B,EAA0BH,kCACzI,MAAMI,EAAuB,EAAQ,IACrCnC,OAAOC,eAAeb,EAAS,4BAA6B,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOgC,EAAqBL,8B,6BCP/H9B,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQgD,qBAAkB,EAC1B,MAAMC,EAAc,EAAQ,GACtBC,EAAS,EAAQ,IACjBC,EAAY,EAAQ,GAC1B,MAAMH,UAAwBb,EAAEC,MAC5B,YAAYI,EAAKY,GACbd,QACAC,KAAKC,IAAMA,EACXD,KAAKa,QAAUxC,OAAOyC,OAAOzC,OAAOyC,OAAO,GAAIF,EAAUT,2BAA4BU,GACrFb,KAAKE,KAAO,IAAIS,EAAOI,KAAKf,MAC5BA,KAAKgB,WAET,WACI,MAAMC,EAAWjB,KAAKiB,SAAWrB,EAAEsB,QAAQjC,OAAO,MAAO,sBAAuBe,KAAKC,IAAIkB,gBACnFC,EAAoBxB,EAAEsB,QAAQjC,OAAO,MAAO,6BAA8BgC,GAE1EI,GADsBrB,KAAKsB,iBAAmB1B,EAAEsB,QAAQjC,OAAO,MAAO,+BAAgCgC,GACzFrB,EAAEsB,QAAQjC,OAAO,SAAU,iDAAkDmC,IAChGC,EAAWE,MAAQvB,KAAKa,QAAQW,QAAQC,KACxC,MAAMC,EAAiB1B,KAAK2B,UAAY/B,EAAEsB,QAAQjC,OAAO,MAAO,sCAAuCe,KAAKC,IAAIkB,gBAChGvB,EAAEsB,QAAQjC,OAAO,MAAO,8BAA+ByC,GAC/DE,UAAY5B,KAAKa,QAAQW,QAAQK,QAEzCjC,EAAEkC,SAASC,yBAAyBd,GACpCrB,EAAEkC,SAASC,yBAAyBV,GAEpCzB,EAAEkC,SAASE,wBAAwBf,GACnCrB,EAAEkC,SAASE,wBAAwBX,GAEnCzB,EAAEkC,SAASG,GAAGZ,EAAY,QAASrB,KAAKkC,OAAQlC,MAChDA,KAAKmC,kBAAkBnC,KAAKC,KAC5B,IAAIS,EAAY0B,UAAUpC,MAE9B,kBAAkBC,GACdD,KAAKa,QAAQwB,OAAOC,QAAQC,GAAStC,EAAIgC,GAAGM,EAAOvC,KAAKwC,UAE5D,QAAQD,IAGR,OAAOA,GACHvC,KAAKyC,aACLzC,KAAK0C,cACLH,EAAMI,kBAEV,mBACI,MAAMC,EAAW5C,KAAKC,IAAI4C,WAAWC,WAAWF,SAChD,IAAK,IAAIG,EAAQ,EAAGA,EAAQH,EAASI,OAAQD,IAAS,CAClD,MAAME,EAAUL,EAASG,GACzBnD,EAAEsB,QAAQgC,YAAYD,EAAS,wCAGvC,iBACIjD,KAAKC,IAAIkD,UAAUnD,KAAKoD,cAAepD,MAE3C,cAAcqD,GACNrD,KAAKsD,eAAeD,KAGpBrD,KAAKa,QAAQ0C,aAAeF,aAAiBzD,EAAE4D,YAG1CH,aAAiBzD,EAAE6D,QAA2B7D,EAAE8D,KAIzDL,EAAMpB,GAAG,QAASjC,KAAK2D,WAAY3D,OAEvC,oBACIA,KAAKC,IAAIkD,UAAUnD,KAAK4D,iBAAkB5D,MAE9C,iBAAiBqD,GACbA,EAAMQ,IAAI,QAAS7D,KAAK2D,WAAY3D,MAExC,eAAeqD,GACX,YAAcS,IAAVT,GAGGrD,KAAKa,QAAQkD,iBAAiBC,KAAKC,GAAaZ,EAAMvD,aAAeuD,EAAMvD,YAAYoE,KAAKC,gBAAkBF,EAAUE,eAEnI,aACIvE,EAAEsB,QAAQgC,YAAYlD,KAAKiB,SAAU,kBACrCjB,KAAKoE,mBACLpE,KAAKqE,UAAU,UAGnB,WAAW9B,GACHA,IACAvC,KAAKsE,eAAiB/B,GAE1B3C,EAAEsB,QAAQqD,SAASvE,KAAKiB,SAAU,kBAClCjB,KAAKqE,UAAU,WAEnB,cACIzE,EAAEsB,QAAQgC,YAAYlD,KAAK2B,UAAW,8BAE1C,cACI/B,EAAEsB,QAAQqD,SAASvE,KAAK2B,UAAW,8BAEvC,UAAU6C,EAAWnB,IAErB,SACIrD,KAAKyE,iBACLzE,KAAK0C,cACL1C,KAAK2D,aAET,UACI3D,KAAK0E,oBACL1E,KAAK2E,cACL3E,KAAKyC,aAET,mBAEI,OAAIzC,KAAKsE,eAAeM,kBAAkBhF,EAAE4D,WACjCxD,KAAKsE,eAAeM,OAAOC,YAE3B,CAAC7E,KAAKsE,eAAeM,SAGxCnH,EAAQgD,gBAAkBA,G,6BCtH1BpC,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQqH,WAAarH,EAAQsH,UAAO,EACpC,MAAMC,EAAS,EAAQ,IACvB3G,OAAOC,eAAeb,EAAS,OAAQ,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOwG,EAAOD,QAC5F,MAAME,EAAe,EAAQ,GAC7B5G,OAAOC,eAAeb,EAAS,aAAc,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOyG,EAAaH,e,6BCLxGzG,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQqH,gBAAa,EACrB,MAAMI,EAAK,EAAQ,GACbC,EAAiB,EAAQ,IAEzBC,EAAe,CAEjB,MAASD,EAAeE,cAK5B,MAAMP,UAAmBI,EAAGH,KACxB,YAAYjF,EAAawF,GACrBvF,MAAMD,EAVQ,SAUoBwF,EAAiBF,IAG3D3H,EAAQqH,WAAaA,G,6BCjBrBzG,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ8H,iBAAc,EACtB,MAAMC,EAAqB,EAAQ,GAEnC,MAAMD,UAAoBC,EAAmB7F,iBACzC,YAAY8F,EAAaC,EAAYJ,EAAiB/D,GAClDxB,MAAM2F,EAAW5F,aACjBE,KAAKyF,YAAcA,EAEnBzF,KAAKuB,MAAQA,GAASkE,EAAYE,OAAO,GAAGxB,cAAgBsB,EAAYG,MAAM,GAC9E5F,KAAK0F,WAAaA,EAClB1F,KAAKf,OAAOqG,GAGhB,OAAOA,GACHtF,KAAK6F,UACDjG,EAAEsB,QAAQjC,OAAO,MAAO,gCAAiCqG,GAC7DtF,KAAK8F,cACL9F,KAAK+F,gBAGT,cACgBnG,EAAEsB,QAAQjC,OAAO,QAAS,4BAA6Be,KAAK6F,WAClEjE,UAAY5B,KAAKuB,MAAQ,IAGnC,iBAGA,KAAK+C,GACDtE,KAAKgG,MAAM1B,GACXtE,KAAKiG,WAGT,WACIjG,KAAKE,KAAKgG,YAAYlG,KAAK6F,WAG/B,OACI7F,KAAKE,KAAKiG,YAAYnG,KAAK6F,WAG/B,MAAMvB,IAGN,aAGA,SAAS1F,GACL,MAAMwH,EAASpG,KAAK0F,WAAW5F,YAAYuG,mBAE3C,IAAK,IAAI1I,EAAI,EAAGA,EAAIyI,EAAOpD,OAAQrF,IAAK,CACpC,IAAI0F,EAAQ+C,EAAOzI,GACnB,GAAI0F,aAAiBzD,EAAE6D,OACnB,IAAIzD,KAAKF,YAAYe,QAAQyF,WAAWtG,KAAKF,aAAayG,SAASvG,KAAKyF,YAAa7G,QAEpF,GAAIyE,aAAiBzD,EAAE8D,KAAM,CAC9B,IAAI8C,EAAW,GACfA,EAASxG,KAAKyF,aAAe7G,EAC7ByE,EAAMkD,SAASC,GACfnD,EAAMxC,QAAQb,KAAKyF,aAAe7G,EAGtCoB,KAAKE,KAAKuG,gBAAgBpD,GAG9BrD,KAAK0F,WAAWM,SAGxBvI,EAAQ8H,YAAcA,G,6BCrEtBlH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQiJ,cAAgBjJ,EAAQgG,YAAS,EACzC,MAAMkD,EAAW,EAAQ,IACzBtI,OAAOC,eAAeb,EAAS,SAAU,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOmI,EAASlD,UAChG,MAAMmD,EAAkB,EAAQ,IAChCvI,OAAOC,eAAeb,EAAS,gBAAiB,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOoI,EAAgBF,kB,6BCL9GrI,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtD,EAAQ,GACR,MAAMiI,EAAoB,EAAQ,GAC5BC,EAAuB,EAAQ,IACrC,EAAQ,IACRlH,EAAEmH,YAAcF,EAAkBpG,gBAClCb,EAAEE,YAAc,SAAUG,EAAKY,GAAW,OAAO,IAAIgG,EAAkBpG,gBAAgBR,EAAKY,IAC5FjB,EAAEoH,QAAQD,YAAcD,EAAqBG,mBAC7CrH,EAAEsH,QAAQpH,YAAc,SAAUe,GAAW,OAAO,IAAIiG,EAAqBG,mBAAmBpG,IAChGpD,EAAQ0J,QAAUvH,G,cCVlBlC,EAAOD,aAAUqG,G,6BCCjBzF,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ2E,eAAY,EACpB,MAAMoD,EAAqB,EAAQ,GACnC,MAAMpD,UAAkBoD,EAAmB7F,iBACvC,YAAYG,GACRC,MAAMD,GACNE,KAAKoH,WAAapH,KAAKqH,mBACvBrH,KAAKsH,aAAetH,KAAKuH,qBACzBvH,KAAKwH,eAET,eACI5H,EAAEkC,SAAS2F,YAAYzH,KAAKC,IAAK,QAASD,KAAK0H,UAAW1H,MAC1DJ,EAAEkC,SAAS2F,YAAYzH,KAAKF,YAAYmB,SAAU,QAASjB,KAAK0H,UAAW1H,MAE/E,YACIA,KAAKoH,WAAW3F,OAChBzB,KAAKsH,aAAa7F,OAEtB,mBACI,IAAIkG,EAAY/H,EAAEsB,QAAQjC,OAAO,MAAO,sCAAuCe,KAAKF,YAAYwB,kBAChG,OAAO,IAAItB,KAAKF,YAAYe,QAAQuG,WAAWpH,KAAKF,YAAa6H,GAErE,qBACI,IAAIA,EAAY/H,EAAEsB,QAAQjC,OAAO,MAAO,wCAAyCe,KAAKF,YAAYwB,kBAClG,OAAO,IAAItB,KAAKF,YAAYe,QAAQyG,aAAatH,KAAKF,YAAa6H,GAEvE,iBACI3H,KAAK4H,YACL5H,KAAKoH,WAAWS,OAEpB,mBACI7H,KAAK4H,YACL5H,KAAKsH,aAAaO,OAEtB,gBAAgB5E,GACZjD,KAAKE,KAAKuG,gBAAgBxD,GAE9B,UAAU6E,GACN,IAAIC,EAASD,EAAElD,OACf,IAAK,IAAIjH,EAAI,EAAGA,EAAI,IACXoK,EADepK,IAAK,CAIzB,GAAMoK,EAAOC,WAAapI,EAAEsB,QAAQ+G,SAASF,EAAQ,gCACjD,OAEJA,EAASA,EAAOG,WAEpBlI,KAAKoH,WAAWM,YAChB1H,KAAKsH,aAAaI,aAG1BjK,EAAQ2E,UAAYA,G,6BCjDpB/D,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQsD,KAAOtD,EAAQ0K,iBAAc,EAGrC1K,EAAQ0K,YAFR,QAgJA1K,EAAQsD,KA7IR,MACI,YAAYjB,GACRE,KAAKF,YAAcA,EACnBE,KAAKC,IAAMH,EAAYG,IACvBD,KAAKa,QAAUf,EAAYe,QAG/B,UAAU2D,EAAWvB,GACjBjD,KAAKC,IAAIoE,UAAUrE,KAAKa,QAAQuH,uBAAyB5D,EAAWvB,GAIxE,gBAAgBA,GACZjD,KAAKqE,UAAU,UAAWpB,GAG9B,YAAYA,GACJA,GACArD,EAAEsB,QAAQqD,SAAStB,EAAS,8BAOpC,SAASoF,EAAKC,GAAS,GAOnB,GANKD,GAEwB,KADzBA,EAAMrI,KAAKa,QAAQ0H,cACXC,QAAQ,OACZH,EAAM,IAAMA,GAGK,IAArBA,EAAIG,QAAQ,KAIZ,OAHIF,GACAD,EAAII,QAAQ,IAAK,IAEdJ,EAEX,GAAIA,EAAIG,QAAQ,KAAO,EACnB,MAAO,IAAMH,EAEjB,IAAIK,EAAWL,EAAIM,UAAU,GAAGF,QAAQ,IAAK,IAAIG,MAAM,KACnDC,EAAc7I,KAAK8I,gBAAgBC,SAASL,EAAS,GAAI,KAAO1I,KAAK8I,gBAAgBC,SAASL,EAAS,GAAI,KAC3G1I,KAAK8I,gBAAgBC,SAASL,EAAS,GAAI,KAC/C,OAAIJ,EACOO,EAEJ,IAAMA,EAGjB,SAASvE,EAAgB0E,GACrB,IAAIhD,EAAQ1B,EAAezD,QAAQmI,GACnC,OAAIhD,GAGG,KAGX,SAAS1B,EAAgB0E,EAAQpK,GAC7B,GAAI0F,aAA0B1E,EAAE6D,OAC5B,IAAIzD,KAAKF,YAAYe,QAAQyF,WAAWtG,KAAKF,aAAayG,SAASyC,EAAQpK,OAE1E,CACD,IAAI4H,EAAW,GACfA,EAASwC,GAAUpK,EACnB0F,EAAeiC,SAASC,GAE5BxG,KAAKyG,gBAAgBnC,GAGzB,YAAYrB,GACJA,GACArD,EAAEsB,QAAQgC,YAAYD,EAAS,8BAIvC,gBAAgBgG,GACZ,IAAIC,EAAMD,EAAME,SAAS,IACzB,OAAsB,IAAfD,EAAIlG,OAAe,IAAMkG,EAAMA,EAG1C,mBAAmBD,GACfA,EAAQjJ,KAAKoJ,SAASH,GACtB,IAAII,EAAU,IAAIrJ,KAAKF,YAAYe,QAAQyF,WAAWtG,KAAKF,aAAauJ,QACpEC,EAAiBtJ,KAAKF,YAAYe,QAAQwI,QAU9C,GATKE,MAAMC,QAAQH,KAGXA,EADAhL,OAAOoL,KAAKJ,GAASK,SAAST,GACpBI,EAAQJ,GAGRI,EAAiB,SAGZ,OAAnBC,EAAyB,CACzB,IAAKC,MAAMC,QAAQF,GAAiB,CAChC,IAAIG,EAAOpL,OAAOoL,KAAKH,GAEnBA,EADAG,EAAKC,SAAST,GACGK,EAAeL,GAE3BQ,EAAKC,SAAS,WACFJ,EAAwB,QAGxBD,EAGzB,OAAOA,EAAQM,OAAQvK,GAAMkK,EAAeI,SAAStK,IAEzD,OAAOiK,EAGX,yBAAyBJ,GACrBA,EAAQjJ,KAAKoJ,SAASH,GACtB,IAAII,EAAUrJ,KAAK4J,mBAAmBX,GAClCY,EAAa,GACbC,EAAgB9J,KAAKF,YAAYe,QAAQkJ,kBAmB7C,OAlBsB,OAAlBD,IAC6B,iBAAlBA,GACPD,EAAWG,KAAKF,GAEhBzL,OAAOoL,KAAKK,GAAeJ,SAAST,IACpCY,EAAWG,KAAKF,EAAcb,KAGtCa,EAAgB,IAAI9J,KAAKF,YAAYe,QAAQyF,WAAWtG,KAAKF,aAAaiK,uBACpDjG,IAAlBgG,IAC6B,iBAAlBA,GACPD,EAAWG,KAAKF,GAEhBzL,OAAOoL,KAAKK,GAAeJ,SAAST,IACpCY,EAAWG,KAAKF,EAAcb,KAGtCY,EAAWF,OAAQvK,GAAMiK,EAAQK,SAAStK,IACtCyK,EAAW7G,OAAS,EACb6G,EAAW,GAEfR,EAAQ,M,6BClJvBhL,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ4C,sCAAmC,EAC3C5C,EAAQ4C,iCAAmC,CACvC4J,SAAU,UACVzI,QAAS,CACLD,MAAO,eACP2I,OAAQ,SACRC,YAAa,Y,6BCPrB9L,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ2C,oCAAiC,EACzC,MAAMgK,EAAS,EAAQ,GACjBC,EAAW,EAAQ,GACzB5M,EAAQ2C,+BAAiC,CACrC6J,SAAU,UACVK,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAChG,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACxF,UAAW,WACf/B,aAAc,KACdjC,WAAY+D,EAAS3D,cACrB2C,QAAS,KACTU,kBAAmB,KACnBQ,mBAAoB,KACpBnD,WAAYgD,EAAOtF,WACnBwC,aAAc8C,EAAOtF,WACrBf,iBAAkB,GAClByG,MAAO,GACPnI,OAAQ,GACRoI,mBAAmB,EACnBC,uBAAuB,EACvBhI,aAAa,EACblB,QAAS,CACLK,QAAS,yCACTJ,KAAM,qBAEV8B,aAAa,EACb6E,uBAAwB,iB,6BC3B5B/J,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQsH,UAAO,EACf,MAAMS,EAAqB,EAAQ,GAQnC,MAAMT,UAAaS,EAAmB7F,iBAClC,YAAYG,EAAa6K,EAAerF,EAAiBF,GACrDrF,MAAMD,GACNE,KAAK4K,oBAAsB,GAC3B5K,KAAK6K,eAAiBF,EACtB3K,KAAKsF,gBAAkBA,EACvBtF,KAAKoF,aAAeA,EACpBpF,KAAKf,SAGT,SACI,IAAK,IAAIC,KAAOc,KAAKoF,aAAc,CAC/B,MAAM0F,EAAc9K,KAAK+K,oBAAoB7L,QACzB4E,IAAhBgH,IACA9K,KAAK4K,oBAAoB1L,GAAO,IAAI4L,EAAY9K,KAAMA,KAAKsF,mBAKvE,OACItF,KAAKgL,mBACLhL,KAAKiL,WAGT,mBACI,IAAK,IAAI/L,KAAOc,KAAK4K,oBACjB5K,KAAK4K,oBAAoB1L,GAAKuC,OAItC,WACIzB,KAAKE,KAAKiG,YAAYnG,KAAKsF,iBAG/B,KAAKhB,GACDtE,KAAKkL,UACLlL,KAAKmL,mBACLnL,KAAKiG,WACLjG,KAAKgG,MAAM1B,GAGf,WAGA,mBACI,IAAK,IAAIpF,KAAOc,KAAK4K,oBACjB5K,KAAKoL,gBAAgBpL,KAAK4K,oBAAoB1L,IAItD,WACIc,KAAKE,KAAKgG,YAAYlG,KAAKsF,iBAG/B,MAAMhB,GACF,IAAK,IAAIpF,KAAOc,KAAK4K,oBACjB5K,KAAK4K,oBAAoB1L,GAAK8G,MAAM1B,GAI5C,YACI,IAAK,IAAIpF,KAAOc,KAAK4K,oBACjB5K,KAAK4K,oBAAoB1L,GAAKwI,YAMtC,gBAAgBoD,GAER9K,KAAKqL,8BAA8BP,EAAYrF,aAC/CqF,EAAYjD,OAGZiD,EAAYrJ,OAOpB,oBAAoBgE,GAEhB,GADsBpH,OAAOoL,KAAKzJ,KAAKoF,cACnBoD,QAAQ/C,IAAgB,EAAG,CAC3C,IAAIF,EAAcvF,KAAKoF,aAAaK,GACpC,GAAIF,EAAa,CAEb,GAA2B,kBAAhBA,EACP,OAAOvF,KAAKsL,4BAA4B7F,GAExC,gBAAiBF,GAAe,YAAaA,IAC7CA,EAAcA,EAAyB,aAI/C,OAAOvF,KAAKsL,4BAA4B7F,IAOhD,8BAA8BA,GA+B1B,OAAO,EAMX,4BAA4BA,GACxB,OAAOzF,KAAKoF,aAAaK,IAGjChI,EAAQsH,KAAOA,G,6BCzJf,IAAIwG,EAAmBvL,MAAQA,KAAKuL,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIzM,WAAcyM,EAAM,CAAE,QAAWA,IAExDnN,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ8H,YAAc9H,EAAQ4H,kBAAe,EAC7C,MAAMoG,EAAiBF,EAAgB,EAAQ,KAC/C9N,EAAQ4H,aAAeoG,EAAetE,QACtC,MAAMuE,EAAgB,EAAQ,GAC9BrN,OAAOC,eAAeb,EAAS,cAAe,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOkN,EAAcnG,gB,6BCR1GlH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtD,MAAM8M,EAAgB,EAAQ,GACxBzG,EAAe,EAAQ,GAM7B,MAAMI,UAAqBqG,EAAcnG,YACrC,YAAYG,EAAYJ,GACpBvF,MANY,QAMO2F,EAAYJ,EAPzB,SASV,gBACItF,KAAK2L,eAAiB/L,EAAEsB,QAAQjC,OAAO,MAAO,kCAAmCe,KAAK6F,WACtF7F,KAAK4L,eAAetJ,QAAQtC,KAAK6L,kBAAmB7L,MAGxD,eAEI,GAAIA,KAAK0F,sBAAsBT,EAAaH,WAAY,CACpD,MAAMgH,EAAK,IAAI9L,KAAKF,YAAYe,QAAQyF,WAAWtG,KAAKF,aACxD,GAAMgM,EAAGxB,UACL,OAAOwB,EAAGxB,UAGlB,OAAOtK,KAAKF,YAAYe,QAAQyJ,UAGpC,kBAAkBrB,GACd,IAAI8C,EAAOnM,EAAEsB,QAAQjC,OAAO,MAAO,4BAA6Be,KAAK2L,gBACrEI,EAAK/F,MAAMgG,gBAAkB/C,EAC7BrJ,EAAEkC,SAAS2F,YAAYsE,EAAM,QAAS/L,KAAKiM,YAAajM,MAG5D,YAAYuC,GACRA,EAAMI,kBACN3C,KAAKuG,SAASvG,KAAKE,KAAKkJ,SAAS7G,EAAMqC,OAAOoB,MAAMgG,mBAG5DvO,EAAQ0J,QAAU9B,G,6BCvClBhH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQgG,YAAS,EACjB,MAAM+B,EAAqB,EAAQ,GACnC,MAAM/B,UAAe+B,EAAmB7F,iBACpC,YAAYG,EAAaoM,GACrBnM,MAAMD,GACNE,KAAKmM,KAAO,CACR,MAAS,CAAC,GAAI,IACd,OAAU,CAAC,GAAI,IACf,MAAS,CAAC,GAAI,KAGM,KAApBD,GAA2BA,EAAgBE,WAAW,sCACtDpM,KAAKkM,gBAAkB,oCAAsCA,GAIrE,aAAaG,GACT,IAAIC,EAAUtM,KAAKuM,iBAAiBF,GACpCrM,KAAKF,YAAYuG,mBAAmB/D,QAASgC,IACrCA,aAA0B1E,EAAE6D,SAC5Ba,EAAekI,QAAQF,GACnBhI,aAA0B1E,EAAE4D,WAC5Bc,EAAenB,WAAU,SAAUE,GAC3BA,aAAiBzD,EAAE6D,QACnB7D,EAAEsB,QAAQqD,SAASlB,EAAMoJ,aAAc,0CAI/C7M,EAAEsB,QAAQqD,SAASD,EAAemI,aAAc,0CAMhE,SAAShH,EAAa7G,GACE,SAAhB6G,IACAA,EAAc,OAASA,EAAYE,OAAO,GAAGxB,cAAgBsB,EAAYG,MAAM,IAEnF5F,KAAK0M,aAAa1M,KAAK2M,oBAAoBlH,EAAa7G,IAG5D,iBAAiB0G,EAAiBsH,EAAaC,IAK/C,iBACI,IAAIR,EAAgB,GACpB,MACMS,EADS9M,KAAKF,YAAYuG,mBACV0G,KAAM1J,GAAUA,aAAiBzD,EAAE6D,QAIzD,OAHIqJ,IACAT,EAAgBS,EAAOjM,QAAQgM,KAAKhM,SAEpCxC,OAAOoL,KAAK4C,GAAerJ,OAAS,IAGxCqJ,EAAcW,UAAYhN,KAAKiN,yBAC/BZ,EAAca,SAAWlN,KAAKmM,KAAKgB,MACnCd,EAAcQ,KAAO7M,KAAKE,KAAKkN,yBAAyBf,EAAcW,WACtEX,EAAgBrM,KAAKqN,kBAAkBhB,IAL5BA,EAQf,oBAAoBnN,EAAKN,GACrB,IAAIgO,EAAc5M,KAAKsN,iBAEvB,OADAV,EAAY1N,GAAON,EACZgO,EAKX,kBAAkBA,GAEd,OADc5M,KAAKE,KAAK0J,mBAAmBgD,EAAYI,WAC3CtD,SAASkD,EAAYC,QAGjCD,EAAYC,KAAO7M,KAAKE,KAAKkN,yBAAyBR,EAAYI,YAFvDJ,EAaf,yBACI,IAAIW,EAAsBvN,KAAKsK,UAC3BkD,EAAmBxN,KAAKF,YAAYe,QAAQyJ,UAC5CmD,EAAuB,GACvB,MAAOF,GACPE,EAAuBF,EAAoB5D,OAAQvK,GAAMoO,EAAiB9D,SAAStK,IAC/C,IAAhCqO,EAAqBzK,SACrByK,EAAuBF,IAI3BE,EAAuBD,EAE3B,IAAIvE,EAAQjJ,KAAKF,YAAYe,QAAQ0J,mBAarC,OAZc,OAAVtB,GAAmBwE,EAAqB/D,SAAST,KACjDA,EAAQ,MAEE,OAAVA,IACAA,EAAQjJ,KAAKF,YAAYe,QAAQ0H,aACnB,OAAVU,GAAmBwE,EAAqB/D,SAAST,KACjDA,EAAQ,MAEE,OAAVA,IACAA,EAAQwE,EAAqB,KAG9BzN,KAAKE,KAAKkJ,SAASH,GAG9B,WAAWkD,GACP,IAAI1C,EAAOpL,OAAOoL,KAAKzJ,KAAKmM,MAC5B,GAAoB,iBAATA,EAAmB,CACb,MAATA,EACAA,EAAO,QAEO,MAATA,EACLA,EAAO,SAEO,MAATA,IACLA,EAAO,SAEX,IAAK,IAAIxO,EAAI,EAAGA,EAAI8L,EAAKzG,OAAQrF,IAC7B,GAAIqC,KAAKmM,KAAK1C,EAAK9L,MAAQwO,EACvB,OAAO1C,EAAK9L,GAIxB,IAAI+P,EAASrP,OAAOqP,OAAO1N,KAAKmM,MAChC,IAAK,IAAIxO,EAAI,EAAGA,EAAI+P,EAAO1K,OAAQrF,IAC/B,GAAIgQ,KAAKC,UAAUzB,KAAUwB,KAAKC,UAAUF,EAAO/P,IAC/C,OAAO8L,EAAK9L,GAGpB,OAAO8L,EAAK,GAGhB,YAAY0C,GAER,OADAA,EAAOnM,KAAK6N,WAAW1B,GAChBnM,KAAKmM,KAAKA,IAGzB1O,EAAQgG,OAASA,G,6BCpJjBpF,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQiJ,mBAAgB,EACxB,MAAMxB,EAAK,EAAQ,GAKnB,MAAMwB,UAAsBxB,EAAGzB,OAC3B,YAAYqK,GACR/N,MAAM+N,EAAa,iBACnB9N,KAAKqJ,QAAU,CACX,iBACA,SACA,iBACA,SACA,mBAAoB,WACpB,eACA,OACA,QACA,iBACA,SACA,mBACA,sBACA,mBACA,WACA,SACA,UACA,WACA,OACA,aACA,aACA,MACA,OACA,UACA,iBACA,WACA,YACA,QACA,SACA,UACA,OACA,QACA,SACA,UACA,WACA,MACA,SACA,WACA,UACA,cACA,QACA,SACA,mBACA,SACA,aACA,WACA,OACA,WACA,UACA,SACA,SACA,UACA,UACA,OACA,eACA,YACA,SACA,SACA,UACA,OACA,aACA,OACA,OACA,YACA,MACA,OACA,UACA,SACA,WACA,WACA,SACA,aACA,YACA,aACA,WACA,mBACA,eACA,UACA,WACA,iBACA,MACA,QACA,UACA,aACA,YACA,sBACA,UACA,eACA,QACA,WACA,OACA,OACA,UACA,OACA,SACA,WACA,aACA,iBACA,gBACA,aACA,WACA,QACA,qBACA,YACA,mBACA,aACA,SACA,UACA,MACA,WACA,cACA,UACA,cACA,WAGR,iBAAiBuD,GACb,IAAIM,EAAWN,EAAYM,SAC3B,OAAO,IAAItN,EAAEmO,KAAK,CACdC,QAAShO,KAAKiO,sBAAsBrB,GACpCM,SAAUN,EAAYM,SACtBF,UAAWJ,EAAYI,UACvBH,KAAMD,EAAYC,KAClB7E,UAAWhI,KAAKkM,gBAChBgC,WAAY,CAAChB,EAAS,GAAK,EAAGA,EAAS,GAAK,GAC5CiB,YAAa,CAAC,GAAIjB,EAAS,GAAK,KAGxC,iBAAiB5H,EAAiBsH,EAAaC,GAC3C,IAAIuB,EAAa,GA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","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorClass = void 0;\nclass StyleEditorClass extends L.Class {\n    constructor(styleEditor) {\n        super();\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.util = styleEditor.util;\n    }\n}\nexports.StyleEditorClass = StyleEditorClass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = exports.DefaultStyleEditorClassOptions = exports.DefaultStyleEditorControlOptions = void 0;\nconst StyleEditorControlOptions_1 = require(\"./StyleEditorControlOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorControlOptions\", { enumerable: true, get: function () { return StyleEditorControlOptions_1.DefaultStyleEditorControlOptions; } });\nconst StyleEditorClassOptions_1 = require(\"./StyleEditorClassOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorClassOptions\", { enumerable: true, get: function () { return StyleEditorClassOptions_1.DefaultStyleEditorClassOptions; } });\nconst StyleEditorOptions_1 = require(\"./StyleEditorOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorOptions\", { enumerable: true, get: function () { return StyleEditorOptions_1.DefaultStyleEditorOptions; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorImpl = void 0;\nconst StyleForm_1 = require(\"./StyleForm\");\nconst Util_1 = require(\"./Util\");\nconst options_1 = require(\"./options\");\nclass StyleEditorImpl extends L.Class {\n    constructor(map, options) {\n        super();\n        this.map = map;\n        this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorOptions), options);\n        this.util = new Util_1.Util(this);\n        this.createUi();\n    }\n    createUi() {\n        const editorUI = this.editorUI = L.DomUtil.create('div', 'leaflet-styleeditor', this.map.getContainer());\n        const styleEditorHeader = L.DomUtil.create('div', 'leaflet-styleeditor-header', editorUI);\n        const styleEditorInterior = this.interiorEditorUI = L.DomUtil.create('div', 'leaflet-styleeditor-interior', editorUI);\n        const buttonNext = L.DomUtil.create('button', 'leaflet-styleeditor-button styleeditor-hideBtn', styleEditorHeader);\n        buttonNext.title = this.options.strings.hide;\n        const tooltipWrapper = this.tooltipUI = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.map.getContainer());\n        const tooltip = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip', tooltipWrapper);\n        tooltip.innerHTML = this.options.strings.tooltip;\n        // do not propagate scrolling events on the ui to the map\n        L.DomEvent.disableScrollPropagation(editorUI);\n        L.DomEvent.disableScrollPropagation(buttonNext);\n        // do not propagate click events on the ui to the map\n        L.DomEvent.disableClickPropagation(editorUI);\n        L.DomEvent.disableClickPropagation(buttonNext);\n        // select next layer to style\n        L.DomEvent.on(buttonNext, 'click', this.onNext, this);\n        this.addEventListeners(this.map);\n        new StyleForm_1.StyleForm(this);\n    }\n    addEventListeners(map) {\n        this.options.events.forEach(event => map.on(event, this.onEvent));\n    }\n    onEvent(event) {\n        // TODO\n    }\n    onNext(event) {\n        this.hideEditor();\n        this.showTooltip();\n        event.stopPropagation();\n    }\n    removeIndicators() {\n        const children = this.map.getPanes().markerPane.children;\n        for (let index = 0; index < children.length; index++) {\n            const element = children[index];\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    addClickEvents() {\n        this.map.eachLayer(this.addClickEvent, this);\n    }\n    addClickEvent(layer) {\n        if (this.layerIsIgnored(layer)) {\n            return;\n        }\n        if (this.options.useGrouping && layer instanceof L.LayerGroup) {\n            //this.options._layerGroups.push(layer)\n        }\n        else if (layer instanceof L.Marker || layer instanceof L.Path) {\n            //let evt = layer.on('click', this.initChangeStyle, this)\n            //this.options._editLayers.push(evt)\n        }\n        layer.on('click', this.showEditor, this);\n    }\n    removeClickEvents() {\n        this.map.eachLayer(this.removeClickEvent, this);\n    }\n    removeClickEvent(layer) {\n        layer.off('click', this.showEditor, this);\n    }\n    layerIsIgnored(layer) {\n        if (layer === undefined) {\n            return false;\n        }\n        return this.options.ignoreLayerTypes.some(layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase());\n    }\n    hideEditor() {\n        L.DomUtil.removeClass(this.editorUI, 'editor-enabled');\n        this.removeIndicators();\n        this.fireEvent('hidden');\n    }\n    // TODO what type is event?!\n    showEditor(event) {\n        if (event) {\n            this.currentElement = event;\n        }\n        L.DomUtil.addClass(this.editorUI, 'editor-enabled');\n        this.fireEvent('visible');\n    }\n    showTooltip() {\n        L.DomUtil.removeClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    hideTooltip() {\n        L.DomUtil.addClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    fireEvent(eventName, layer) {\n    }\n    enable() {\n        this.addClickEvents();\n        this.showTooltip();\n        this.showEditor();\n    }\n    disable() {\n        this.removeClickEvents();\n        this.hideTooltip();\n        this.hideEditor();\n    }\n    getCurrentLayers() {\n        // TODO !!!! currentelemnt target?!\n        if (this.currentElement.target instanceof L.LayerGroup)\n            return this.currentElement.target.getLayers();\n        else\n            return [this.currentElement.target];\n    }\n}\nexports.StyleEditorImpl = StyleEditorImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = exports.Form = void 0;\nconst Form_1 = require(\"./Form\");\nObject.defineProperty(exports, \"Form\", { enumerable: true, get: function () { return Form_1.Form; } });\nconst MarkerForm_1 = require(\"./MarkerForm\");\nObject.defineProperty(exports, \"MarkerForm\", { enumerable: true, get: function () { return MarkerForm_1.MarkerForm; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = void 0;\nconst _1 = require(\".\");\nconst formElements_1 = require(\"../formElements\");\nconst formOptionKey = 'marker';\nconst formElements = {\n    //'icon': new IconElement(),\n    'color': formElements_1.ColorElement\n    //'size': new SizeElement(),\n    //'popupContent': new PopupContentElement()\n};\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends _1.Form {\n    constructor(styleEditor, parentUiElement) {\n        super(styleEditor, formOptionKey, parentUiElement, formElements);\n    }\n}\nexports.MarkerForm = MarkerForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormElement = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleOption, parentForm, parentUiElement, title) {\n        super(parentForm.styleEditor);\n        this.styleOption = styleOption;\n        // if no title is given use styling option\n        this.title = title || styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        this.parentForm = parentForm;\n        this.create(parentUiElement);\n    }\n    /** create uiElement and content */\n    create(parentUiElement) {\n        this.uiElement =\n            L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle();\n        this.createContent();\n    }\n    /** create title */\n    createTitle() {\n        let title = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.uiElement);\n        title.innerHTML = this.title + ':';\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show(currentElement) {\n        this.style(currentElement);\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.uiElement);\n    }\n    /** style the FormElement */\n    style(currentElement) {\n    }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(value) {\n        const layers = this.parentForm.styleEditor.getCurrentLayers();\n        // update layers\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof L.Marker) {\n                new this.styleEditor.options.markerType(this.styleEditor).setStyle(this.styleOption, value);\n            }\n            else if (layer instanceof L.Path) {\n                let newStyle = {};\n                newStyle[this.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.parentForm.style();\n    }\n}\nexports.FormElement = FormElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = exports.Marker = void 0;\nconst Marker_1 = require(\"./Marker\");\nObject.defineProperty(exports, \"Marker\", { enumerable: true, get: function () { return Marker_1.Marker; } });\nconst DefaultMarker_1 = require(\"./DefaultMarker\");\nObject.defineProperty(exports, \"DefaultMarker\", { enumerable: true, get: function () { return DefaultMarker_1.DefaultMarker; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst StyleEditorControl_1 = require(\"./StyleEditorControl\");\nrequire('../css/Leaflet.StyleEditor.css');\nL.StyleEditor = StyleEditorImpl_1.StyleEditorImpl;\nL.styleEditor = function (map, options) { return new StyleEditorImpl_1.StyleEditorImpl(map, options); };\nL.Control.StyleEditor = StyleEditorControl_1.StyleEditorControl;\nL.control.styleEditor = function (options) { return new StyleEditorControl_1.StyleEditorControl(options); };\nexports.default = L;\n","module.exports = undefined;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleForm = void 0;\nconst StyleEditorClass_1 = require(\"./StyleEditorClass\");\nclass StyleForm extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor) {\n        super(styleEditor);\n        this.markerForm = this.createMarkerForm();\n        this.geometryForm = this.createGeometryForm();\n        this.addDOMEvents();\n    }\n    addDOMEvents() {\n        L.DomEvent.addListener(this.map, 'click', this.lostFocus, this);\n        L.DomEvent.addListener(this.styleEditor.editorUI, 'click', this.lostFocus, this);\n    }\n    clearForm() {\n        this.markerForm.hide();\n        this.geometryForm.hide();\n    }\n    createMarkerForm() {\n        let markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-marker', this.styleEditor.interiorEditorUI);\n        return new this.styleEditor.options.markerForm(this.styleEditor, markerDiv);\n    }\n    createGeometryForm() {\n        let markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-geometry', this.styleEditor.interiorEditorUI);\n        return new this.styleEditor.options.geometryForm(this.styleEditor, markerDiv);\n    }\n    showMarkerForm() {\n        this.clearForm();\n        this.markerForm.show();\n    }\n    showGeometryForm() {\n        this.clearForm();\n        this.geometryForm.show();\n    }\n    fireChangeEvent(element) {\n        this.util.fireChangeEvent(element);\n    }\n    lostFocus(e) {\n        let parent = e.target;\n        for (let i = 0; i < 10; i++) {\n            if (!parent) {\n                break;\n            }\n            if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n                return;\n            }\n            parent = parent.parentNode;\n        }\n        this.markerForm.lostFocus();\n        this.geometryForm.lostFocus();\n    }\n}\nexports.StyleForm = StyleForm;\n","\"use strict\";\n/**\n * Helper functions used throuhgout the project\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.UtilOptions = void 0;\nclass UtilOptions {\n}\nexports.UtilOptions = UtilOptions;\nclass Util {\n    constructor(styleEditor) {\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.options = styleEditor.options;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.map.fireEvent(this.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n            this._componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get current style of current element */\n    getStyle(currentElement, option) {\n        let style = currentElement.options[option];\n        if (style) {\n            return style;\n        }\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(currentElement, option, value) {\n        if (currentElement instanceof L.Marker) {\n            new this.styleEditor.options.markerType(this.styleEditor).setStyle(option, value);\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    _componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getMarkersForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = new this.styleEditor.options.markerType(this.styleEditor).markers;\n        let controlMarkers = this.styleEditor.options.markers;\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getMarkersForColor(color);\n        let defMarkers = [];\n        let defaultMarker = this.styleEditor.options.defaultMarkerIcon;\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = new this.styleEditor.options.markerType(this.styleEditor).defaultMarkerIcon;\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n}\nexports.Util = Util;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorControlOptions = void 0;\nexports.DefaultStyleEditorControlOptions = {\n    position: 'topleft',\n    strings: {\n        title: 'Style Editor',\n        cancel: 'cancel',\n        cancelTitle: 'cancel'\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorClassOptions = void 0;\nconst form_1 = require(\"../form\");\nconst marker_1 = require(\"../marker\");\nexports.DefaultStyleEditorClassOptions = {\n    position: 'topleft',\n    colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n    defaultColor: null,\n    markerType: marker_1.DefaultMarker,\n    markers: null,\n    defaultMarkerIcon: null,\n    defaultMarkerColor: null,\n    markerForm: form_1.MarkerForm,\n    geometryForm: form_1.MarkerForm,\n    ignoreLayerTypes: [],\n    forms: {},\n    events: [],\n    openOnLeafletDraw: true,\n    openOnLeafletEditable: true,\n    showTooltip: true,\n    strings: {\n        tooltip: 'Click on the element you want to style',\n        hide: 'Hide Style Editor',\n    },\n    useGrouping: true,\n    styleEditorEventPrefix: 'styleeditor:',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Form = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nclass Form extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, formOptionKey, parentUiElement, formElements) {\n        super(styleEditor);\n        this.initializedElements = {};\n        this.formOptionsKey = formOptionKey;\n        this.parentUiElement = parentUiElement;\n        this.formElements = formElements;\n        this.create();\n    }\n    /** create every FormElement in the parentUiElement */\n    create() {\n        for (let key in this.formElements) {\n            const formElement = this.getFormElementClass(key);\n            if (formElement !== undefined) {\n                this.initializedElements[key] = new formElement(this, this.parentUiElement);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show(currentElement) {\n        this.preShow();\n        this.showFormElements();\n        this.showForm();\n        this.style(currentElement);\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() {\n    }\n    /** make every FormElement visible */\n    showFormElements() {\n        for (let key in this.initializedElements) {\n            this.showFormElement(this.initializedElements[key]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style(currentElement) {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].style(currentElement);\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].lostFocus();\n        }\n    }\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement(formElement) {\n        // check wether element should be shown or not\n        if (this.showFormElementForStyleOption(formElement.styleOption)) {\n            formElement.show();\n        }\n        else {\n            formElement.hide();\n        }\n    }\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass(styleOption) {\n        let formElementKeys = Object.keys(this.formElements);\n        if (formElementKeys.indexOf(styleOption) >= 0) {\n            let FormElement = this.formElements[styleOption];\n            if (FormElement) {\n                // may be a dictionary\n                if (typeof FormElement === 'boolean') {\n                    return this.getFormElementStandardClass(styleOption);\n                }\n                if ('formElement' in FormElement && 'boolean' in FormElement) {\n                    FormElement = FormElement['formElement'];\n                }\n            }\n            // if nothing works return it\n            return this.getFormElementStandardClass(styleOption);\n        }\n    }\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     */\n    showFormElementForStyleOption(styleOption) {\n        /*\n        if (styleOption in this.formElements) {\n          let styleFormElement = this.initializedElements[styleOption]\n    \n          // maybe a function is given to declare when to show the FormElement\n          if (typeof styleFormElement === 'function') {\n            try {\n              return styleFormElement(this.util.getCurrentElement())\n            } catch (err) {\n              // the given function presumably is a constructor -> always show it\n              return true\n            }\n          }\n    \n          // maybe a boolean is given to indicate whether to show it\n          if (typeof styleFormElement === 'boolean') {\n            return styleFormElement\n          }\n    \n          // check for dictionary\n          if ('boolean' in styleFormElement) {\n            // in a dictionary boolean may be a function or boolean\n            if (typeof styleFormElement['boolean'] === 'function') {\n              return styleFormElement['boolean'](this.util.getCurrentElement())\n            }\n            return styleFormElement['boolean']\n          }\n          return true\n        }\n        TODO */\n        return false;\n    }\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass(styleOption) {\n        return this.formElements[styleOption];\n    }\n}\nexports.Form = Form;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormElement = exports.ColorElement = void 0;\nconst ColorElement_1 = __importDefault(require(\"./ColorElement\"));\nexports.ColorElement = ColorElement_1.default;\nconst FormElement_1 = require(\"./FormElement\");\nObject.defineProperty(exports, \"FormElement\", { enumerable: true, get: function () { return FormElement_1.FormElement; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FormElement_1 = require(\"./FormElement\");\nconst MarkerForm_1 = require(\"../form/MarkerForm\");\nconst title = \"color\";\nconst styleOption = \"color\";\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.FormElement {\n    constructor(parentForm, parentUiElement) {\n        super(styleOption, parentForm, parentUiElement, title);\n    }\n    createContent() {\n        this.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.uiElement);\n        this.getColorRamp().forEach(this.setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    getColorRamp() {\n        // if markers have own colorRamp use it\n        if (this.parentForm instanceof MarkerForm_1.MarkerForm) {\n            const mt = new this.styleEditor.options.markerType(this.styleEditor);\n            if (!!mt.colorRamp) {\n                return mt.colorRamp;\n            }\n        }\n        return this.styleEditor.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    setSelectCallback(color) {\n        let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        L.DomEvent.addListener(elem, 'click', this.selectColor, this);\n    }\n    /** set style for chosen color */\n    selectColor(event) {\n        event.stopPropagation();\n        this.setStyle(this.util.rgbToHex(event.target.style.backgroundColor));\n    }\n}\nexports.default = ColorElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Marker = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\nclass Marker extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, selectIconClass) {\n        super(styleEditor);\n        this.size = {\n            'small': [20, 50],\n            'medium': [30, 70],\n            'large': [35, 90]\n        };\n        /** set standard icon */\n        if (selectIconClass !== '' && !selectIconClass.startsWith('leaflet-styleeditor-select-image')) {\n            this.selectIconClass = 'leaflet-styleeditor-select-image-' + selectIconClass;\n        }\n    }\n    /** create new Marker and show it */\n    setNewMarker(markerOptions) {\n        let newIcon = this.createMarkerIcon(markerOptions);\n        this.styleEditor.getCurrentLayers().forEach((currentElement) => {\n            if (currentElement instanceof L.Marker) {\n                currentElement.setIcon(newIcon);\n                if (currentElement instanceof L.LayerGroup) {\n                    currentElement.eachLayer(function (layer) {\n                        if (layer instanceof L.Marker)\n                            L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected');\n                    });\n                }\n                else {\n                    L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n                }\n            }\n        });\n    }\n    /** set styling options */\n    setStyle(styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        this.setNewMarker(this.getNewMarkerOptions(styleOption, value));\n    }\n    /** create HTML used to */\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n    }\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions() {\n        let markerOptions = {};\n        const layers = this.styleEditor.getCurrentLayers();\n        const marker = layers.find((layer) => layer instanceof L.Marker);\n        if (marker) {\n            markerOptions = marker.options.icon.options;\n        }\n        if (Object.keys(markerOptions).length > 0) {\n            return markerOptions;\n        }\n        markerOptions.iconColor = this._getDefaultMarkerColor();\n        markerOptions.iconSize = this.size.small;\n        markerOptions.icon = this.util.getDefaultMarkerForColor(markerOptions.iconColor);\n        markerOptions = this._ensureMarkerIcon(markerOptions);\n        return markerOptions;\n    }\n    getNewMarkerOptions(key, value) {\n        let iconOptions = this.getIconOptions();\n        iconOptions[key] = value;\n        return iconOptions;\n    }\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    _ensureMarkerIcon(iconOptions) {\n        let markers = this.util.getMarkersForColor(iconOptions.iconColor);\n        if (markers.includes(iconOptions.icon)) {\n            return iconOptions;\n        }\n        iconOptions.icon = this.util.getDefaultMarkerForColor(iconOptions.iconColor);\n        return iconOptions;\n    }\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    _getDefaultMarkerColor() {\n        let markerTypeColorRamp = this.colorRamp;\n        let generalColorRamp = this.styleEditor.options.colorRamp;\n        let intersectedColorRamp = [];\n        if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n            intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n));\n            if (intersectedColorRamp.length === 0) {\n                intersectedColorRamp = markerTypeColorRamp;\n            }\n        }\n        else {\n            intersectedColorRamp = generalColorRamp;\n        }\n        let color = this.styleEditor.options.defaultMarkerColor;\n        if (color !== null && !intersectedColorRamp.includes(color)) {\n            color = null;\n        }\n        if (color === null) {\n            color = this.styleEditor.options.defaultColor;\n            if (color !== null && !intersectedColorRamp.includes(color)) {\n                color = null;\n            }\n            if (color === null) {\n                color = intersectedColorRamp[0];\n            }\n        }\n        return this.util.rgbToHex(color);\n    }\n    /** return size as keyword */\n    sizeToName(size) {\n        let keys = Object.keys(this.size);\n        if (typeof size === 'string') {\n            if (size === 's') {\n                size = 'small';\n            }\n            else if (size === 'm') {\n                size = 'medium';\n            }\n            else if (size === 'l') {\n                size = 'large';\n            }\n            for (let i = 0; i < keys.length; i++) {\n                if (this.size[keys[i]] === size) {\n                    return keys[i];\n                }\n            }\n        }\n        let values = Object.values(this.size);\n        for (let i = 0; i < values.length; i++) {\n            if (JSON.stringify(size) === JSON.stringify(values[i])) {\n                return keys[i];\n            }\n        }\n        return keys[0];\n    }\n    /** return size as [x,y] */\n    sizeToPixel(size) {\n        size = this.sizeToName(size);\n        return this.size[size];\n    }\n}\nexports.Marker = Marker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = void 0;\nconst _1 = require(\".\");\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nclass DefaultMarker extends _1.Marker {\n    constructor(styleEdtior) {\n        super(styleEdtior, \"defaultmarker\");\n        this.markers = [\n            'circle-stroked',\n            'circle',\n            'square-stroked',\n            'square',\n            'triangle-stroked', 'triangle',\n            'star-stroked',\n            'star',\n            'cross',\n            'marker-stroked',\n            'marker',\n            'religious-jewish',\n            'religious-christian',\n            'religious-muslim',\n            'cemetery',\n            'rocket',\n            'airport',\n            'heliport',\n            'rail',\n            'rail-metro',\n            'rail-light',\n            'bus',\n            'fuel',\n            'parking',\n            'parking-garage',\n            'airfield',\n            'roadblock',\n            'ferry',\n            'harbor',\n            'bicycle',\n            'park',\n            'park2',\n            'museum',\n            'lodging',\n            'monument',\n            'zoo',\n            'garden',\n            'campsite',\n            'theatre',\n            'art-gallery',\n            'pitch',\n            'soccer',\n            'america-football',\n            'tennis',\n            'basketball',\n            'baseball',\n            'golf',\n            'swimming',\n            'cricket',\n            'skiing',\n            'school',\n            'college',\n            'library',\n            'post',\n            'fire-station',\n            'town-hall',\n            'police',\n            'prison',\n            'embassy',\n            'beer',\n            'restaurant',\n            'cafe',\n            'shop',\n            'fast-food',\n            'bar',\n            'bank',\n            'grocery',\n            'cinema',\n            'pharmacy',\n            'hospital',\n            'danger',\n            'industrial',\n            'warehouse',\n            'commercial',\n            'building',\n            'place-of-worship',\n            'alcohol-shop',\n            'logging',\n            'oil-well',\n            'slaughterhouse',\n            'dam',\n            'water',\n            'wetland',\n            'disability',\n            'telephone',\n            'emergency-telephone',\n            'toilets',\n            'waste-basket',\n            'music',\n            'land-use',\n            'city',\n            'town',\n            'village',\n            'farm',\n            'bakery',\n            'dog-park',\n            'lighthouse',\n            'clothing-store',\n            'polling-place',\n            'playground',\n            'entrance',\n            'heart',\n            'london-underground',\n            'minefield',\n            'rail-underground',\n            'rail-above',\n            'camera',\n            'laundry',\n            'car',\n            'suitcase',\n            'hairdresser',\n            'chemist',\n            'mobilephone',\n            'scooter'\n        ];\n    }\n    createMarkerIcon(iconOptions) {\n        let iconSize = iconOptions.iconSize;\n        return new L.Icon({\n            iconUrl: this._getMarkerUrlForStyle(iconOptions),\n            iconSize: iconOptions.iconSize,\n            iconColor: iconOptions.iconColor,\n            icon: iconOptions.icon,\n            className: this.selectIconClass,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        let tmpOptions = {};\n        tmpOptions.iconSize = this.size.small;\n        tmpOptions.icon = icon;\n        tmpOptions.iconColor = iconOptions.iconColor;\n        parentUiElement.innerHTML = this.createMarkerIcon(tmpOptions).createIcon().outerHTML;\n    }\n    _getMarkerUrlForStyle(iconOptions) {\n        return this._getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon);\n    }\n    _getMarkerUrl(size, color, icon) {\n        size = this.sizeToName(size)[0];\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size;\n        if (icon) {\n            url += '-' + icon;\n        }\n        return url + '+' + color + '.png';\n    }\n}\nexports.DefaultMarker = DefaultMarker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = void 0;\nconst _1 = require(\".\");\nexports.DefaultStyleEditorOptions = Object.assign(Object.assign(Object.assign({}, _1.DefaultStyleEditorClassOptions), _1.DefaultStyleEditorControlOptions), { strings: {\n        title: _1.DefaultStyleEditorControlOptions.strings.title,\n        cancel: _1.DefaultStyleEditorControlOptions.strings.cancel,\n        cancelTitle: _1.DefaultStyleEditorControlOptions.strings.cancelTitle,\n        tooltip: _1.DefaultStyleEditorClassOptions.strings.tooltip,\n        hide: _1.DefaultStyleEditorClassOptions.strings.hide\n    } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorControl = void 0;\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst options_1 = require(\"./options\");\n/**\n * StyleEditorControl creates a { L.Control }\n * which enables the user to enable and disable Leaflet.StyleEditor\n */\nclass StyleEditorControl extends L.Control {\n    constructor(options, styleEditor, styleEditorOptions) {\n        super();\n        this.isEnabled = false;\n        if (styleEditorOptions === undefined) {\n            this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorControlOptions), options);\n            this.styleEditor = styleEditor;\n        }\n        else {\n            this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorControlOptions), styleEditorOptions);\n            this.styleEditorClassOptions = Object.assign(Object.assign({}, options_1.DefaultStyleEditorClassOptions), styleEditorOptions);\n        }\n    }\n    /**\n     * Create the Control element and its HTMLElements\n     * @param map the map where the control should be added to\n     */\n    onAdd(map) {\n        if (this.styleEditor === undefined) {\n            this.styleEditor = new StyleEditorImpl_1.StyleEditorImpl(map, this.styleEditorClassOptions);\n        }\n        // disable styleEditor if using control element\n        this.styleEditor.disable();\n        return this.createUI();\n    }\n    createUI() {\n        const controlUI = L.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar');\n        const controlDiv = L.DomUtil.create('a', 'leaflet-control-styleeditor-interior', controlUI);\n        controlDiv.title = this.options.strings.title;\n        const cancelUI = this.cancelUI = L.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlUI);\n        cancelUI.innerHTML = this.options.strings.cancel;\n        cancelUI.title = this.options.strings.cancelTitle;\n        L.DomEvent.disableScrollPropagation(controlUI);\n        L.DomEvent.disableScrollPropagation(cancelUI);\n        L.DomEvent.disableClickPropagation(controlUI);\n        L.DomEvent.disableClickPropagation(cancelUI);\n        // toggle UI visibility\n        L.DomEvent.on(controlUI, 'click', this.toggle, this);\n        return controlUI;\n    }\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    enable() {\n        this.isEnabled = true;\n        this.showCancelButton();\n        this.styleEditor.enable();\n    }\n    disable() {\n        if (this.isEnabled) {\n            this.isEnabled = false;\n            this.hideCancelButton();\n            this.styleEditor.disable();\n        }\n    }\n    showCancelButton() {\n        L.DomUtil.removeClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    hideCancelButton() {\n        L.DomUtil.addClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n}\nexports.StyleEditorControl = StyleEditorControl;\n"],"sourceRoot":""}