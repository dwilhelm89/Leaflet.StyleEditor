{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/./src/typescript/formElements/index.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorClass.ts","webpack://leafletstyleeditor/./src/typescript/options/index.ts","webpack://leafletstyleeditor/./src/typescript/form/index.ts","webpack://leafletstyleeditor/./src/typescript/formElements/FormElement.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorImpl.ts","webpack://leafletstyleeditor/./src/typescript/form/MarkerForm.ts","webpack://leafletstyleeditor/./src/typescript/marker/index.ts","webpack://leafletstyleeditor/./src/typescript/index.ts","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./src/typescript/StyleForm.ts","webpack://leafletstyleeditor/./src/typescript/Util.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorControlOptions.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorClassOptions.ts","webpack://leafletstyleeditor/./src/typescript/form/Form.ts","webpack://leafletstyleeditor/./src/typescript/formElements/ColorElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/DashElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/IconElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/OpacityElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/PopupContentElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/SizeElement.ts","webpack://leafletstyleeditor/./src/typescript/formElements/WeightElement.ts","webpack://leafletstyleeditor/./src/typescript/form/GeometryForm.ts","webpack://leafletstyleeditor/./src/typescript/marker/Marker.ts","webpack://leafletstyleeditor/./src/typescript/marker/DefaultMarker.ts","webpack://leafletstyleeditor/./src/typescript/options/StyleEditorOptions.ts","webpack://leafletstyleeditor/./src/typescript/StyleEditorControl.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WeightElement","SizeElement","PopupContentElement","OpacityElement","IconElement","FormElement","DashElement","ColorElement","ColorElement_1","DashElement_1","FormElement_1","IconElement_1","OpacityElement_1","PopupContentElement_1","SizeElement_1","WeightElement_1","StyleEditorClass","L","Class","styleEditor","super","this","map","util","DefaultStyleEditorOptions","DefaultStyleEditorClassOptions","DefaultStyleEditorControlOptions","StyleEditorControlOptions_1","StyleEditorClassOptions_1","StyleEditorOptions_1","MarkerForm","GeometryForm","Form","Form_1","MarkerForm_1","GeometryForm_1","StyleEditorClass_1","parentForm","parentUiElement","styleOption","uiElement","DomUtil","createTitle","createContent","innerHTML","title","charAt","toUpperCase","slice","style","showForm","showElement","hideElement","layers","getCurrentLayers","length","layer","Marker","options","markerType","setStyle","Path","newStyle","fireChangeEvent","StyleEditorImpl","StyleForm_1","Util_1","options_1","assign","Util","createUi","editorUI","getContainer","styleEditorHeader","interiorEditorUI","buttonNext","strings","hide","tooltipWrapper","tooltipUI","tooltip","DomEvent","disableScrollPropagation","disableClickPropagation","on","onNext","addEventListeners","styleForm","StyleForm","events","forEach","event","onEvent","hideEditor","showTooltip","stopPropagation","children","getPanes","markerPane","index","element","removeClass","eachLayer","addClickEvent","layerIsIgnored","useGrouping","LayerGroup","showEditor","removeClickEvent","off","undefined","ignoreLayerTypes","some","layerType","type","removeIndicators","fireEvent","currentElement","addClass","show","eventName","addClickEvents","removeClickEvents","hideTooltip","target","getLayers","filter","_1","formElements_1","arguments","formOptionKey","formElements","DefaultMarker","Marker_1","DefaultMarker_1","StyleEditorImpl_1","StyleEditorControl_1","StyleEditor","Control","StyleEditorControl","control","default","markerForm","createMarkerForm","geometryForm","createGeometryForm","clearForm","addDOMEvents","addListener","lostFocus","markerDiv","getCurrentMarker","showMarkerForm","showGeometryForm","e","parent","className","hasClass","parentNode","UtilOptions","styleEditorEventPrefix","rgb","noHash","defaultColor","indexOf","replace","rgbArray","substring","split","withoutHash","componentToHex","parseInt","option","color","hex","toString","rgbToHex","markers","controlMarkers","Array","isArray","keys","includes","getIconsForColor","defMarkers","defaultMarker","defaultMarkerIcon","push","find","fill","position","cancel","cancelTitle","form_1","marker_1","colorRamp","defaultMarkerColor","forms","openOnLeafletDraw","openOnLeafletEditable","initializedElements","formElement","getFormElementClass","hideFormElements","hideForm","preShow","showFormElement","showOrHideFormElement","showFormElementForStyleOption","getFormElementStandardClass","colorPickerDiv","getColorRamp","setSelectCallback","mt","elem","backgroundColor","selectColor","stroke","backgroundPosition","selectOptionWrapperClasses","selectOptionClasses","selectBox","selectBoxImage","createSelectInputImage","toggleSelectInput","iconOptions","getIconOptions","styleSelectInputImage","icon","iconColor","createColorSelect","hideSelectOptions","wrapper","image","createSelectHTML","selectOptions","selectOptionWrapper","selectOption","setAttribute","selectImage","nodeName","console","log","selectMarker","currentColorElement","getCurrentColorElement","getValue","getAttribute","label","slider","max","min","step","updateStyle","getStyle","innerText","Math","round","parseFloat","textArea","selectedElement","popupContent","inputText","getPopup","bindPopup","popup1","setContent","select","size","small","medium","large","weight","showFillOptions","canCurrentLayersBeFilled","entries","startsWith","markerName","markerOptions","newIcon","createMarkerIcon","setIcon","getElement","setNewMarker","getNewMarkerOptions","appendChild","getSelectHTML","classList","add","marker","getDefaultMarkerColor","iconSize","getDefaultMarkerForColor","ensureMarkerIcon","markerTypeColorRamp","generalColorRamp","intersectedColorRamp","values","JSON","stringify","sizeToName","styleEdtior","Icon","iconUrl","getMarkerUrlForStyle","iconAnchor","popupAnchor","tmpOptions","createIcon","getMarkerUrl","url","styleEditorOptions","isEnabled","styleEditorClassOptions","disable","createUI","controlUI","cancelUI","toggle","enable","showCancelButton","hideCancelButton"],"mappings":"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AAO,SAEO,MAATA,IACLA,EAAO,SAEX,IAAK,IAAI5S,EAAI,EAAGA,EAAIqN,EAAK9H,OAAQvF,IAC7B,GAAIqD,KAAKuP,KAAKvF,EAAKrN,MAAQ4S,EACvB,OAAOvF,EAAKrN,GAIxB,IAAIyU,EAAS/T,OAAO+T,OAAOpR,KAAKuP,MAChC,IAAK,IAAI5S,EAAI,EAAGA,EAAIyU,EAAOlP,OAAQvF,IAC/B,GAAI0U,KAAKC,UAAU/B,KAAU8B,KAAKC,UAAUF,EAAOzU,IAC/C,OAAOqN,EAAKrN,GAGpB,OAAOqN,EAAK,GAGhB,YAAYuF,GAER,OADAA,EAAOvP,KAAKuR,WAAWhC,GAChBvP,KAAKuP,KAAKA,IAGzB9S,EAAQ2F,OAASA,G,6BCxJjB/E,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQsK,mBAAgB,EACxB,MAAML,EAAK,EAAQ,GAKnB,MAAMK,UAAsBL,EAAGtE,OAC3B,YAAYoP,GACRzR,MAAMyR,EAAa,iBACnBxR,KAAK4J,QAAU,CACX,iBACA,SACA,iBACA,SACA,mBAAoB,WACpB,eACA,OACA,QACA,iBACA,SACA,mBACA,sBACA,mBACA,WACA,SACA,UACA,WACA,OACA,aACA,aACA,MACA,OACA,UACA,iBACA,WACA,YACA,QACA,SACA,UACA,OACA,QACA,SACA,UACA,WACA,MACA,SACA,WACA,UACA,cACA,QACA,SACA,mBACA,SACA,aACA,WACA,OACA,WACA,UACA,SACA,SACA,UACA,UACA,OACA,eACA,YACA,SACA,SACA,UACA,OACA,aACA,OACA,OACA,YACA,MACA,OACA,UACA,SACA,WACA,WACA,SACA,aACA,YACA,aACA,WACA,mBACA,eACA,UACA,WACA,iBACA,MACA,QACA,UACA,aACA,YACA,sBACA,UACA,eACA,QACA,WACA,OACA,OACA,UACA,OACA,SACA,WACA,aACA,iBACA,gBACA,aACA,WACA,QACA,qBACA,YACA,mBACA,aACA,SACA,UACA,MACA,WACA,cACA,UACA,cACA,WAGR,iBAAiBgD,GACb,IAAIkE,EAAWlE,EAAYkE,SAC3B,OAAO,IAAIlR,EAAE6R,KAAK,CACdC,QAAS1R,KAAK2R,qBAAqB/E,GACnCkE,SAAUlE,EAAYkE,SACtB9D,UAAWJ,EAAYI,UACvBD,KAAMH,EAAYG,KAClBxE,UAAWvI,KAAKgQ,WAChB4B,WAAY,CAACd,EAAS,GAAK,EAAGA,EAAS,GAAK,GAC5Ce,YAAa,CAAC,GAAIf,EAAS,GAAK,KAGxC,cAAclE,EAAaG,GACvB,MAAM+E,EAAa,GAInB,OAHAA,EAAWhB,SAAW9Q,KAAKuP,KAAKC,MAChCsC,EAAW/E,KAAOA,EAClB+E,EAAW9E,UAAYJ,EAAYI,UAC5BhN,KAAKmQ,iBAAiB2B,GAAYC,aAE7C,qBAAqBnF,GACjB,OAAO5M,KAAKgS,aAAapF,EAAYkE,SAAUlE,EAAYI,UAAWJ,EAAYG,MAEtF,aAAawC,EAAM/F,EAAOuD,GAQtB,IAAIkF,EAAM,+CAPV1C,EAAOvP,KAAKuR,WAAWhC,GAAM,IAW7B,OAHIxC,IACAkF,GAAO,IAAMlF,GAEVkF,EAAM,KATTzI,EADuB,IAAvBA,EAAMT,QAAQ,KACNS,EAAMR,QAAQ,IAAK,IAGnBhJ,KAAKE,KAAKyJ,SAASH,GAAO,IAMX,QAGnC/M,EAAQsK,cAAgBA,G,6BCnKxB1J,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ0D,+BAA4B,EACpC,MAAMuG,EAAK,EAAQ,GACnBjK,EAAQ0D,0BAA4B9C,OAAO0F,OAAO1F,OAAO0F,OAAO1F,OAAO0F,OAAO,GAAI2D,EAAGtG,gCAAiCsG,EAAGrG,kCAAmC,CAAEkD,QAAS,CAC/J/B,MAAOkF,EAAGrG,iCAAiCkD,QAAQ/B,MACnDkJ,OAAQhE,EAAGrG,iCAAiCkD,QAAQmH,OACpDC,YAAajE,EAAGrG,iCAAiCkD,QAAQoH,YACzDhH,QAAS+C,EAAGtG,+BAA+BmD,QAAQI,QACnDH,KAAMkD,EAAGtG,+BAA+BmD,QAAQC,S,6BCRxDnG,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ6K,wBAAqB,EAC7B,MAAMJ,EAAoB,EAAQ,GAC5BpE,EAAY,EAAQ,GAK1B,MAAMwE,UAA2B1H,EAAEyH,QAC/B,YAAYhF,EAASvC,EAAaoS,GAC9BnS,QACAC,KAAKmS,WAAY,OACU1M,IAAvByM,GACAlS,KAAKqC,QAAUhF,OAAO0F,OAAO1F,OAAO0F,OAAO,GAAID,EAAUzC,kCAAmCgC,GAC5FrC,KAAKF,YAAcA,IAGnBE,KAAKqC,QAAUhF,OAAO0F,OAAO1F,OAAO0F,OAAO,GAAID,EAAUzC,kCAAmC6R,GAC5FlS,KAAKoS,wBAA0B/U,OAAO0F,OAAO1F,OAAO0F,OAAO,GAAID,EAAU1C,gCAAiC8R,IAOlH,MAAMjS,GAMF,YALyBwF,IAArBzF,KAAKF,cACLE,KAAKF,YAAc,IAAIoH,EAAkBvE,gBAAgB1C,EAAKD,KAAKoS,0BAGvEpS,KAAKF,YAAYuS,UACVrS,KAAKsS,WAEhB,WACI,MAAMC,EAAY3S,EAAEwB,QAAQnD,OAAO,MAAO,2DACvB2B,EAAEwB,QAAQnD,OAAO,IAAK,uCAAwCsU,GACtE/Q,MAAQxB,KAAKqC,QAAQkB,QAAQ/B,MACxC,MAAMgR,EAAWxS,KAAKwS,SAAW5S,EAAEwB,QAAQnD,OAAO,MAAO,gEAAiEsU,GAS1H,OARAC,EAASjR,UAAYvB,KAAKqC,QAAQkB,QAAQmH,OAC1C8H,EAAShR,MAAQxB,KAAKqC,QAAQkB,QAAQoH,YACtC/K,EAAEgE,SAASC,yBAAyB0O,GACpC3S,EAAEgE,SAASC,yBAAyB2O,GACpC5S,EAAEgE,SAASE,wBAAwByO,GACnC3S,EAAEgE,SAASE,wBAAwB0O,GAEnC5S,EAAEgE,SAASG,GAAGwO,EAAW,QAASvS,KAAKyS,OAAQzS,MACxCuS,EAEX,SACQvS,KAAKmS,UACLnS,KAAKqS,UAGLrS,KAAK0S,SAGb,SACI1S,KAAKmS,WAAY,EACjBnS,KAAK2S,mBACL3S,KAAKF,YAAY4S,SAErB,UACQ1S,KAAKmS,YACLnS,KAAKmS,WAAY,EACjBnS,KAAK4S,mBACL5S,KAAKF,YAAYuS,WAGzB,mBACIzS,EAAEwB,QAAQ4D,YAAYhF,KAAKwS,SAAU,8BAEzC,mBACI5S,EAAEwB,QAAQ6E,SAASjG,KAAKwS,SAAU,+BAG1C/V,EAAQ6K,mBAAqBA,G","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightElement = exports.SizeElement = exports.PopupContentElement = exports.OpacityElement = exports.IconElement = exports.FormElement = exports.DashElement = exports.ColorElement = void 0;\nconst ColorElement_1 = require(\"./ColorElement\");\nObject.defineProperty(exports, \"ColorElement\", { enumerable: true, get: function () { return ColorElement_1.ColorElement; } });\nconst DashElement_1 = require(\"./DashElement\");\nObject.defineProperty(exports, \"DashElement\", { enumerable: true, get: function () { return DashElement_1.DashElement; } });\nconst FormElement_1 = require(\"./FormElement\");\nObject.defineProperty(exports, \"FormElement\", { enumerable: true, get: function () { return FormElement_1.FormElement; } });\nconst IconElement_1 = require(\"./IconElement\");\nObject.defineProperty(exports, \"IconElement\", { enumerable: true, get: function () { return IconElement_1.IconElement; } });\nconst OpacityElement_1 = require(\"./OpacityElement\");\nObject.defineProperty(exports, \"OpacityElement\", { enumerable: true, get: function () { return OpacityElement_1.OpacityElement; } });\nconst PopupContentElement_1 = require(\"./PopupContentElement\");\nObject.defineProperty(exports, \"PopupContentElement\", { enumerable: true, get: function () { return PopupContentElement_1.PopupContentElement; } });\nconst SizeElement_1 = require(\"./SizeElement\");\nObject.defineProperty(exports, \"SizeElement\", { enumerable: true, get: function () { return SizeElement_1.SizeElement; } });\nconst WeightElement_1 = require(\"./WeightElement\");\nObject.defineProperty(exports, \"WeightElement\", { enumerable: true, get: function () { return WeightElement_1.WeightElement; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorClass = void 0;\nclass StyleEditorClass extends L.Class {\n    constructor(styleEditor) {\n        super();\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.util = styleEditor.util;\n    }\n}\nexports.StyleEditorClass = StyleEditorClass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = exports.DefaultStyleEditorClassOptions = exports.DefaultStyleEditorControlOptions = void 0;\nconst StyleEditorControlOptions_1 = require(\"./StyleEditorControlOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorControlOptions\", { enumerable: true, get: function () { return StyleEditorControlOptions_1.DefaultStyleEditorControlOptions; } });\nconst StyleEditorClassOptions_1 = require(\"./StyleEditorClassOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorClassOptions\", { enumerable: true, get: function () { return StyleEditorClassOptions_1.DefaultStyleEditorClassOptions; } });\nconst StyleEditorOptions_1 = require(\"./StyleEditorOptions\");\nObject.defineProperty(exports, \"DefaultStyleEditorOptions\", { enumerable: true, get: function () { return StyleEditorOptions_1.DefaultStyleEditorOptions; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = exports.GeometryForm = exports.Form = void 0;\nconst Form_1 = require(\"./Form\");\nObject.defineProperty(exports, \"Form\", { enumerable: true, get: function () { return Form_1.Form; } });\nconst MarkerForm_1 = require(\"./MarkerForm\");\nObject.defineProperty(exports, \"MarkerForm\", { enumerable: true, get: function () { return MarkerForm_1.MarkerForm; } });\nconst GeometryForm_1 = require(\"./GeometryForm\");\nObject.defineProperty(exports, \"GeometryForm\", { enumerable: true, get: function () { return GeometryForm_1.GeometryForm; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormElement = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement extends StyleEditorClass_1.StyleEditorClass {\n    constructor(parentForm, parentUiElement, styleOption) {\n        super(parentForm.styleEditor);\n        this.styleOption = styleOption;\n        // if no title is given use styling option\n        this.parentForm = parentForm;\n        this.create(parentUiElement);\n    }\n    /** create uiElement and content */\n    create(parentUiElement) {\n        this.uiElement =\n            L.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle();\n        this.createContent();\n    }\n    /** create title */\n    createTitle() {\n        let title = L.DomUtil.create('label', 'leaflet-styleeditor-label', this.uiElement);\n        title.innerHTML = this.title || this.styleOption.charAt(0).toUpperCase() + this.styleOption.slice(1);\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show() {\n        this.style();\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.uiElement);\n    }\n    /** style the FormElement */\n    style() { }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(value) {\n        const layers = this.parentForm.styleEditor.getCurrentLayers();\n        // update layers\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof L.Marker) {\n                new this.styleEditor.options.markerType(this.styleEditor).setStyle(this.styleOption, value);\n            }\n            else if (layer instanceof L.Path) {\n                let newStyle = {};\n                newStyle[this.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.parentForm.style();\n    }\n}\nexports.FormElement = FormElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorImpl = void 0;\nconst StyleForm_1 = require(\"./StyleForm\");\nconst Util_1 = require(\"./Util\");\nconst options_1 = require(\"./options\");\n// TODO merge STYLEFORM AND STYLE EDITORIMPL? or seperate better? \nclass StyleEditorImpl extends L.Class {\n    constructor(map, options) {\n        super();\n        this.map = map;\n        this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorOptions), options);\n        this.util = new Util_1.Util(this);\n        this.createUi();\n    }\n    createUi() {\n        const editorUI = this.editorUI = L.DomUtil.create('div', 'leaflet-styleeditor', this.map.getContainer());\n        const styleEditorHeader = L.DomUtil.create('div', 'leaflet-styleeditor-header', editorUI);\n        this.interiorEditorUI = L.DomUtil.create('div', 'leaflet-styleeditor-interior', editorUI);\n        const buttonNext = L.DomUtil.create('button', 'leaflet-styleeditor-button styleeditor-hideBtn', styleEditorHeader);\n        buttonNext.title = this.options.strings.hide;\n        const tooltipWrapper = this.tooltipUI = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip-wrapper', this.map.getContainer());\n        const tooltip = L.DomUtil.create('div', 'leaflet-styleeditor-tooltip', tooltipWrapper);\n        tooltip.innerHTML = this.options.strings.tooltip;\n        // do not propagate scrolling events on the ui to the map\n        L.DomEvent.disableScrollPropagation(editorUI);\n        L.DomEvent.disableScrollPropagation(buttonNext);\n        // do not propagate click events on the ui to the map\n        L.DomEvent.disableClickPropagation(editorUI);\n        L.DomEvent.disableClickPropagation(buttonNext);\n        // select next layer to style\n        L.DomEvent.on(buttonNext, 'click', this.onNext, this);\n        this.addEventListeners(this.map);\n        this.styleForm = new StyleForm_1.StyleForm(this);\n    }\n    addEventListeners(map) {\n        this.options.events.forEach(event => map.on(event, this.onEvent));\n    }\n    onEvent(event) {\n        // TODO\n    }\n    onNext(event) {\n        this.hideEditor();\n        this.showTooltip();\n        event.stopPropagation();\n    }\n    removeIndicators() {\n        const children = this.map.getPanes().markerPane.children;\n        for (let index = 0; index < children.length; index++) {\n            const element = children[index];\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-marker-selected');\n        }\n    }\n    addClickEvents() {\n        // TODO add to newly added layers?!\n        this.map.eachLayer(this.addClickEvent, this);\n    }\n    addClickEvent(layer) {\n        if (this.layerIsIgnored(layer)) {\n            return;\n        }\n        if (this.options.useGrouping && layer instanceof L.LayerGroup) {\n            layer.on('click', this.showEditor, this);\n        }\n        else if (layer instanceof L.Marker || layer instanceof L.Path) {\n            layer.on('click', this.showEditor, this);\n        }\n    }\n    removeClickEvents() {\n        this.map.eachLayer(this.removeClickEvent, this);\n    }\n    removeClickEvent(layer) {\n        layer.off('click', this.showEditor, this);\n    }\n    layerIsIgnored(layer) {\n        if (layer === undefined) {\n            return false;\n        }\n        return this.options.ignoreLayerTypes.some(layerType => layer.styleEditor && layer.styleEditor.type.toUpperCase() === layerType.toUpperCase());\n    }\n    hideEditor() {\n        L.DomUtil.removeClass(this.editorUI, 'editor-enabled');\n        this.removeIndicators();\n        this.fireEvent('hidden');\n    }\n    // TODO what type is event?!\n    // TODO move to FORM?\n    showEditor(event) {\n        if (event) {\n            this.currentElement = event;\n        }\n        if (this.currentElement) {\n            L.DomUtil.addClass(this.editorUI, 'editor-enabled');\n        }\n        this.fireEvent('visible');\n        this.styleForm.show();\n    }\n    showTooltip() {\n        L.DomUtil.removeClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    hideTooltip() {\n        L.DomUtil.addClass(this.tooltipUI, 'leaflet-styleeditor-hidden');\n    }\n    fireEvent(eventName, layer) {\n    }\n    enable() {\n        this.addClickEvents();\n        this.showTooltip();\n        this.showEditor();\n    }\n    disable() {\n        this.removeClickEvents();\n        this.hideTooltip();\n        this.hideEditor();\n    }\n    // get current layers\n    getCurrentLayers() {\n        if (!this.currentElement) {\n            return [];\n        }\n        else if (this.options.useGrouping && this.currentElement.target instanceof L.LayerGroup) {\n            return this.currentElement.target.getLayers();\n        }\n        else {\n            return [this.currentElement.target];\n        }\n    }\n    getCurrentMarker() {\n        return this.getCurrentLayers().filter((layer) => layer instanceof L.Marker);\n    }\n}\nexports.StyleEditorImpl = StyleEditorImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkerForm = void 0;\nconst _1 = require(\".\");\nconst formElements_1 = require(\"../formElements\");\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends _1.Form {\n    constructor() {\n        super(...arguments);\n        this.formOptionKey = 'marker';\n        this.formElements = {\n            'icon': formElements_1.IconElement,\n            'color': formElements_1.ColorElement,\n            'size': formElements_1.SizeElement,\n            'popupContent': formElements_1.PopupContentElement\n        };\n    }\n}\nexports.MarkerForm = MarkerForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = exports.Marker = void 0;\nconst Marker_1 = require(\"./Marker\");\nObject.defineProperty(exports, \"Marker\", { enumerable: true, get: function () { return Marker_1.Marker; } });\nconst DefaultMarker_1 = require(\"./DefaultMarker\");\nObject.defineProperty(exports, \"DefaultMarker\", { enumerable: true, get: function () { return DefaultMarker_1.DefaultMarker; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst StyleEditorControl_1 = require(\"./StyleEditorControl\");\nrequire('../css/Leaflet.StyleEditor.css');\nL.StyleEditor = StyleEditorImpl_1.StyleEditorImpl;\nL.styleEditor = function (map, options) { return new StyleEditorImpl_1.StyleEditorImpl(map, options); };\nL.Control.StyleEditor = StyleEditorControl_1.StyleEditorControl;\nL.control.styleEditor = function (options) { return new StyleEditorControl_1.StyleEditorControl(options); };\nexports.default = L;\n","module.exports = undefined;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleForm = void 0;\nconst StyleEditorClass_1 = require(\"./StyleEditorClass\");\nclass StyleForm extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor) {\n        super(styleEditor);\n        this.markerForm = this.createMarkerForm();\n        this.geometryForm = this.createGeometryForm();\n        this.clearForm();\n        this.addDOMEvents();\n    }\n    addDOMEvents() {\n        L.DomEvent.addListener(this.map, 'click', this.lostFocus, this);\n        L.DomEvent.addListener(this.styleEditor.editorUI, 'click', this.lostFocus, this);\n    }\n    clearForm() {\n        this.markerForm.hide();\n        this.geometryForm.hide();\n    }\n    createMarkerForm() {\n        const markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-marker', this.styleEditor.interiorEditorUI);\n        const markerForm = new this.styleEditor.options.markerForm(this.styleEditor, markerDiv);\n        markerForm.create();\n        return markerForm;\n    }\n    createGeometryForm() {\n        const markerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-interior-geometry', this.styleEditor.interiorEditorUI);\n        const geometryForm = new this.styleEditor.options.geometryForm(this.styleEditor, markerDiv);\n        geometryForm.create();\n        return geometryForm;\n    }\n    show() {\n        if (this.styleEditor.getCurrentMarker().length > 0) {\n            this.showMarkerForm();\n        }\n        else {\n            this.showGeometryForm();\n        }\n    }\n    showMarkerForm() {\n        this.clearForm();\n        this.markerForm.show();\n    }\n    showGeometryForm() {\n        this.clearForm();\n        this.geometryForm.show();\n    }\n    fireChangeEvent(element) {\n        this.util.fireChangeEvent(element);\n    }\n    lostFocus(e) {\n        let parent = e.target;\n        for (let i = 0; i < 10; i++) {\n            if (!parent) {\n                break;\n            }\n            if (!!parent.className && L.DomUtil.hasClass(parent, 'leaflet-styleeditor-interior')) {\n                return;\n            }\n            parent = parent.parentNode;\n        }\n        this.markerForm.lostFocus();\n        this.geometryForm.lostFocus();\n    }\n}\nexports.StyleForm = StyleForm;\n","\"use strict\";\n/**\n * Helper functions used throuhgout the project\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.UtilOptions = void 0;\nclass UtilOptions {\n}\nexports.UtilOptions = UtilOptions;\nclass Util {\n    constructor(styleEditor) {\n        this.styleEditor = styleEditor;\n        this.map = styleEditor.map;\n        this.options = styleEditor.options;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.map.fireEvent(this.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            L.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this.componentToHex(parseInt(rgbArray[0], 10)) + this.componentToHex(parseInt(rgbArray[1], 10)) +\n            this.componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get current style of current element */\n    getStyle(option) {\n        const layers = this.styleEditor.getCurrentLayers();\n        if (layers.length > 0) {\n            let style = layers[0].options[option];\n            if (style) {\n                return style;\n            }\n        }\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(currentElement, option, value) {\n        if (currentElement instanceof L.Marker) {\n            new this.styleEditor.options.markerType(this.styleEditor).setStyle(option, value);\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            L.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getIconsForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = new this.styleEditor.options.markerType(this.styleEditor).markers;\n        let controlMarkers = this.styleEditor.options.markers;\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getIconsForColor(color);\n        let defMarkers = [];\n        let defaultMarker = this.styleEditor.options.defaultMarkerIcon;\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = new this.styleEditor.options.markerType(this.styleEditor).defaultMarkerIcon;\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n    canCurrentLayersBeFilled() {\n        return this.styleEditor.getCurrentLayers().find((layer) => layer.options.fill) != undefined;\n    }\n}\nexports.Util = Util;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorControlOptions = void 0;\nexports.DefaultStyleEditorControlOptions = {\n    position: 'topleft',\n    strings: {\n        title: 'Style Editor',\n        cancel: 'cancel',\n        cancelTitle: 'cancel'\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorClassOptions = void 0;\nconst form_1 = require(\"../form\");\nconst marker_1 = require(\"../marker\");\nexports.DefaultStyleEditorClassOptions = {\n    position: 'topleft',\n    colorRamp: ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#16a085', '#27ae60', '#2980b9', '#8e44ad',\n        '#2c3e50', '#f1c40f', '#e67e22', '#e74c3c', '#ecf0f1', '#95a5a6', '#f39c12', '#d35400', '#c0392b',\n        '#bdc3c7', '#7f8c8d'],\n    defaultColor: null,\n    markerType: marker_1.DefaultMarker,\n    markers: null,\n    defaultMarkerIcon: null,\n    defaultMarkerColor: null,\n    markerForm: form_1.MarkerForm,\n    geometryForm: form_1.GeometryForm,\n    ignoreLayerTypes: [],\n    forms: {},\n    events: [],\n    openOnLeafletDraw: true,\n    openOnLeafletEditable: true,\n    showTooltip: true,\n    strings: {\n        tooltip: 'Click on the element you want to style',\n        hide: 'Hide Style Editor',\n    },\n    useGrouping: false,\n    styleEditorEventPrefix: 'styleeditor:',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Form = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nclass Form extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, parentUiElement) {\n        super(styleEditor);\n        this.initializedElements = {};\n        this.parentUiElement = parentUiElement;\n    }\n    /** create every FormElement in the parentUiElement */\n    create() {\n        for (let key in this.formElements) {\n            const formElement = this.getFormElementClass(key);\n            if (formElement !== undefined) {\n                this.initializedElements[key] = new formElement(this, this.parentUiElement, key);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show() {\n        this.preShow();\n        this.showFormElement();\n        this.showForm();\n        this.style();\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() { }\n    /** make every FormElement that should be visible visible */\n    showFormElement() {\n        for (let key in this.initializedElements) {\n            this.showOrHideFormElement(this.initializedElements[key]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].style();\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let key in this.initializedElements) {\n            this.initializedElements[key].lostFocus();\n        }\n    }\n    /**\n     * show or hide a formElement depending on style option\n     */\n    showOrHideFormElement(formElement) {\n        // check wether element should be shown or not\n        if (this.showFormElementForStyleOption(formElement.styleOption)) {\n            formElement.show();\n        }\n        else {\n            formElement.hide();\n        }\n    }\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass(styleOption) {\n        let formElementKeys = Object.keys(this.formElements);\n        if (formElementKeys.indexOf(styleOption) >= 0) {\n            let FormElement = this.formElements[styleOption];\n            if (FormElement) {\n                // may be a dictionary\n                if (typeof FormElement === 'boolean') {\n                    return this.getFormElementStandardClass(styleOption);\n                }\n                if ('formElement' in FormElement && 'boolean' in FormElement) {\n                    FormElement = FormElement['formElement'];\n                }\n            }\n            // if nothing works return it\n            return this.getFormElementStandardClass(styleOption);\n        }\n    }\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     * @returns Boolean indicating whether it should be shown or not\n     */\n    showFormElementForStyleOption(styleOption) {\n        /*\n        if (styleOption in this.formElements) {\n          let styleFormElement = this.initializedElements[styleOption]\n    \n          // maybe a function is given to declare when to show the FormElement\n          if (typeof styleFormElement === 'function') {\n            try {\n              return styleFormElement(this.util.getCurrentElement())\n            } catch (err) {\n              // the given function presumably is a constructor -> always show it\n              return true\n            }\n          }\n    \n          // maybe a boolean is given to indicate whether to show it\n          if (typeof styleFormElement === 'boolean') {\n            return styleFormElement\n          }\n    \n          // check for dictionary\n          if ('boolean' in styleFormElement) {\n            // in a dictionary boolean may be a function or boolean\n            if (typeof styleFormElement['boolean'] === 'function') {\n              return styleFormElement['boolean'](this.util.getCurrentElement())\n            }\n            return styleFormElement['boolean']\n          }\n          return true\n        }\n        TODO */\n        return true;\n    }\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass(styleOption) {\n        return this.formElements[styleOption];\n    }\n}\nexports.Form = Form;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorElement = void 0;\nconst FormElement_1 = require(\"./FormElement\");\nconst MarkerForm_1 = require(\"../form/MarkerForm\");\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.title = \"color\";\n    }\n    createContent() {\n        this.colorPickerDiv = L.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.uiElement);\n        this.getColorRamp().forEach(this.setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    getColorRamp() {\n        // if markers have own colorRamp use it\n        if (this.parentForm instanceof MarkerForm_1.MarkerForm) {\n            const mt = new this.styleEditor.options.markerType(this.styleEditor);\n            if (!!mt.colorRamp) {\n                return mt.colorRamp;\n            }\n        }\n        return this.styleEditor.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    setSelectCallback(color) {\n        let elem = L.DomUtil.create('div', 'leaflet-styleeditor-color', this.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        L.DomEvent.addListener(elem, 'click', this.selectColor, this);\n    }\n    /** set style for chosen color */\n    selectColor(event) {\n        event.stopPropagation();\n        this.setStyle(this.util.rgbToHex(event.target.style.backgroundColor));\n    }\n}\nexports.ColorElement = ColorElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DashElement = void 0;\nconst FormElement_1 = require(\"./FormElement\");\n/**\n * FormElement used for styling the dash attribute\n */\nclass DashElement extends FormElement_1.FormElement {\n    /** create the three standard dash options */\n    createContent() {\n        let stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -75px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('1');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -95px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('10, 10');\n        }, this);\n        stroke = L.DomUtil.create('div', 'leaflet-styleeditor-stroke', this.uiElement);\n        stroke.style.backgroundPosition = '0px -115px';\n        L.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('15, 10, 1, 10');\n        }, this);\n    }\n}\nexports.DashElement = DashElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IconElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for styling the icon\n */\nclass IconElement extends _1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.styleOption = 'icon';\n        // private classed used in the code\n        this.selectOptionWrapperClasses = 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden';\n        this.selectOptionClasses = 'leaflet-styleeditor-select-option';\n    }\n    /** create the icon selectBoxes */\n    createContent() {\n        let selectBox = L.DomUtil.create('div', 'leaflet-styleeditor-select', this.uiElement);\n        this.selectBoxImage = this.createSelectInputImage(selectBox);\n        L.DomEvent.addListener(selectBox, 'click', this.toggleSelectInput, this);\n    }\n    /** show the correct icon in the correct color if the icon or color changed */\n    style() {\n        let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).getIconOptions();\n        this.styleSelectInputImage(this.selectBoxImage, iconOptions.icon, iconOptions.iconColor);\n        this.createColorSelect(iconOptions.iconColor);\n        this.hideSelectOptions();\n    }\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus() {\n        this.hideSelectOptions();\n    }\n    /** create image container that hides/shows the iconSelectBox */\n    createSelectInputImage(parentUiElement) {\n        let wrapper = L.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement);\n        return L.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper);\n    }\n    /** create appropriate image for color and icon */\n    styleSelectInputImage(image, icon, color) {\n        let iconOptions = new this.styleEditor.options.markerType(this.styleEditor).getIconOptions();\n        if (color) {\n            iconOptions.iconColor = color;\n        }\n        new this.styleEditor.options.markerType(this.styleEditor).createSelectHTML(image, iconOptions, icon);\n    }\n    /** create the selectBox with the icons in the correct color */\n    createColorSelect(color) {\n        if (!this.selectOptions) {\n            this.selectOptions = {};\n        }\n        if (color in this.selectOptions) {\n            return;\n        }\n        let selectOptionWrapper = L.DomUtil.create('ul', this.selectOptionWrapperClasses, this.uiElement);\n        this.util.getIconsForColor(color).forEach(function (icon) {\n            let selectOption = L.DomUtil.create('li', this.selectOptionClasses, selectOptionWrapper);\n            selectOption.setAttribute('value', icon);\n            let selectImage = this.createSelectInputImage(selectOption);\n            this.styleSelectInputImage(selectImage, icon, color);\n        }, this);\n        this.selectOptions[color] = selectOptionWrapper;\n        L.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n            e.stopPropagation();\n            let target = e.target;\n            if (target.nodeName === 'UL') {\n                return;\n            }\n            console.log(target.className);\n            while (target && target.className !== 'leaflet-styleeditor-select-option') {\n                target = target.parentNode;\n            }\n            this.selectMarker({\n                'target': target\n            }, this);\n        }, this);\n    }\n    /** show/hide iconSelectBox */\n    toggleSelectInput() {\n        let currentColorElement = this.getCurrentColorElement(this.util.rgbToHex(new this.styleEditor.options.markerType(this.styleEditor).getIconOptions().iconColor));\n        let show = false;\n        if (currentColorElement) {\n            show = L.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden');\n        }\n        this.hideSelectOptions();\n        if (show) {\n            this.util.showElement(currentColorElement);\n        }\n    }\n    /** called when user selects a marker */\n    selectMarker(e) {\n        let value = this.getValue(e.target);\n        // update style\n        this.selectBoxImage.setAttribute('value', value);\n        this.setStyle(value);\n        this.hideSelectOptions();\n    }\n    /** helper function to return attribute value of target */\n    getValue(target) {\n        return target.getAttribute('value');\n    }\n    /** return correct selectBox depending on which color is currently chosen */\n    getCurrentColorElement(color) {\n        if (!this.selectOptions[color]) {\n            this.createColorSelect(color);\n        }\n        return this.selectOptions[color];\n    }\n    /** hide open SelectOption */\n    hideSelectOptions() {\n        for (let selectOption in this.selectOptions) {\n            this.util.hideElement(this.selectOptions[selectOption]);\n        }\n    }\n}\nexports.IconElement = IconElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpacityElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used to style opacity\n */\nclass OpacityElement extends _1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.uiElement);\n        this.slider = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.uiElement);\n        this.slider.type = 'range';\n        this.slider.max = '1';\n        this.slider.min = '0';\n        this.slider.step = '0.01';\n        this.slider.value = '0.5';\n        // add event listeners\n        L.DomEvent.addListener(this.slider, 'change', this.updateStyle, this);\n        L.DomEvent.addListener(this.slider, 'input', this.updateStyle, this);\n        L.DomEvent.addListener(this.slider, 'keyup', this.updateStyle, this);\n        L.DomEvent.addListener(this.slider, 'mouseup', this.updateStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.slider.value = this.util.getStyle(this.styleOption);\n        this.label.innerText = Math.round(100 * parseFloat(this.slider.value)).toString() + '%';\n    }\n    /** communicate opacity value */\n    updateStyle() {\n        this.setStyle(this.slider.value);\n    }\n}\nexports.OpacityElement = OpacityElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PopupContentElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nclass PopupContentElement extends _1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.title = 'Description';\n    }\n    createContent() {\n        this.textArea = L.DomUtil.create('textarea', 'leaflet-styleeditor-input', this.uiElement);\n        L.DomEvent.addListener(this.textArea, 'change', this.updateStyle, this);\n    }\n    /** set correct value */\n    style() {\n        let selectedElement = this.styleEditor.getCurrentMarker()[0];\n        if (selectedElement && selectedElement.options) {\n            this.textArea.value = selectedElement.options.popupContent || '';\n        }\n    }\n    /** communicate popupContent value */\n    updateStyle() {\n        let layers = this.styleEditor.getCurrentLayers();\n        let inputText = this.textArea.value;\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer && layer.getPopup && layer.bindPopup) {\n                let popup1 = layer.getPopup();\n                if (popup1) {\n                    popup1.setContent(inputText);\n                }\n                else {\n                    layer.bindPopup(inputText);\n                }\n                /* TODO ?! tmp store the text content for init next time\n                layer.options = layer.options || {}\n                layer.options.popupContent = inputText */\n            }\n        }\n        this.setStyle(inputText);\n    }\n}\nexports.PopupContentElement = PopupContentElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SizeElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement to set style of an icon\n */\nclass SizeElement extends _1.FormElement {\n    constructor() {\n        super(...arguments);\n        this.title = 'size';\n    }\n    /** create the 3 standard icon sizes */\n    createContent() {\n        // TODO \n        const markerType = new this.styleEditor.options.markerType(this.styleEditor);\n        let select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(markerType.size.small);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(markerType.size.medium);\n        }, this);\n        select = L.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', this.uiElement);\n        L.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(markerType.size.large);\n        }, this);\n    }\n}\nexports.SizeElement = SizeElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightElement = void 0;\nconst _1 = require(\".\");\n/**\n * FormElement used to style weight\n */\nclass WeightElement extends _1.FormElement {\n    /** create number input box */\n    createContent() {\n        this.label = L.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.uiElement);\n        this.weight = L.DomUtil.create('input', 'leaflet-styleeditor-input', this.uiElement);\n        this.weight.type = 'range';\n        this.weight.min = '0';\n        this.weight.max = '20';\n        this.weight.step = '1';\n        this.weight.value = '4';\n        // add event listeners\n        L.DomEvent.addListener(this.weight, 'change', this.updateStyle, this);\n        L.DomEvent.addListener(this.weight, 'input', this.updateStyle, this);\n        L.DomEvent.addListener(this.weight, 'keyup', this.updateStyle, this);\n        L.DomEvent.addListener(this.weight, 'mouseup', this.updateStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.weight.value = this.util.getStyle(this.styleOption);\n        this.label.innerText = this.weight.value;\n    }\n    /** communicate weight value */\n    updateStyle() {\n        this.setStyle(this.weight.value);\n    }\n}\nexports.WeightElement = WeightElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeometryForm = void 0;\nconst _1 = require(\".\");\nconst formElements_1 = require(\"../formElements\");\n/** Form used to enable modification of a Geometry */\nclass GeometryForm extends _1.Form {\n    constructor() {\n        super(...arguments);\n        this.formOptionKey = 'geometry';\n        this.formElements = {\n            'color': formElements_1.ColorElement,\n            'opacity': formElements_1.OpacityElement,\n            'weight': formElements_1.WeightElement,\n            'dashArray': formElements_1.DashElement,\n            'fillColor': formElements_1.ColorElement,\n            'fillOpacity': formElements_1.OpacityElement,\n            'popupContent': formElements_1.PopupContentElement\n        };\n    }\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElement() {\n        super.showFormElement();\n        const showFillOptions = this.util.canCurrentLayersBeFilled();\n        Object.entries(this.initializedElements).forEach(([key, formElement]) => {\n            if (!showFillOptions && key.startsWith('fill')) {\n                formElement.hide();\n            }\n            else {\n                this.showOrHideFormElement(formElement);\n            }\n        });\n    }\n}\nexports.GeometryForm = GeometryForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Marker = void 0;\nconst StyleEditorClass_1 = require(\"../StyleEditorClass\");\nclass Marker extends StyleEditorClass_1.StyleEditorClass {\n    constructor(styleEditor, markerName) {\n        super(styleEditor);\n        this.size = {\n            'small': [20, 50],\n            'medium': [30, 70],\n            'large': [35, 90]\n        };\n        this.markerName = markerName;\n    }\n    getMarkerCssClass() {\n        if (this.markerName !== '' && !this.markerName.startsWith('leaflet-styleeditor-marker-')) {\n            return 'leaflet-styleeditor-marker-' + this.markerName;\n        }\n        return this.markerName;\n    }\n    /** create new Marker and show it */\n    setNewMarker(markerOptions) {\n        let newIcon = this.createMarkerIcon(markerOptions);\n        this.styleEditor.getCurrentLayers().forEach((currentElement) => {\n            if (currentElement instanceof L.Marker) {\n                currentElement.setIcon(newIcon);\n                if (currentElement instanceof L.LayerGroup) {\n                    currentElement.eachLayer(function (layer) {\n                        if (layer instanceof L.Marker)\n                            L.DomUtil.addClass(layer.getElement(), 'leaflet-styleeditor-marker-selected');\n                    });\n                }\n                else {\n                    L.DomUtil.addClass(currentElement.getElement(), 'leaflet-styleeditor-marker-selected');\n                }\n            }\n        });\n    }\n    /** set styling options */\n    setStyle(styleOption, value) {\n        if (styleOption !== 'icon') {\n            styleOption = 'icon' + styleOption.charAt(0).toUpperCase() + styleOption.slice(1);\n        }\n        this.setNewMarker(this.getNewMarkerOptions(styleOption, value));\n    }\n    createSelectHTML(parentUiElement, iconOptions, icon) {\n        parentUiElement.appendChild(this.getSelectHTML(iconOptions, icon));\n        parentUiElement.classList.add('leaflet-styleeditor-select-' + this.markerName);\n    }\n    /** get the current iconOptions\n     *  if not set set them\n     */\n    getIconOptions() {\n        let markerOptions = {};\n        const layers = this.styleEditor.getCurrentLayers();\n        const marker = layers.find((layer) => layer instanceof L.Marker);\n        if (marker) {\n            markerOptions = marker.options.icon.options;\n        }\n        if (Object.keys(markerOptions).length > 0) {\n            return markerOptions;\n        }\n        markerOptions.iconColor = this.getDefaultMarkerColor();\n        markerOptions.iconSize = this.size.small;\n        markerOptions.icon = this.util.getDefaultMarkerForColor(markerOptions.iconColor);\n        markerOptions = this.ensureMarkerIcon(markerOptions);\n        return markerOptions;\n    }\n    getNewMarkerOptions(key, value) {\n        let iconOptions = this.getIconOptions();\n        iconOptions[key] = value;\n        return iconOptions;\n    }\n    /** check that the icon set in the iconOptions exists\n     *  else set default icon\n     */\n    ensureMarkerIcon(iconOptions) {\n        let markers = this.util.getIconsForColor(iconOptions.iconColor);\n        if (markers.includes(iconOptions.icon)) {\n            return iconOptions;\n        }\n        iconOptions.icon = this.util.getDefaultMarkerForColor(iconOptions.iconColor);\n        return iconOptions;\n    }\n    /** return default marker color\n     *\n     * will return the first of the following which is set and supported by the markers\n     * 1. styleEditorOptions.defaultMarkerColor\n     * 2. styleEditorOptions.defaultColor\n     * 3. first color of the marker's colorRamp which is in the styleeditor.colorRamp\n     * 4. first color of the marker's colorRamp\n     * */\n    getDefaultMarkerColor() {\n        let markerTypeColorRamp = this.colorRamp;\n        let generalColorRamp = this.styleEditor.options.colorRamp;\n        let intersectedColorRamp = [];\n        if (typeof markerTypeColorRamp !== 'undefined' && markerTypeColorRamp !== null) {\n            intersectedColorRamp = markerTypeColorRamp.filter((n) => generalColorRamp.includes(n));\n            if (intersectedColorRamp.length === 0) {\n                intersectedColorRamp = markerTypeColorRamp;\n            }\n        }\n        else {\n            intersectedColorRamp = generalColorRamp;\n        }\n        let color = this.styleEditor.options.defaultMarkerColor;\n        if (color !== null && !intersectedColorRamp.includes(color)) {\n            color = null;\n        }\n        if (color === null) {\n            color = this.styleEditor.options.defaultColor;\n            if (color !== null && !intersectedColorRamp.includes(color)) {\n                color = null;\n            }\n            if (color === null) {\n                color = intersectedColorRamp[0];\n            }\n        }\n        return this.util.rgbToHex(color);\n    }\n    /** return size as keyword */\n    sizeToName(size) {\n        let keys = Object.keys(this.size);\n        if (typeof size === 'string') {\n            if (size === 's') {\n                size = 'small';\n            }\n            else if (size === 'm') {\n                size = 'medium';\n            }\n            else if (size === 'l') {\n                size = 'large';\n            }\n            for (let i = 0; i < keys.length; i++) {\n                if (this.size[keys[i]] === size) {\n                    return keys[i];\n                }\n            }\n        }\n        let values = Object.values(this.size);\n        for (let i = 0; i < values.length; i++) {\n            if (JSON.stringify(size) === JSON.stringify(values[i])) {\n                return keys[i];\n            }\n        }\n        return keys[0];\n    }\n    /** return size as [x,y] */\n    sizeToPixel(size) {\n        size = this.sizeToName(size);\n        return this.size[size];\n    }\n}\nexports.Marker = Marker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMarker = void 0;\nconst _1 = require(\".\");\n/**\n * The \"old\" marker style used by L.StyleEditor\n * used the mapbox API v3\n */\nclass DefaultMarker extends _1.Marker {\n    constructor(styleEdtior) {\n        super(styleEdtior, \"defaultmarker\");\n        this.markers = [\n            'circle-stroked',\n            'circle',\n            'square-stroked',\n            'square',\n            'triangle-stroked', 'triangle',\n            'star-stroked',\n            'star',\n            'cross',\n            'marker-stroked',\n            'marker',\n            'religious-jewish',\n            'religious-christian',\n            'religious-muslim',\n            'cemetery',\n            'rocket',\n            'airport',\n            'heliport',\n            'rail',\n            'rail-metro',\n            'rail-light',\n            'bus',\n            'fuel',\n            'parking',\n            'parking-garage',\n            'airfield',\n            'roadblock',\n            'ferry',\n            'harbor',\n            'bicycle',\n            'park',\n            'park2',\n            'museum',\n            'lodging',\n            'monument',\n            'zoo',\n            'garden',\n            'campsite',\n            'theatre',\n            'art-gallery',\n            'pitch',\n            'soccer',\n            'america-football',\n            'tennis',\n            'basketball',\n            'baseball',\n            'golf',\n            'swimming',\n            'cricket',\n            'skiing',\n            'school',\n            'college',\n            'library',\n            'post',\n            'fire-station',\n            'town-hall',\n            'police',\n            'prison',\n            'embassy',\n            'beer',\n            'restaurant',\n            'cafe',\n            'shop',\n            'fast-food',\n            'bar',\n            'bank',\n            'grocery',\n            'cinema',\n            'pharmacy',\n            'hospital',\n            'danger',\n            'industrial',\n            'warehouse',\n            'commercial',\n            'building',\n            'place-of-worship',\n            'alcohol-shop',\n            'logging',\n            'oil-well',\n            'slaughterhouse',\n            'dam',\n            'water',\n            'wetland',\n            'disability',\n            'telephone',\n            'emergency-telephone',\n            'toilets',\n            'waste-basket',\n            'music',\n            'land-use',\n            'city',\n            'town',\n            'village',\n            'farm',\n            'bakery',\n            'dog-park',\n            'lighthouse',\n            'clothing-store',\n            'polling-place',\n            'playground',\n            'entrance',\n            'heart',\n            'london-underground',\n            'minefield',\n            'rail-underground',\n            'rail-above',\n            'camera',\n            'laundry',\n            'car',\n            'suitcase',\n            'hairdresser',\n            'chemist',\n            'mobilephone',\n            'scooter'\n        ];\n    }\n    createMarkerIcon(iconOptions) {\n        let iconSize = iconOptions.iconSize;\n        return new L.Icon({\n            iconUrl: this.getMarkerUrlForStyle(iconOptions),\n            iconSize: iconOptions.iconSize,\n            iconColor: iconOptions.iconColor,\n            icon: iconOptions.icon,\n            className: this.markerName,\n            iconAnchor: [iconSize[0] / 2, iconSize[1] / 2],\n            popupAnchor: [0, -iconSize[1] / 2]\n        });\n    }\n    getSelectHTML(iconOptions, icon) {\n        const tmpOptions = {};\n        tmpOptions.iconSize = this.size.small;\n        tmpOptions.icon = icon;\n        tmpOptions.iconColor = iconOptions.iconColor;\n        return this.createMarkerIcon(tmpOptions).createIcon();\n    }\n    getMarkerUrlForStyle(iconOptions) {\n        return this.getMarkerUrl(iconOptions.iconSize, iconOptions.iconColor, iconOptions.icon);\n    }\n    getMarkerUrl(size, color, icon) {\n        size = this.sizeToName(size)[0];\n        if (color.indexOf('#') === 0) {\n            color = color.replace('#', '');\n        }\n        else {\n            color = this.util.rgbToHex(color, true);\n        }\n        let url = 'https://api.tiles.mapbox.com/v3/marker/pin-' + size;\n        if (icon) {\n            url += '-' + icon;\n        }\n        return url + '+' + color + '.png';\n    }\n}\nexports.DefaultMarker = DefaultMarker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultStyleEditorOptions = void 0;\nconst _1 = require(\".\");\nexports.DefaultStyleEditorOptions = Object.assign(Object.assign(Object.assign({}, _1.DefaultStyleEditorClassOptions), _1.DefaultStyleEditorControlOptions), { strings: {\n        title: _1.DefaultStyleEditorControlOptions.strings.title,\n        cancel: _1.DefaultStyleEditorControlOptions.strings.cancel,\n        cancelTitle: _1.DefaultStyleEditorControlOptions.strings.cancelTitle,\n        tooltip: _1.DefaultStyleEditorClassOptions.strings.tooltip,\n        hide: _1.DefaultStyleEditorClassOptions.strings.hide\n    } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StyleEditorControl = void 0;\nconst StyleEditorImpl_1 = require(\"./StyleEditorImpl\");\nconst options_1 = require(\"./options\");\n/**\n * StyleEditorControl creates a { L.Control }\n * which enables the user to enable and disable Leaflet.StyleEditor\n */\nclass StyleEditorControl extends L.Control {\n    constructor(options, styleEditor, styleEditorOptions) {\n        super();\n        this.isEnabled = false;\n        if (styleEditorOptions === undefined) {\n            this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorControlOptions), options);\n            this.styleEditor = styleEditor;\n        }\n        else {\n            this.options = Object.assign(Object.assign({}, options_1.DefaultStyleEditorControlOptions), styleEditorOptions);\n            this.styleEditorClassOptions = Object.assign(Object.assign({}, options_1.DefaultStyleEditorClassOptions), styleEditorOptions);\n        }\n    }\n    /**\n     * Create the Control element and its HTMLElements\n     * @param map the map where the control should be added to\n     */\n    onAdd(map) {\n        if (this.styleEditor === undefined) {\n            this.styleEditor = new StyleEditorImpl_1.StyleEditorImpl(map, this.styleEditorClassOptions);\n        }\n        // disable styleEditor if using control element\n        this.styleEditor.disable();\n        return this.createUI();\n    }\n    createUI() {\n        const controlUI = L.DomUtil.create('div', 'leaflet-control-styleeditor leaflet-control leaflet-bar');\n        const controlDiv = L.DomUtil.create('a', 'leaflet-control-styleeditor-interior', controlUI);\n        controlDiv.title = this.options.strings.title;\n        const cancelUI = this.cancelUI = L.DomUtil.create('div', 'leaflet-control-styleeditor-cancel leaflet-styleeditor-hidden', controlUI);\n        cancelUI.innerHTML = this.options.strings.cancel;\n        cancelUI.title = this.options.strings.cancelTitle;\n        L.DomEvent.disableScrollPropagation(controlUI);\n        L.DomEvent.disableScrollPropagation(cancelUI);\n        L.DomEvent.disableClickPropagation(controlUI);\n        L.DomEvent.disableClickPropagation(cancelUI);\n        // toggle UI visibility\n        L.DomEvent.on(controlUI, 'click', this.toggle, this);\n        return controlUI;\n    }\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n    }\n    enable() {\n        this.isEnabled = true;\n        this.showCancelButton();\n        this.styleEditor.enable();\n    }\n    disable() {\n        if (this.isEnabled) {\n            this.isEnabled = false;\n            this.hideCancelButton();\n            this.styleEditor.disable();\n        }\n    }\n    showCancelButton() {\n        L.DomUtil.removeClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n    hideCancelButton() {\n        L.DomUtil.addClass(this.cancelUI, 'leaflet-styleeditor-hidden');\n    }\n}\nexports.StyleEditorControl = StyleEditorControl;\n"],"sourceRoot":""}